<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.12 on linux)" generated="20230708 15:01:52.519" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-556" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-556.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:01:53.831" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/ecac1c90-bbf1-4ccb-ab6f-fc30c40fee2b"}</msg>
<msg timestamp="20230708 15:01:54.562" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/ecac1c90-bbf1-4ccb-ab6f-fc30c40fee2b"}</msg>
<status status="PASS" starttime="20230708 15:01:53.830" endtime="20230708 15:01:54.562"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:01:54.567" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:01:54.563" endtime="20230708 15:01:54.567"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:01:54.567" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:01:54.644" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:01:54.644" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:01:54.567" endtime="20230708 15:01:54.644"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:01:59.882" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:01:54.645" endtime="20230708 15:01:59.883"/>
</kw>
<status status="PASS" starttime="20230708 15:01:53.829" endtime="20230708 15:01:59.883"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:01:59.883" endtime="20230708 15:02:02.122"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:02.129" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:02:02.125" endtime="20230708 15:02:02.130"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:02:02.192" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:02:02.192" level="INFO">${els} = ['element=4d5b5c00-787a-4a0c-a2b5-ea86e9633142']</msg>
<status status="PASS" starttime="20230708 15:02:02.130" endtime="20230708 15:02:02.193"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:02:02.193" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:02:02.193" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:02:02.193" endtime="20230708 15:02:02.193"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:02:02.194" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:02:02.194" endtime="20230708 15:02:02.194"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.194" endtime="20230708 15:02:02.194"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:02.195" endtime="20230708 15:02:02.195"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:02.195" endtime="20230708 15:02:02.195"/>
</branch>
<status status="PASS" starttime="20230708 15:02:02.194" endtime="20230708 15:02:02.195"/>
</if>
<status status="PASS" starttime="20230708 15:02:02.130" endtime="20230708 15:02:02.195"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:02.195" endtime="20230708 15:02:02.196"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:02.195" endtime="20230708 15:02:02.196"/>
</branch>
<status status="PASS" starttime="20230708 15:02:02.130" endtime="20230708 15:02:02.196"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:02.200" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:02:02.196" endtime="20230708 15:02:02.200"/>
</kw>
<msg timestamp="20230708 15:02:02.200" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:02:02.124" endtime="20230708 15:02:02.200"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:02.201" endtime="20230708 15:02:02.300"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.201" endtime="20230708 15:02:02.300"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:02.301" endtime="20230708 15:02:02.301"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:02.300" endtime="20230708 15:02:02.301"/>
</branch>
<status status="PASS" starttime="20230708 15:02:02.201" endtime="20230708 15:02:02.301"/>
</if>
<status status="PASS" starttime="20230708 15:02:02.123" endtime="20230708 15:02:02.301"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:02:02.310" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:02:02.302" endtime="20230708 15:02:02.310"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:02:02.310" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:02:02.310" endtime="20230708 15:02:02.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:02:02.311" endtime="20230708 15:02:02.311"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.302" endtime="20230708 15:02:02.312"/>
</kw>
<status status="PASS" starttime="20230708 15:01:53.829" endtime="20230708 15:02:02.312"/>
</kw>
<test id="s1-s1-s1-s1-s1-t1" name="Create a new booking, check-in and verify door code is displayed" line="13">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:02.315" endtime="20230708 15:02:02.315"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:02.315" endtime="20230708 15:02:02.315"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:02.316" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:02:02.315" endtime="20230708 15:02:02.316"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:02.316" endtime="20230708 15:02:02.436"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:02.548" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:02.437" endtime="20230708 15:02:02.549"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.437" endtime="20230708 15:02:02.549"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:02.549" endtime="20230708 15:02:02.800"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:02.855" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:02:02.801" endtime="20230708 15:02:02.856"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.315" endtime="20230708 15:02:02.856"/>
</branch>
<status status="PASS" starttime="20230708 15:02:02.314" endtime="20230708 15:02:02.856"/>
</if>
<status status="PASS" starttime="20230708 15:02:02.314" endtime="20230708 15:02:02.856"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:02.857" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:02:02.857" endtime="20230708 15:02:02.857"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.856" endtime="20230708 15:02:02.858"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:02:02.858" endtime="20230708 15:02:02.860"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.858" endtime="20230708 15:02:02.861"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:02.861" endtime="20230708 15:02:03.535"/>
</kw>
<status status="PASS" starttime="20230708 15:02:02.861" endtime="20230708 15:02:03.536"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:08.791" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:03.537" endtime="20230708 15:02:08.791"/>
</kw>
<status status="PASS" starttime="20230708 15:02:03.536" endtime="20230708 15:02:08.792"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:02:09.048" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:02:08.792" endtime="20230708 15:02:09.048"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:02:09.048" endtime="20230708 15:02:09.049"/>
</kw>
<status status="PASS" starttime="20230708 15:02:03.536" endtime="20230708 15:02:09.049"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:09.050" endtime="20230708 15:02:15.744"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:17.108" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:15.746" endtime="20230708 15:02:17.108"/>
</kw>
<status status="PASS" starttime="20230708 15:02:15.745" endtime="20230708 15:02:17.109"/>
</kw>
<status status="PASS" starttime="20230708 15:02:09.049" endtime="20230708 15:02:17.109"/>
</kw>
<kw name="Continue to Payment" library="booking">
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:17.110" endtime="20230708 15:02:17.381"/>
</kw>
<status status="PASS" starttime="20230708 15:02:17.109" endtime="20230708 15:02:17.381"/>
</kw>
<kw name="Select Join for Free" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//input[@value='memberRate' and @checked='']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:18.977" level="INFO">Waited for Element with selector //input[@value='memberRate' and @checked=''] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:17.383" endtime="20230708 15:02:18.978"/>
</kw>
<status status="PASS" starttime="20230708 15:02:17.382" endtime="20230708 15:02:18.978"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:18.998" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:18.979" endtime="20230708 15:02:18.999"/>
</kw>
<status status="PASS" starttime="20230708 15:02:18.979" endtime="20230708 15:02:18.999"/>
</kw>
<status status="PASS" starttime="20230708 15:02:17.382" endtime="20230708 15:02:18.999"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:02:19.346" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:02:19.002" endtime="20230708 15:02:19.373"/>
</kw>
<status status="FAIL" starttime="20230708 15:02:19.000" endtime="20230708 15:02:19.375"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.375" endtime="20230708 15:02:19.375"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.376" endtime="20230708 15:02:19.376"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.376" endtime="20230708 15:02:19.376"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.376" endtime="20230708 15:02:19.376"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.376" endtime="20230708 15:02:19.377"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.377" endtime="20230708 15:02:19.377"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.377" endtime="20230708 15:02:19.377"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.378" endtime="20230708 15:02:19.378"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:19.377" endtime="20230708 15:02:19.378"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:02:19.378" endtime="20230708 15:02:19.378"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:19.378" endtime="20230708 15:02:19.378"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:02:19.377" endtime="20230708 15:02:19.378"/>
</if>
<status status="FAIL" starttime="20230708 15:02:19.000" endtime="20230708 15:02:19.379"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.379" endtime="20230708 15:02:19.379"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.380" endtime="20230708 15:02:19.380"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.380" endtime="20230708 15:02:19.380"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.380" endtime="20230708 15:02:19.380"/>
</kw>
<kw name="Fill Check in Slide" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.380" endtime="20230708 15:02:19.380"/>
</kw>
<kw name="Click Save and Sign Button and Sign if Required" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.381" endtime="20230708 15:02:19.381"/>
</kw>
<kw name="Complete Check in" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:19.381" endtime="20230708 15:02:19.381"/>
</kw>
<kw name="Wait Until Door Code is Available" library="checkin">
<status status="NOT RUN" starttime="20230708 15:02:19.381" endtime="20230708 15:02:19.381"/>
</kw>
<kw name="Check Door Code and verify it is not empty" library="checkin">
<status status="NOT RUN" starttime="20230708 15:02:19.381" endtime="20230708 15:02:19.381"/>
</kw>
<kw name="Verify Page Elements after Check-in" library="checkin">
<status status="NOT RUN" starttime="20230708 15:02:19.382" endtime="20230708 15:02:19.382"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230708 15:02:02.313" endtime="20230708 15:02:19.382">TypeError: expected string or bytes-like object</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:02:20.024" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:02:19.388" endtime="20230708 15:02:20.025"/>
</kw>
<status status="FAIL" starttime="20230708 15:01:52.550" endtime="20230708 15:02:20.025"/>
</suite>
<suite id="s1-s1-s1-s1-s2" name="BUI2-557" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s1-s2-t1" name="Verify UI When in booker view" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:02:20.058" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0372a237-18c0-46c6-8c16-c4459c179a38"}</msg>
<msg timestamp="20230708 15:02:20.704" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0372a237-18c0-46c6-8c16-c4459c179a38"}</msg>
<status status="PASS" starttime="20230708 15:02:20.057" endtime="20230708 15:02:20.704"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:20.707" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:02:20.704" endtime="20230708 15:02:20.707"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:02:20.708" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:02:20.765" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:02:20.765" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:02:20.707" endtime="20230708 15:02:20.765"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:02:24.680" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:02:20.766" endtime="20230708 15:02:24.680"/>
</kw>
<status status="PASS" starttime="20230708 15:02:20.057" endtime="20230708 15:02:24.680"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:02:24.681" endtime="20230708 15:02:26.171"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:26.176" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:02:26.173" endtime="20230708 15:02:26.176"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:02:26.235" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:02:26.235" level="INFO">${els} = ['element=5ea44927-dd72-4181-b559-904a5d746496']</msg>
<status status="PASS" starttime="20230708 15:02:26.177" endtime="20230708 15:02:26.235"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:02:26.236" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:02:26.236" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:02:26.236" endtime="20230708 15:02:26.236"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:02:26.239" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:02:26.238" endtime="20230708 15:02:26.239"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.236" endtime="20230708 15:02:26.239"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:26.239" endtime="20230708 15:02:26.239"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:26.239" endtime="20230708 15:02:26.239"/>
</branch>
<status status="PASS" starttime="20230708 15:02:26.236" endtime="20230708 15:02:26.239"/>
</if>
<status status="PASS" starttime="20230708 15:02:26.177" endtime="20230708 15:02:26.240"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:26.240" endtime="20230708 15:02:26.240"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:26.240" endtime="20230708 15:02:26.240"/>
</branch>
<status status="PASS" starttime="20230708 15:02:26.176" endtime="20230708 15:02:26.240"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:26.244" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:02:26.241" endtime="20230708 15:02:26.244"/>
</kw>
<msg timestamp="20230708 15:02:26.244" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:02:26.172" endtime="20230708 15:02:26.245"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:26.245" endtime="20230708 15:02:26.331"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.245" endtime="20230708 15:02:26.331"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:26.332" endtime="20230708 15:02:26.332"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:26.332" endtime="20230708 15:02:26.332"/>
</branch>
<status status="PASS" starttime="20230708 15:02:26.245" endtime="20230708 15:02:26.332"/>
</if>
<status status="PASS" starttime="20230708 15:02:26.172" endtime="20230708 15:02:26.333"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:02:26.336" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:02:26.333" endtime="20230708 15:02:26.336"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:02:26.337" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:02:26.336" endtime="20230708 15:02:26.337"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:02:26.337" endtime="20230708 15:02:26.337"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.333" endtime="20230708 15:02:26.338"/>
</kw>
<status status="PASS" starttime="20230708 15:02:20.056" endtime="20230708 15:02:26.338"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:26.339" endtime="20230708 15:02:26.339"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:26.339" endtime="20230708 15:02:26.339"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:26.340" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:02:26.340" endtime="20230708 15:02:26.340"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:26.340" endtime="20230708 15:02:26.457"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:26.472" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:26.458" endtime="20230708 15:02:26.472"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.457" endtime="20230708 15:02:26.472"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:26.473" endtime="20230708 15:02:26.828"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:26.928" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:02:26.828" endtime="20230708 15:02:26.928"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.339" endtime="20230708 15:02:26.929"/>
</branch>
<status status="PASS" starttime="20230708 15:02:26.338" endtime="20230708 15:02:26.929"/>
</if>
<status status="PASS" starttime="20230708 15:02:26.338" endtime="20230708 15:02:26.929"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:26.931" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:02:26.930" endtime="20230708 15:02:26.931"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.929" endtime="20230708 15:02:26.932"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:02:26.933" endtime="20230708 15:02:26.933"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.932" endtime="20230708 15:02:26.934"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:26.934" endtime="20230708 15:02:27.688"/>
</kw>
<status status="PASS" starttime="20230708 15:02:26.934" endtime="20230708 15:02:27.688"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:31.886" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:27.690" endtime="20230708 15:02:31.886"/>
</kw>
<status status="PASS" starttime="20230708 15:02:27.689" endtime="20230708 15:02:31.886"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:02:32.145" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:02:31.887" endtime="20230708 15:02:32.145"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:02:32.145" endtime="20230708 15:02:32.146"/>
</kw>
<status status="PASS" starttime="20230708 15:02:27.688" endtime="20230708 15:02:32.146"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:32.147" endtime="20230708 15:02:38.088"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:39.369" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:38.089" endtime="20230708 15:02:39.369"/>
</kw>
<status status="PASS" starttime="20230708 15:02:38.088" endtime="20230708 15:02:39.370"/>
</kw>
<status status="PASS" starttime="20230708 15:02:32.146" endtime="20230708 15:02:39.370"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:02:39.411" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:02:39.411" level="INFO">${elements} = ['element=f727a122-a8bf-4f36-a836-6bc1cb6c7adf']</msg>
<status status="PASS" starttime="20230708 15:02:39.371" endtime="20230708 15:02:39.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:02:39.412" level="INFO">${first_element} = element=f727a122-a8bf-4f36-a836-6bc1cb6c7adf</msg>
<status status="PASS" starttime="20230708 15:02:39.412" endtime="20230708 15:02:39.412"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:39.412" endtime="20230708 15:02:39.656"/>
</kw>
<status status="PASS" starttime="20230708 15:02:39.371" endtime="20230708 15:02:39.657"/>
</kw>
<status status="PASS" starttime="20230708 15:02:39.370" endtime="20230708 15:02:39.657"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:39.658" endtime="20230708 15:02:41.820"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:41.839" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:41.821" endtime="20230708 15:02:41.840"/>
</kw>
<status status="PASS" starttime="20230708 15:02:41.820" endtime="20230708 15:02:41.840"/>
</kw>
<status status="PASS" starttime="20230708 15:02:39.657" endtime="20230708 15:02:41.840"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:41.841" endtime="20230708 15:02:42.143"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:42.420" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:42.144" endtime="20230708 15:02:42.420"/>
</kw>
<status status="PASS" starttime="20230708 15:02:42.143" endtime="20230708 15:02:42.420"/>
</kw>
<status status="PASS" starttime="20230708 15:02:41.840" endtime="20230708 15:02:42.421"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:42.421" endtime="20230708 15:02:42.592"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:42.610" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:42.593" endtime="20230708 15:02:42.610"/>
</kw>
<status status="PASS" starttime="20230708 15:02:42.592" endtime="20230708 15:02:42.611"/>
</kw>
<status status="PASS" starttime="20230708 15:02:42.421" endtime="20230708 15:02:42.611"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:42.612" endtime="20230708 15:02:42.937"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:43.084" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:42.938" endtime="20230708 15:02:43.084"/>
</kw>
<status status="PASS" starttime="20230708 15:02:42.938" endtime="20230708 15:02:43.085"/>
</kw>
<status status="PASS" starttime="20230708 15:02:42.611" endtime="20230708 15:02:43.085"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:43.086" endtime="20230708 15:02:43.470"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:43.495" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:43.471" endtime="20230708 15:02:43.495"/>
</kw>
<status status="PASS" starttime="20230708 15:02:43.470" endtime="20230708 15:02:43.495"/>
</kw>
<status status="PASS" starttime="20230708 15:02:43.085" endtime="20230708 15:02:43.495"/>
</kw>
<status status="PASS" starttime="20230708 15:02:39.657" endtime="20230708 15:02:43.496"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:02:43.754" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:02:43.498" endtime="20230708 15:02:43.755"/>
</kw>
<status status="FAIL" starttime="20230708 15:02:43.497" endtime="20230708 15:02:43.756"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.756" endtime="20230708 15:02:43.757"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.757" endtime="20230708 15:02:43.757"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.757" endtime="20230708 15:02:43.757"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.757" endtime="20230708 15:02:43.757"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.758" endtime="20230708 15:02:43.758"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.758" endtime="20230708 15:02:43.758"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.758" endtime="20230708 15:02:43.758"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.759" endtime="20230708 15:02:43.759"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:43.758" endtime="20230708 15:02:43.759"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:02:43.759" endtime="20230708 15:02:43.759"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:43.759" endtime="20230708 15:02:43.759"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:02:43.758" endtime="20230708 15:02:43.760"/>
</if>
<status status="FAIL" starttime="20230708 15:02:43.496" endtime="20230708 15:02:43.760"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.760" endtime="20230708 15:02:43.761"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.761" endtime="20230708 15:02:43.761"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.761" endtime="20230708 15:02:43.761"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.761" endtime="20230708 15:02:43.761"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.761" endtime="20230708 15:02:43.762"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.762" endtime="20230708 15:02:43.762"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.762" endtime="20230708 15:02:43.762"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230708 15:02:43.762" endtime="20230708 15:02:43.762"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.763" endtime="20230708 15:02:43.763"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${False}</arg>
<status status="NOT RUN" starttime="20230708 15:02:43.763" endtime="20230708 15:02:43.763"/>
</kw>
<kw name="Open Edit booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.763" endtime="20230708 15:02:43.763"/>
</kw>
<kw name="Verify All information is disbled" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.763" endtime="20230708 15:02:43.763"/>
</kw>
<kw name="Check Add organization check box" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.764" endtime="20230708 15:02:43.764"/>
</kw>
<kw name="Fill organization info" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.764" endtime="20230708 15:02:43.764"/>
</kw>
<kw name="Verify all information are save" library="booking">
<status status="NOT RUN" starttime="20230708 15:02:43.764" endtime="20230708 15:02:43.764"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:02:44.463" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:02:43.765" endtime="20230708 15:02:44.463"/>
</kw>
<status status="FAIL" starttime="20230708 15:02:20.056" endtime="20230708 15:02:44.464">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s2-t2" name="Validation shows msg for fields marked" line="37">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:02:44.470" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/7342a57b-a5be-4d81-a7ff-97481130a1e8"}</msg>
<msg timestamp="20230708 15:02:45.138" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/7342a57b-a5be-4d81-a7ff-97481130a1e8"}</msg>
<status status="PASS" starttime="20230708 15:02:44.469" endtime="20230708 15:02:45.138"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:02:45.139" endtime="20230708 15:02:45.139"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:02:45.140" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:02:45.206" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:02:45.206" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:02:45.139" endtime="20230708 15:02:45.206"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:02:48.002" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:02:45.207" endtime="20230708 15:02:48.002"/>
</kw>
<status status="PASS" starttime="20230708 15:02:44.469" endtime="20230708 15:02:48.003"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:02:48.003" endtime="20230708 15:02:49.162"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:49.167" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:02:49.164" endtime="20230708 15:02:49.167"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:02:49.219" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:02:49.219" level="INFO">${els} = ['element=20ac437a-05ad-4520-8722-a0ff66b064d0']</msg>
<status status="PASS" starttime="20230708 15:02:49.167" endtime="20230708 15:02:49.220"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:02:49.220" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:02:49.220" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:02:49.220" endtime="20230708 15:02:49.220"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:02:49.221" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:02:49.221" endtime="20230708 15:02:49.221"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.221" endtime="20230708 15:02:49.221"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:49.222" endtime="20230708 15:02:49.222"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:49.221" endtime="20230708 15:02:49.222"/>
</branch>
<status status="PASS" starttime="20230708 15:02:49.220" endtime="20230708 15:02:49.222"/>
</if>
<status status="PASS" starttime="20230708 15:02:49.167" endtime="20230708 15:02:49.222"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:02:49.222" endtime="20230708 15:02:49.222"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:49.222" endtime="20230708 15:02:49.223"/>
</branch>
<status status="PASS" starttime="20230708 15:02:49.167" endtime="20230708 15:02:49.223"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:02:49.228" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:02:49.223" endtime="20230708 15:02:49.228"/>
</kw>
<msg timestamp="20230708 15:02:49.228" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:02:49.163" endtime="20230708 15:02:49.228"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:49.229" endtime="20230708 15:02:49.338"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.229" endtime="20230708 15:02:49.339"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:49.339" endtime="20230708 15:02:49.339"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:49.339" endtime="20230708 15:02:49.339"/>
</branch>
<status status="PASS" starttime="20230708 15:02:49.229" endtime="20230708 15:02:49.339"/>
</if>
<status status="PASS" starttime="20230708 15:02:49.163" endtime="20230708 15:02:49.340"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:02:49.343" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:02:49.340" endtime="20230708 15:02:49.343"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:02:49.344" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:02:49.343" endtime="20230708 15:02:49.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:02:49.344" endtime="20230708 15:02:49.344"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.340" endtime="20230708 15:02:49.345"/>
</kw>
<status status="PASS" starttime="20230708 15:02:44.468" endtime="20230708 15:02:49.345"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:02:49.346" endtime="20230708 15:02:49.346"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:02:49.346" endtime="20230708 15:02:49.347"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:49.347" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:02:49.347" endtime="20230708 15:02:49.347"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:49.347" endtime="20230708 15:02:49.471"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:49.485" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:49.472" endtime="20230708 15:02:49.485"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.472" endtime="20230708 15:02:49.485"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:49.485" endtime="20230708 15:02:49.791"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:49.959" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:02:49.792" endtime="20230708 15:02:49.959"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.347" endtime="20230708 15:02:49.959"/>
</branch>
<status status="PASS" starttime="20230708 15:02:49.346" endtime="20230708 15:02:49.959"/>
</if>
<status status="PASS" starttime="20230708 15:02:49.345" endtime="20230708 15:02:49.960"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:02:49.961" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:02:49.960" endtime="20230708 15:02:49.961"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.960" endtime="20230708 15:02:49.961"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:02:49.962" endtime="20230708 15:02:49.962"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.961" endtime="20230708 15:02:49.962"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:49.963" endtime="20230708 15:02:50.545"/>
</kw>
<status status="PASS" starttime="20230708 15:02:49.963" endtime="20230708 15:02:50.545"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:02:53.894" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:02:50.550" endtime="20230708 15:02:53.896"/>
</kw>
<status status="PASS" starttime="20230708 15:02:50.546" endtime="20230708 15:02:53.896"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:02:54.151" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:02:53.896" endtime="20230708 15:02:54.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:02:54.151" endtime="20230708 15:02:54.151"/>
</kw>
<status status="PASS" starttime="20230708 15:02:50.545" endtime="20230708 15:02:54.152"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:02:54.153" endtime="20230708 15:03:00.407"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:01.469" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:00.408" endtime="20230708 15:03:01.469"/>
</kw>
<status status="PASS" starttime="20230708 15:03:00.408" endtime="20230708 15:03:01.470"/>
</kw>
<status status="PASS" starttime="20230708 15:02:54.152" endtime="20230708 15:03:01.470"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:03:01.500" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:03:01.500" level="INFO">${elements} = ['element=63219a42-60ad-41e5-b0ba-dcf2a088856c']</msg>
<status status="PASS" starttime="20230708 15:03:01.471" endtime="20230708 15:03:01.500"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:03:01.501" level="INFO">${first_element} = element=63219a42-60ad-41e5-b0ba-dcf2a088856c</msg>
<status status="PASS" starttime="20230708 15:03:01.501" endtime="20230708 15:03:01.501"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:01.501" endtime="20230708 15:03:01.672"/>
</kw>
<status status="PASS" starttime="20230708 15:03:01.471" endtime="20230708 15:03:01.672"/>
</kw>
<status status="PASS" starttime="20230708 15:03:01.470" endtime="20230708 15:03:01.672"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:01.674" endtime="20230708 15:03:03.592"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:03.752" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:03.593" endtime="20230708 15:03:03.752"/>
</kw>
<status status="PASS" starttime="20230708 15:03:03.592" endtime="20230708 15:03:03.753"/>
</kw>
<status status="PASS" starttime="20230708 15:03:01.673" endtime="20230708 15:03:03.753"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:03.754" endtime="20230708 15:03:03.920"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:03.938" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:03.921" endtime="20230708 15:03:03.938"/>
</kw>
<status status="PASS" starttime="20230708 15:03:03.921" endtime="20230708 15:03:03.938"/>
</kw>
<status status="PASS" starttime="20230708 15:03:03.753" endtime="20230708 15:03:03.938"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:03.939" endtime="20230708 15:03:04.158"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:04.178" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:04.159" endtime="20230708 15:03:04.178"/>
</kw>
<status status="PASS" starttime="20230708 15:03:04.158" endtime="20230708 15:03:04.178"/>
</kw>
<status status="PASS" starttime="20230708 15:03:03.939" endtime="20230708 15:03:04.179"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:04.180" endtime="20230708 15:03:04.719"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:04.739" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:04.721" endtime="20230708 15:03:04.740"/>
</kw>
<status status="PASS" starttime="20230708 15:03:04.720" endtime="20230708 15:03:04.740"/>
</kw>
<status status="PASS" starttime="20230708 15:03:04.179" endtime="20230708 15:03:04.740"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:04.741" endtime="20230708 15:03:04.892"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:04.909" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:04.893" endtime="20230708 15:03:04.909"/>
</kw>
<status status="PASS" starttime="20230708 15:03:04.892" endtime="20230708 15:03:04.910"/>
</kw>
<status status="PASS" starttime="20230708 15:03:04.740" endtime="20230708 15:03:04.910"/>
</kw>
<status status="PASS" starttime="20230708 15:03:01.673" endtime="20230708 15:03:04.910"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:03:05.236" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:03:04.912" endtime="20230708 15:03:05.237"/>
</kw>
<status status="FAIL" starttime="20230708 15:03:04.911" endtime="20230708 15:03:05.238"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.238" endtime="20230708 15:03:05.238"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.238" endtime="20230708 15:03:05.239"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.239" endtime="20230708 15:03:05.239"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.239" endtime="20230708 15:03:05.239"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.239" endtime="20230708 15:03:05.239"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.240" endtime="20230708 15:03:05.240"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.240" endtime="20230708 15:03:05.240"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.240" endtime="20230708 15:03:05.241"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:05.240" endtime="20230708 15:03:05.241"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:03:05.241" endtime="20230708 15:03:05.241"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:05.241" endtime="20230708 15:03:05.241"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:03:05.240" endtime="20230708 15:03:05.241"/>
</if>
<status status="FAIL" starttime="20230708 15:03:04.910" endtime="20230708 15:03:05.242"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.242" endtime="20230708 15:03:05.242"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.242" endtime="20230708 15:03:05.242"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.243" endtime="20230708 15:03:05.243"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.243" endtime="20230708 15:03:05.243"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.243" endtime="20230708 15:03:05.243"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.243" endtime="20230708 15:03:05.243"/>
</kw>
<kw name="Verify msg The field is required" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.244" endtime="20230708 15:03:05.244"/>
</kw>
<kw name="Fill invalid phone format" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.244" endtime="20230708 15:03:05.244"/>
</kw>
<kw name="Verify msg &quot;Invalid phone number!&quot;" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.244" endtime="20230708 15:03:05.244"/>
</kw>
<kw name="Fill invalid SSN" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.244" endtime="20230708 15:03:05.245"/>
</kw>
<kw name="Verify msg &quot;Please check! This is not a Finnish social security number&quot;" library="booking">
<status status="NOT RUN" starttime="20230708 15:03:05.245" endtime="20230708 15:03:05.245"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:03:05.921" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:03:05.248" endtime="20230708 15:03:05.921"/>
</kw>
<status status="FAIL" starttime="20230708 15:02:44.467" endtime="20230708 15:03:05.921">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s2-t3" name="Showing imported passport when the National is not Finland" line="59">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:03:05.928" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6612c67e-21fd-4e00-8a9c-c08047ccbf92"}</msg>
<msg timestamp="20230708 15:03:06.585" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6612c67e-21fd-4e00-8a9c-c08047ccbf92"}</msg>
<status status="PASS" starttime="20230708 15:03:05.927" endtime="20230708 15:03:06.585"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:03:06.585" endtime="20230708 15:03:06.586"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:03:06.587" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:03:06.640" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:03:06.640" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:03:06.586" endtime="20230708 15:03:06.640"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:03:09.513" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:03:06.640" endtime="20230708 15:03:09.514"/>
</kw>
<status status="PASS" starttime="20230708 15:03:05.926" endtime="20230708 15:03:09.515"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:03:09.515" endtime="20230708 15:03:11.636"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:03:11.642" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:03:11.638" endtime="20230708 15:03:11.642"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:03:11.694" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:03:11.694" level="INFO">${els} = ['element=dc723ca6-a55d-4509-a4f4-2fa6a7fddaf2']</msg>
<status status="PASS" starttime="20230708 15:03:11.643" endtime="20230708 15:03:11.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:03:11.695" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:03:11.695" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:03:11.695" endtime="20230708 15:03:11.695"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:03:11.696" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:03:11.696" endtime="20230708 15:03:11.696"/>
</kw>
<status status="PASS" starttime="20230708 15:03:11.696" endtime="20230708 15:03:11.697"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:03:11.697" endtime="20230708 15:03:11.697"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:11.697" endtime="20230708 15:03:11.697"/>
</branch>
<status status="PASS" starttime="20230708 15:03:11.696" endtime="20230708 15:03:11.697"/>
</if>
<status status="PASS" starttime="20230708 15:03:11.643" endtime="20230708 15:03:11.697"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:03:11.698" endtime="20230708 15:03:11.698"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:11.697" endtime="20230708 15:03:11.698"/>
</branch>
<status status="PASS" starttime="20230708 15:03:11.643" endtime="20230708 15:03:11.698"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:03:11.701" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:03:11.698" endtime="20230708 15:03:11.701"/>
</kw>
<msg timestamp="20230708 15:03:11.702" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:03:11.638" endtime="20230708 15:03:11.702"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:11.702" endtime="20230708 15:03:11.787"/>
</kw>
<status status="PASS" starttime="20230708 15:03:11.702" endtime="20230708 15:03:11.787"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:03:11.788" endtime="20230708 15:03:11.788"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:11.787" endtime="20230708 15:03:11.788"/>
</branch>
<status status="PASS" starttime="20230708 15:03:11.702" endtime="20230708 15:03:11.788"/>
</if>
<status status="PASS" starttime="20230708 15:03:11.637" endtime="20230708 15:03:11.788"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:03:11.793" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:03:11.789" endtime="20230708 15:03:11.793"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:03:11.794" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:03:11.793" endtime="20230708 15:03:11.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:03:11.794" endtime="20230708 15:03:11.794"/>
</kw>
<status status="PASS" starttime="20230708 15:03:11.788" endtime="20230708 15:03:11.794"/>
</kw>
<status status="PASS" starttime="20230708 15:03:05.926" endtime="20230708 15:03:11.794"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:03:11.796" endtime="20230708 15:03:11.796"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:11.795" endtime="20230708 15:03:11.796"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:03:11.798" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:03:11.797" endtime="20230708 15:03:11.798"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:11.798" endtime="20230708 15:03:11.913"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:11.928" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:11.914" endtime="20230708 15:03:11.928"/>
</kw>
<status status="PASS" starttime="20230708 15:03:11.913" endtime="20230708 15:03:11.929"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:11.929" endtime="20230708 15:03:12.114"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:12.226" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:03:12.115" endtime="20230708 15:03:12.226"/>
</kw>
<status status="PASS" starttime="20230708 15:03:11.796" endtime="20230708 15:03:12.226"/>
</branch>
<status status="PASS" starttime="20230708 15:03:11.795" endtime="20230708 15:03:12.227"/>
</if>
<status status="PASS" starttime="20230708 15:03:11.795" endtime="20230708 15:03:12.227"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:03:12.228" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:03:12.228" endtime="20230708 15:03:12.228"/>
</kw>
<status status="PASS" starttime="20230708 15:03:12.227" endtime="20230708 15:03:12.228"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:12.229" endtime="20230708 15:03:12.233"/>
</kw>
<status status="PASS" starttime="20230708 15:03:12.228" endtime="20230708 15:03:12.233"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:12.235" endtime="20230708 15:03:12.721"/>
</kw>
<status status="PASS" starttime="20230708 15:03:12.233" endtime="20230708 15:03:12.721"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:15.977" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:12.722" endtime="20230708 15:03:15.978"/>
</kw>
<status status="PASS" starttime="20230708 15:03:12.722" endtime="20230708 15:03:15.978"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:03:16.234" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:03:15.978" endtime="20230708 15:03:16.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:16.235" endtime="20230708 15:03:16.235"/>
</kw>
<status status="PASS" starttime="20230708 15:03:12.721" endtime="20230708 15:03:16.236"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:16.236" endtime="20230708 15:03:21.672"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:22.875" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:21.673" endtime="20230708 15:03:22.876"/>
</kw>
<status status="PASS" starttime="20230708 15:03:21.673" endtime="20230708 15:03:22.876"/>
</kw>
<status status="PASS" starttime="20230708 15:03:16.236" endtime="20230708 15:03:22.876"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:03:22.897" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:03:22.897" level="INFO">${elements} = ['element=f7723fd5-212a-49ca-8d11-a398eb3b9395']</msg>
<status status="PASS" starttime="20230708 15:03:22.878" endtime="20230708 15:03:22.897"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:03:22.898" level="INFO">${first_element} = element=f7723fd5-212a-49ca-8d11-a398eb3b9395</msg>
<status status="PASS" starttime="20230708 15:03:22.897" endtime="20230708 15:03:22.898"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:22.898" endtime="20230708 15:03:23.036"/>
</kw>
<status status="PASS" starttime="20230708 15:03:22.877" endtime="20230708 15:03:23.036"/>
</kw>
<status status="PASS" starttime="20230708 15:03:22.877" endtime="20230708 15:03:23.037"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:23.038" endtime="20230708 15:03:25.030"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:25.050" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:25.031" endtime="20230708 15:03:25.050"/>
</kw>
<status status="PASS" starttime="20230708 15:03:25.031" endtime="20230708 15:03:25.051"/>
</kw>
<status status="PASS" starttime="20230708 15:03:23.037" endtime="20230708 15:03:25.051"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:25.052" endtime="20230708 15:03:25.444"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:25.881" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:25.445" endtime="20230708 15:03:25.881"/>
</kw>
<status status="PASS" starttime="20230708 15:03:25.444" endtime="20230708 15:03:25.881"/>
</kw>
<status status="PASS" starttime="20230708 15:03:25.051" endtime="20230708 15:03:25.881"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:25.882" endtime="20230708 15:03:26.243"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:26.258" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:26.244" endtime="20230708 15:03:26.258"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.243" endtime="20230708 15:03:26.259"/>
</kw>
<status status="PASS" starttime="20230708 15:03:25.882" endtime="20230708 15:03:26.259"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:26.260" endtime="20230708 15:03:26.515"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:26.538" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:26.516" endtime="20230708 15:03:26.538"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.515" endtime="20230708 15:03:26.538"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.260" endtime="20230708 15:03:26.538"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:26.539" endtime="20230708 15:03:26.963"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:26.982" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:26.964" endtime="20230708 15:03:26.982"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.963" endtime="20230708 15:03:26.982"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.539" endtime="20230708 15:03:26.983"/>
</kw>
<status status="PASS" starttime="20230708 15:03:23.037" endtime="20230708 15:03:26.983"/>
</kw>
<kw name="Fill contact info with the National not Finland" library="booking">
<doc>TBD: Use test data instead of hardcoded values</doc>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:26.984" endtime="20230708 15:03:27.533"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:27.534" level="INFO">Fills the text 'Mos' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:27.533" endtime="20230708 15:03:27.692"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.984" endtime="20230708 15:03:27.693"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:27.697" endtime="20230708 15:03:27.950"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:27.952" level="INFO">Fills the text 'Def' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:27.951" endtime="20230708 15:03:28.061"/>
</kw>
<status status="PASS" starttime="20230708 15:03:27.696" endtime="20230708 15:03:28.064"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:28.066" endtime="20230708 15:03:28.266"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:28.267" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:28.267" endtime="20230708 15:03:28.393"/>
</kw>
<status status="PASS" starttime="20230708 15:03:28.065" endtime="20230708 15:03:28.393"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(@id,'popover-trigger-')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:28.394" endtime="20230708 15:03:29.834"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=[object Object]FR</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:29.834" endtime="20230708 15:03:30.496"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:30.498" endtime="20230708 15:03:30.592"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:30.593" level="INFO">Fills the text '915036410' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:30.593" endtime="20230708 15:03:30.628"/>
</kw>
<status status="PASS" starttime="20230708 15:03:30.497" endtime="20230708 15:03:30.628"/>
</kw>
<status status="PASS" starttime="20230708 15:03:26.983" endtime="20230708 15:03:30.629"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:30.629" endtime="20230708 15:03:30.805"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:30.805" endtime="20230708 15:03:30.960"/>
</kw>
<status status="PASS" starttime="20230708 15:03:30.629" endtime="20230708 15:03:30.960"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:30.961" endtime="20230708 15:03:31.084"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:31.085" endtime="20230708 15:03:31.302"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:31.303" endtime="20230708 15:03:33.537"/>
</kw>
<status status="PASS" starttime="20230708 15:03:30.960" endtime="20230708 15:03:33.537"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:38.671" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:33.541" endtime="20230708 15:03:38.672"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:38.672" endtime="20230708 15:03:41.315"/>
</kw>
<status status="PASS" starttime="20230708 15:03:33.539" endtime="20230708 15:03:41.315"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:44.082" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:41.316" endtime="20230708 15:03:44.082"/>
</kw>
<status status="PASS" starttime="20230708 15:03:41.316" endtime="20230708 15:03:44.083"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:44.098" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:44.084" endtime="20230708 15:03:44.099"/>
</kw>
<status status="PASS" starttime="20230708 15:03:44.083" endtime="20230708 15:03:44.099"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:44.099" endtime="20230708 15:03:44.742"/>
</kw>
<status status="PASS" starttime="20230708 15:03:44.083" endtime="20230708 15:03:44.742"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230708 15:03:44.970" level="INFO">Text: 'Booking number: 997903416'</msg>
<msg timestamp="20230708 15:03:44.970" level="INFO">${str} = Booking number: 997903416</msg>
<status status="PASS" starttime="20230708 15:03:44.743" endtime="20230708 15:03:44.970"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:44.970" endtime="20230708 15:03:44.971"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230708 15:03:44.976" level="INFO">${str} = Booking number: 997903416</msg>
<status status="PASS" starttime="20230708 15:03:44.971" endtime="20230708 15:03:44.976"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230708 15:03:44.976" level="INFO">${str} = Booking number: 997903416</msg>
<status status="PASS" starttime="20230708 15:03:44.976" endtime="20230708 15:03:44.976"/>
</kw>
<status status="PASS" starttime="20230708 15:03:44.743" endtime="20230708 15:03:44.977"/>
</kw>
<status status="PASS" starttime="20230708 15:03:41.315" endtime="20230708 15:03:44.977"/>
</kw>
<status status="PASS" starttime="20230708 15:03:33.538" endtime="20230708 15:03:44.977"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:44.998" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:44.981" endtime="20230708 15:03:44.998"/>
</kw>
<status status="PASS" starttime="20230708 15:03:44.981" endtime="20230708 15:03:44.999"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:44.999" endtime="20230708 15:03:45.245"/>
</kw>
<status status="PASS" starttime="20230708 15:03:44.980" endtime="20230708 15:03:45.246"/>
</kw>
<kw name="Fill Booker Info with the national is not Finland" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=passportNumber</arg>
<arg>A42354623546235</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:45.247" endtime="20230708 15:03:46.149"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:46.150" level="INFO">Fills the text 'A42354623546235' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:46.149" endtime="20230708 15:03:46.224"/>
</kw>
<status status="PASS" starttime="20230708 15:03:45.246" endtime="20230708 15:03:46.224"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=city</arg>
<arg>${city}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:46.225" endtime="20230708 15:03:46.451"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:46.452" level="INFO">Fills the text 'Ho Chi Minh City' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:46.451" endtime="20230708 15:03:46.509"/>
</kw>
<status status="PASS" starttime="20230708 15:03:46.224" endtime="20230708 15:03:46.510"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=address</arg>
<arg>${address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:46.511" endtime="20230708 15:03:46.682"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:46.683" level="INFO">Fills the text 'Address 123' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:46.683" endtime="20230708 15:03:46.735"/>
</kw>
<status status="PASS" starttime="20230708 15:03:46.510" endtime="20230708 15:03:46.735"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=postalCode</arg>
<arg>${postalCode}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:46.736" endtime="20230708 15:03:46.886"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:03:46.887" level="INFO">Fills the text '00700' in the given field.</msg>
<status status="PASS" starttime="20230708 15:03:46.887" endtime="20230708 15:03:46.941"/>
</kw>
<status status="PASS" starttime="20230708 15:03:46.735" endtime="20230708 15:03:46.942"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and Sign']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:46.943" endtime="20230708 15:03:47.195"/>
</kw>
<status status="PASS" starttime="20230708 15:03:45.246" endtime="20230708 15:03:47.196"/>
</kw>
<kw name="Click Save and Sign Button" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and Sign']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:47.197" endtime="20230708 15:03:47.299"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.196" endtime="20230708 15:03:47.299"/>
</kw>
<kw name="Verify booker information with national" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='passportNumber']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:47.313" level="INFO">Waited for Element with selector //input[@id='passportNumber'] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:47.301" endtime="20230708 15:03:47.314"/>
</kw>
<msg timestamp="20230708 15:03:47.314" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230708 15:03:47.301" endtime="20230708 15:03:47.314"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:47.314" endtime="20230708 15:03:47.316"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230708 15:03:47.317" endtime="20230708 15:03:47.318"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.316" endtime="20230708 15:03:47.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:47.319" endtime="20230708 15:03:47.320"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.300" endtime="20230708 15:03:47.324"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='city']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:47.731" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:47.325" endtime="20230708 15:03:47.731"/>
</kw>
<msg timestamp="20230708 15:03:47.732" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230708 15:03:47.325" endtime="20230708 15:03:47.732"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:47.732" endtime="20230708 15:03:47.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230708 15:03:47.733" endtime="20230708 15:03:47.734"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.733" endtime="20230708 15:03:47.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:47.734" endtime="20230708 15:03:47.734"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.324" endtime="20230708 15:03:47.735"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='address']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:47.811" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:47.736" endtime="20230708 15:03:47.811"/>
</kw>
<msg timestamp="20230708 15:03:47.811" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230708 15:03:47.735" endtime="20230708 15:03:47.811"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:47.811" endtime="20230708 15:03:47.812"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230708 15:03:47.813" endtime="20230708 15:03:47.814"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.812" endtime="20230708 15:03:47.814"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:47.814" endtime="20230708 15:03:47.815"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.735" endtime="20230708 15:03:47.815"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='postalCode']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:47.842" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:47.816" endtime="20230708 15:03:47.842"/>
</kw>
<msg timestamp="20230708 15:03:47.843" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230708 15:03:47.816" endtime="20230708 15:03:47.843"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:47.843" endtime="20230708 15:03:47.843"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230708 15:03:47.844" endtime="20230708 15:03:47.845"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.844" endtime="20230708 15:03:47.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:47.845" endtime="20230708 15:03:47.846"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.815" endtime="20230708 15:03:47.846"/>
</kw>
<status status="PASS" starttime="20230708 15:03:47.299" endtime="20230708 15:03:47.846"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:03:48.626" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:03:47.848" endtime="20230708 15:03:48.626"/>
</kw>
<status status="PASS" starttime="20230708 15:03:05.925" endtime="20230708 15:03:48.627"/>
</test>
<status status="FAIL" starttime="20230708 15:02:20.034" endtime="20230708 15:03:48.631"/>
</suite>
<suite id="s1-s1-s1-s1-s3" name="BUI2-558" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-558.robot">
<test id="s1-s1-s1-s1-s3-t1" name="Verify Page title when marking someone else as a guest" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:03:48.660" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/e9e6d194-3d2d-47d1-bf0a-d1452681c4c3"}</msg>
<msg timestamp="20230708 15:03:49.338" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/e9e6d194-3d2d-47d1-bf0a-d1452681c4c3"}</msg>
<status status="PASS" starttime="20230708 15:03:48.659" endtime="20230708 15:03:49.339"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:03:49.342" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:03:49.339" endtime="20230708 15:03:49.342"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:03:49.343" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:03:49.409" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:03:49.409" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:03:49.343" endtime="20230708 15:03:49.410"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:03:52.122" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:03:49.410" endtime="20230708 15:03:52.122"/>
</kw>
<status status="PASS" starttime="20230708 15:03:48.658" endtime="20230708 15:03:52.122"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:03:52.123" endtime="20230708 15:03:53.652"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:03:53.658" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:03:53.655" endtime="20230708 15:03:53.659"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:03:53.713" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:03:53.713" level="INFO">${els} = ['element=58a06cf4-a354-4fae-a2ec-8b83f4b13f1e']</msg>
<status status="PASS" starttime="20230708 15:03:53.659" endtime="20230708 15:03:53.713"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:03:53.714" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:03:53.714" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:03:53.714" endtime="20230708 15:03:53.714"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:03:53.715" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:03:53.715" endtime="20230708 15:03:53.715"/>
</kw>
<status status="PASS" starttime="20230708 15:03:53.715" endtime="20230708 15:03:53.715"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:03:53.716" endtime="20230708 15:03:53.716"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:53.715" endtime="20230708 15:03:53.716"/>
</branch>
<status status="PASS" starttime="20230708 15:03:53.714" endtime="20230708 15:03:53.716"/>
</if>
<status status="PASS" starttime="20230708 15:03:53.659" endtime="20230708 15:03:53.716"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:03:53.716" endtime="20230708 15:03:53.717"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:53.716" endtime="20230708 15:03:53.717"/>
</branch>
<status status="PASS" starttime="20230708 15:03:53.659" endtime="20230708 15:03:53.717"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:03:53.720" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:03:53.717" endtime="20230708 15:03:53.720"/>
</kw>
<msg timestamp="20230708 15:03:53.720" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:03:53.654" endtime="20230708 15:03:53.720"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:53.721" endtime="20230708 15:03:53.814"/>
</kw>
<status status="PASS" starttime="20230708 15:03:53.721" endtime="20230708 15:03:53.814"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:03:53.814" endtime="20230708 15:03:53.814"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:53.814" endtime="20230708 15:03:53.814"/>
</branch>
<status status="PASS" starttime="20230708 15:03:53.720" endtime="20230708 15:03:53.815"/>
</if>
<status status="PASS" starttime="20230708 15:03:53.653" endtime="20230708 15:03:53.815"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:03:53.821" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:03:53.818" endtime="20230708 15:03:53.821"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:03:53.821" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:03:53.821" endtime="20230708 15:03:53.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:03:53.822" endtime="20230708 15:03:53.822"/>
</kw>
<status status="PASS" starttime="20230708 15:03:53.815" endtime="20230708 15:03:53.822"/>
</kw>
<status status="PASS" starttime="20230708 15:03:48.658" endtime="20230708 15:03:53.823"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:03:53.826" endtime="20230708 15:03:53.826"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:03:53.826" endtime="20230708 15:03:53.826"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:03:53.827" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:03:53.827" endtime="20230708 15:03:53.827"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:53.827" endtime="20230708 15:03:53.959"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:53.981" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:53.961" endtime="20230708 15:03:53.981"/>
</kw>
<status status="PASS" starttime="20230708 15:03:53.960" endtime="20230708 15:03:53.981"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:53.981" endtime="20230708 15:03:54.209"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:54.278" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:03:54.209" endtime="20230708 15:03:54.278"/>
</kw>
<status status="PASS" starttime="20230708 15:03:53.827" endtime="20230708 15:03:54.279"/>
</branch>
<status status="PASS" starttime="20230708 15:03:53.826" endtime="20230708 15:03:54.279"/>
</if>
<status status="PASS" starttime="20230708 15:03:53.824" endtime="20230708 15:03:54.279"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:03:54.280" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:03:54.280" endtime="20230708 15:03:54.280"/>
</kw>
<status status="PASS" starttime="20230708 15:03:54.279" endtime="20230708 15:03:54.280"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:03:54.281" endtime="20230708 15:03:54.282"/>
</kw>
<status status="PASS" starttime="20230708 15:03:54.281" endtime="20230708 15:03:54.282"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:54.283" endtime="20230708 15:03:54.931"/>
</kw>
<status status="PASS" starttime="20230708 15:03:54.282" endtime="20230708 15:03:54.931"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:03:58.560" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:03:54.932" endtime="20230708 15:03:58.561"/>
</kw>
<status status="PASS" starttime="20230708 15:03:54.932" endtime="20230708 15:03:58.561"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:03:58.815" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:03:58.561" endtime="20230708 15:03:58.816"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:03:58.816" endtime="20230708 15:03:58.816"/>
</kw>
<status status="PASS" starttime="20230708 15:03:54.931" endtime="20230708 15:03:58.816"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:03:58.818" endtime="20230708 15:04:04.580"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:05.735" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:04.581" endtime="20230708 15:04:05.735"/>
</kw>
<status status="PASS" starttime="20230708 15:04:04.580" endtime="20230708 15:04:05.736"/>
</kw>
<status status="PASS" starttime="20230708 15:03:58.817" endtime="20230708 15:04:05.736"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:04:05.750" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:04:05.751" level="INFO">${elements} = ['element=5aec0528-99ac-490e-90b1-9aee1e5a2a52']</msg>
<status status="PASS" starttime="20230708 15:04:05.737" endtime="20230708 15:04:05.751"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:04:05.752" level="INFO">${first_element} = element=5aec0528-99ac-490e-90b1-9aee1e5a2a52</msg>
<status status="PASS" starttime="20230708 15:04:05.751" endtime="20230708 15:04:05.752"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:05.752" endtime="20230708 15:04:06.010"/>
</kw>
<status status="PASS" starttime="20230708 15:04:05.737" endtime="20230708 15:04:06.010"/>
</kw>
<status status="PASS" starttime="20230708 15:04:05.736" endtime="20230708 15:04:06.011"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:06.012" endtime="20230708 15:04:07.940"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:08.131" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:07.941" endtime="20230708 15:04:08.132"/>
</kw>
<status status="PASS" starttime="20230708 15:04:07.941" endtime="20230708 15:04:08.132"/>
</kw>
<status status="PASS" starttime="20230708 15:04:06.011" endtime="20230708 15:04:08.132"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:08.133" endtime="20230708 15:04:08.296"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:08.323" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:08.297" endtime="20230708 15:04:08.323"/>
</kw>
<status status="PASS" starttime="20230708 15:04:08.297" endtime="20230708 15:04:08.324"/>
</kw>
<status status="PASS" starttime="20230708 15:04:08.133" endtime="20230708 15:04:08.324"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:08.325" endtime="20230708 15:04:08.636"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:08.831" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:08.637" endtime="20230708 15:04:08.831"/>
</kw>
<status status="PASS" starttime="20230708 15:04:08.636" endtime="20230708 15:04:08.831"/>
</kw>
<status status="PASS" starttime="20230708 15:04:08.324" endtime="20230708 15:04:08.832"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:08.832" endtime="20230708 15:04:09.042"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:09.061" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:09.043" endtime="20230708 15:04:09.061"/>
</kw>
<status status="PASS" starttime="20230708 15:04:09.042" endtime="20230708 15:04:09.061"/>
</kw>
<status status="PASS" starttime="20230708 15:04:08.832" endtime="20230708 15:04:09.061"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:09.062" endtime="20230708 15:04:09.456"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:09.476" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:09.457" endtime="20230708 15:04:09.476"/>
</kw>
<status status="PASS" starttime="20230708 15:04:09.456" endtime="20230708 15:04:09.477"/>
</kw>
<status status="PASS" starttime="20230708 15:04:09.062" endtime="20230708 15:04:09.477"/>
</kw>
<status status="PASS" starttime="20230708 15:04:06.011" endtime="20230708 15:04:09.477"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:04:09.771" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:04:09.479" endtime="20230708 15:04:09.771"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:09.478" endtime="20230708 15:04:09.773"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.773" endtime="20230708 15:04:09.773"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.773" endtime="20230708 15:04:09.774"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.774" endtime="20230708 15:04:09.774"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.774" endtime="20230708 15:04:09.774"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.774" endtime="20230708 15:04:09.774"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.775" endtime="20230708 15:04:09.775"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.775" endtime="20230708 15:04:09.775"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.776" endtime="20230708 15:04:09.776"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:09.775" endtime="20230708 15:04:09.776"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:09.776" endtime="20230708 15:04:09.776"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:09.776" endtime="20230708 15:04:09.777"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:04:09.775" endtime="20230708 15:04:09.777"/>
</if>
<status status="FAIL" starttime="20230708 15:04:09.478" endtime="20230708 15:04:09.777"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.778" endtime="20230708 15:04:09.778"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.778" endtime="20230708 15:04:09.779"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.779" endtime="20230708 15:04:09.779"/>
</kw>
<status status="FAIL" starttime="20230708 15:03:53.823" endtime="20230708 15:04:09.779"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.780" endtime="20230708 15:04:09.780"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.780" endtime="20230708 15:04:09.780"/>
</kw>
<kw name="Edit guest popup change to &quot;Booker information&quot;" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:09.781" endtime="20230708 15:04:09.781"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:04:10.466" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:04:09.781" endtime="20230708 15:04:10.466"/>
</kw>
<status status="FAIL" starttime="20230708 15:03:48.657" endtime="20230708 15:04:10.466">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t2" name="Verify notification when marking someone else as a guest" line="17">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:04:10.473" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/22a1ad8b-35ab-4618-86b8-e317b54d4e80"}</msg>
<msg timestamp="20230708 15:04:11.203" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/22a1ad8b-35ab-4618-86b8-e317b54d4e80"}</msg>
<status status="PASS" starttime="20230708 15:04:10.472" endtime="20230708 15:04:11.204"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:04:11.204" endtime="20230708 15:04:11.206"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:04:11.208" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:04:11.281" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:04:11.281" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:04:11.207" endtime="20230708 15:04:11.281"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:04:13.792" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:04:11.281" endtime="20230708 15:04:13.793"/>
</kw>
<status status="PASS" starttime="20230708 15:04:10.472" endtime="20230708 15:04:13.793"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:04:13.793" endtime="20230708 15:04:15.112"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:04:15.118" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:04:15.114" endtime="20230708 15:04:15.118"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:04:15.171" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:04:15.171" level="INFO">${els} = ['element=8a480194-57e2-49a8-b93e-e818de8149d7']</msg>
<status status="PASS" starttime="20230708 15:04:15.118" endtime="20230708 15:04:15.171"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:04:15.172" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:04:15.172" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:04:15.171" endtime="20230708 15:04:15.172"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:04:15.173" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:04:15.172" endtime="20230708 15:04:15.173"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.172" endtime="20230708 15:04:15.173"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:04:15.173" endtime="20230708 15:04:15.173"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:15.173" endtime="20230708 15:04:15.174"/>
</branch>
<status status="PASS" starttime="20230708 15:04:15.172" endtime="20230708 15:04:15.174"/>
</if>
<status status="PASS" starttime="20230708 15:04:15.118" endtime="20230708 15:04:15.174"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:04:15.174" endtime="20230708 15:04:15.174"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:15.174" endtime="20230708 15:04:15.174"/>
</branch>
<status status="PASS" starttime="20230708 15:04:15.118" endtime="20230708 15:04:15.175"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:04:15.178" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:04:15.175" endtime="20230708 15:04:15.178"/>
</kw>
<msg timestamp="20230708 15:04:15.179" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:04:15.113" endtime="20230708 15:04:15.179"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:15.179" endtime="20230708 15:04:15.276"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.179" endtime="20230708 15:04:15.276"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:04:15.276" endtime="20230708 15:04:15.276"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:15.276" endtime="20230708 15:04:15.276"/>
</branch>
<status status="PASS" starttime="20230708 15:04:15.179" endtime="20230708 15:04:15.277"/>
</if>
<status status="PASS" starttime="20230708 15:04:15.112" endtime="20230708 15:04:15.277"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:04:15.282" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:04:15.278" endtime="20230708 15:04:15.282"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:04:15.283" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:04:15.283" endtime="20230708 15:04:15.283"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:04:15.283" endtime="20230708 15:04:15.284"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.277" endtime="20230708 15:04:15.284"/>
</kw>
<status status="PASS" starttime="20230708 15:04:10.471" endtime="20230708 15:04:15.285"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:04:15.287" endtime="20230708 15:04:15.287"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:15.287" endtime="20230708 15:04:15.287"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:04:15.288" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:04:15.287" endtime="20230708 15:04:15.288"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:15.288" endtime="20230708 15:04:15.401"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:15.536" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:15.402" endtime="20230708 15:04:15.537"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.401" endtime="20230708 15:04:15.537"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:15.537" endtime="20230708 15:04:15.748"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:15.796" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:04:15.749" endtime="20230708 15:04:15.796"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.287" endtime="20230708 15:04:15.796"/>
</branch>
<status status="PASS" starttime="20230708 15:04:15.286" endtime="20230708 15:04:15.797"/>
</if>
<status status="PASS" starttime="20230708 15:04:15.286" endtime="20230708 15:04:15.797"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:04:15.801" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:04:15.801" endtime="20230708 15:04:15.801"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.797" endtime="20230708 15:04:15.802"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:04:15.802" endtime="20230708 15:04:15.803"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.802" endtime="20230708 15:04:15.804"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:15.806" endtime="20230708 15:04:16.594"/>
</kw>
<status status="PASS" starttime="20230708 15:04:15.804" endtime="20230708 15:04:16.595"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:20.236" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:16.596" endtime="20230708 15:04:20.236"/>
</kw>
<status status="PASS" starttime="20230708 15:04:16.596" endtime="20230708 15:04:20.237"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:04:20.490" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:04:20.237" endtime="20230708 15:04:20.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:04:20.490" endtime="20230708 15:04:20.491"/>
</kw>
<status status="PASS" starttime="20230708 15:04:16.595" endtime="20230708 15:04:20.491"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:20.492" endtime="20230708 15:04:26.508"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:27.778" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:26.509" endtime="20230708 15:04:27.778"/>
</kw>
<status status="PASS" starttime="20230708 15:04:26.508" endtime="20230708 15:04:27.778"/>
</kw>
<status status="PASS" starttime="20230708 15:04:20.492" endtime="20230708 15:04:27.779"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:04:27.792" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:04:27.793" level="INFO">${elements} = ['element=377c8949-a5f8-4da3-8031-1df0897346bb']</msg>
<status status="PASS" starttime="20230708 15:04:27.780" endtime="20230708 15:04:27.793"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:04:27.794" level="INFO">${first_element} = element=377c8949-a5f8-4da3-8031-1df0897346bb</msg>
<status status="PASS" starttime="20230708 15:04:27.793" endtime="20230708 15:04:27.794"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:27.794" endtime="20230708 15:04:27.920"/>
</kw>
<status status="PASS" starttime="20230708 15:04:27.779" endtime="20230708 15:04:27.921"/>
</kw>
<status status="PASS" starttime="20230708 15:04:27.779" endtime="20230708 15:04:27.921"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:27.922" endtime="20230708 15:04:29.954"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:29.974" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:29.955" endtime="20230708 15:04:29.974"/>
</kw>
<status status="PASS" starttime="20230708 15:04:29.955" endtime="20230708 15:04:29.975"/>
</kw>
<status status="PASS" starttime="20230708 15:04:27.922" endtime="20230708 15:04:29.975"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:29.976" endtime="20230708 15:04:30.557"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:30.661" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:30.558" endtime="20230708 15:04:30.661"/>
</kw>
<status status="PASS" starttime="20230708 15:04:30.557" endtime="20230708 15:04:30.662"/>
</kw>
<status status="PASS" starttime="20230708 15:04:29.975" endtime="20230708 15:04:30.662"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:30.663" endtime="20230708 15:04:30.948"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:30.967" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:30.949" endtime="20230708 15:04:30.968"/>
</kw>
<status status="PASS" starttime="20230708 15:04:30.949" endtime="20230708 15:04:30.968"/>
</kw>
<status status="PASS" starttime="20230708 15:04:30.662" endtime="20230708 15:04:30.968"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:30.969" endtime="20230708 15:04:31.191"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:31.253" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:31.192" endtime="20230708 15:04:31.253"/>
</kw>
<status status="PASS" starttime="20230708 15:04:31.191" endtime="20230708 15:04:31.253"/>
</kw>
<status status="PASS" starttime="20230708 15:04:30.968" endtime="20230708 15:04:31.254"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:31.255" endtime="20230708 15:04:31.583"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:31.617" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:31.584" endtime="20230708 15:04:31.618"/>
</kw>
<status status="PASS" starttime="20230708 15:04:31.583" endtime="20230708 15:04:31.618"/>
</kw>
<status status="PASS" starttime="20230708 15:04:31.254" endtime="20230708 15:04:31.618"/>
</kw>
<status status="PASS" starttime="20230708 15:04:27.921" endtime="20230708 15:04:31.618"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:04:31.954" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:04:31.620" endtime="20230708 15:04:31.955"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:31.619" endtime="20230708 15:04:31.956"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.956" endtime="20230708 15:04:31.956"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.957" endtime="20230708 15:04:31.957"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.957" endtime="20230708 15:04:31.957"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.957" endtime="20230708 15:04:31.957"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.957" endtime="20230708 15:04:31.958"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.958" endtime="20230708 15:04:31.958"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.958" endtime="20230708 15:04:31.958"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.959" endtime="20230708 15:04:31.959"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:31.959" endtime="20230708 15:04:31.959"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:31.959" endtime="20230708 15:04:31.959"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:31.959" endtime="20230708 15:04:31.960"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:04:31.958" endtime="20230708 15:04:31.960"/>
</if>
<status status="FAIL" starttime="20230708 15:04:31.619" endtime="20230708 15:04:31.960"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.961" endtime="20230708 15:04:31.961"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.961" endtime="20230708 15:04:31.961"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.961" endtime="20230708 15:04:31.961"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:15.286" endtime="20230708 15:04:31.962"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.962" endtime="20230708 15:04:31.962"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.963" endtime="20230708 15:04:31.963"/>
</kw>
<kw name="Verify notification &quot;Before iniviting someone else to be the main guest in this room, you must fill in your own information&quot;" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:31.963" endtime="20230708 15:04:31.963"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:04:32.646" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:04:31.964" endtime="20230708 15:04:32.646"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:10.470" endtime="20230708 15:04:32.647">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t3" name="Verify room name in Edit guest popup when marking someone else as a guest" line="23">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:04:32.653" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/bcb58c08-caee-4271-acc6-6c10abf149a6"}</msg>
<msg timestamp="20230708 15:04:33.337" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/bcb58c08-caee-4271-acc6-6c10abf149a6"}</msg>
<status status="PASS" starttime="20230708 15:04:32.652" endtime="20230708 15:04:33.338"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:04:33.338" endtime="20230708 15:04:33.339"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:04:33.339" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:04:33.427" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:04:33.427" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:04:33.339" endtime="20230708 15:04:33.427"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:04:36.124" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:04:33.427" endtime="20230708 15:04:36.125"/>
</kw>
<status status="PASS" starttime="20230708 15:04:32.652" endtime="20230708 15:04:36.125"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:04:36.125" endtime="20230708 15:04:37.231"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:04:37.236" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:04:37.232" endtime="20230708 15:04:37.236"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:04:37.291" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:04:37.292" level="INFO">${els} = ['element=1c5cba52-345a-49ad-83db-12194058b530']</msg>
<status status="PASS" starttime="20230708 15:04:37.236" endtime="20230708 15:04:37.292"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:04:37.292" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:04:37.292" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:04:37.292" endtime="20230708 15:04:37.292"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:04:37.293" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:04:37.293" endtime="20230708 15:04:37.293"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.293" endtime="20230708 15:04:37.293"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:04:37.294" endtime="20230708 15:04:37.295"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:37.294" endtime="20230708 15:04:37.295"/>
</branch>
<status status="PASS" starttime="20230708 15:04:37.293" endtime="20230708 15:04:37.295"/>
</if>
<status status="PASS" starttime="20230708 15:04:37.236" endtime="20230708 15:04:37.295"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:04:37.295" endtime="20230708 15:04:37.295"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:37.295" endtime="20230708 15:04:37.295"/>
</branch>
<status status="PASS" starttime="20230708 15:04:37.236" endtime="20230708 15:04:37.295"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:04:37.299" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:04:37.296" endtime="20230708 15:04:37.299"/>
</kw>
<msg timestamp="20230708 15:04:37.300" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:04:37.232" endtime="20230708 15:04:37.300"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:37.300" endtime="20230708 15:04:37.392"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.300" endtime="20230708 15:04:37.392"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:04:37.392" endtime="20230708 15:04:37.393"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:37.392" endtime="20230708 15:04:37.393"/>
</branch>
<status status="PASS" starttime="20230708 15:04:37.300" endtime="20230708 15:04:37.393"/>
</if>
<status status="PASS" starttime="20230708 15:04:37.231" endtime="20230708 15:04:37.393"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:04:37.396" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:04:37.394" endtime="20230708 15:04:37.397"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:04:37.398" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:04:37.398" endtime="20230708 15:04:37.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:04:37.399" endtime="20230708 15:04:37.399"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.393" endtime="20230708 15:04:37.399"/>
</kw>
<status status="PASS" starttime="20230708 15:04:32.651" endtime="20230708 15:04:37.399"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:04:37.401" endtime="20230708 15:04:37.401"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:37.401" endtime="20230708 15:04:37.401"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:04:37.402" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:04:37.402" endtime="20230708 15:04:37.402"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:37.402" endtime="20230708 15:04:37.518"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:37.618" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:37.519" endtime="20230708 15:04:37.619"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.518" endtime="20230708 15:04:37.619"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:37.619" endtime="20230708 15:04:37.923"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:37.975" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:04:37.923" endtime="20230708 15:04:37.976"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.401" endtime="20230708 15:04:37.976"/>
</branch>
<status status="PASS" starttime="20230708 15:04:37.400" endtime="20230708 15:04:37.976"/>
</if>
<status status="PASS" starttime="20230708 15:04:37.400" endtime="20230708 15:04:37.976"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:04:37.977" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:04:37.977" endtime="20230708 15:04:37.977"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.976" endtime="20230708 15:04:37.977"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:04:37.978" endtime="20230708 15:04:37.979"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.978" endtime="20230708 15:04:37.980"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:37.980" endtime="20230708 15:04:38.611"/>
</kw>
<status status="PASS" starttime="20230708 15:04:37.980" endtime="20230708 15:04:38.611"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:41.977" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:38.615" endtime="20230708 15:04:41.977"/>
</kw>
<status status="PASS" starttime="20230708 15:04:38.612" endtime="20230708 15:04:41.977"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:04:42.234" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:04:41.978" endtime="20230708 15:04:42.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:04:42.235" endtime="20230708 15:04:42.235"/>
</kw>
<status status="PASS" starttime="20230708 15:04:38.611" endtime="20230708 15:04:42.235"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:42.236" endtime="20230708 15:04:48.245"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:49.482" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:48.246" endtime="20230708 15:04:49.482"/>
</kw>
<status status="PASS" starttime="20230708 15:04:48.245" endtime="20230708 15:04:49.482"/>
</kw>
<status status="PASS" starttime="20230708 15:04:42.236" endtime="20230708 15:04:49.483"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:04:49.509" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:04:49.510" level="INFO">${elements} = ['element=ff483e33-926e-40a0-ba6f-4782a8bef02d']</msg>
<status status="PASS" starttime="20230708 15:04:49.484" endtime="20230708 15:04:49.510"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:04:49.511" level="INFO">${first_element} = element=ff483e33-926e-40a0-ba6f-4782a8bef02d</msg>
<status status="PASS" starttime="20230708 15:04:49.510" endtime="20230708 15:04:49.511"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:49.511" endtime="20230708 15:04:49.679"/>
</kw>
<status status="PASS" starttime="20230708 15:04:49.484" endtime="20230708 15:04:49.680"/>
</kw>
<status status="PASS" starttime="20230708 15:04:49.483" endtime="20230708 15:04:49.680"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:49.681" endtime="20230708 15:04:52.350"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:52.463" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:52.351" endtime="20230708 15:04:52.464"/>
</kw>
<status status="PASS" starttime="20230708 15:04:52.350" endtime="20230708 15:04:52.464"/>
</kw>
<status status="PASS" starttime="20230708 15:04:49.681" endtime="20230708 15:04:52.464"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:52.465" endtime="20230708 15:04:52.750"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:52.769" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:52.751" endtime="20230708 15:04:52.769"/>
</kw>
<status status="PASS" starttime="20230708 15:04:52.750" endtime="20230708 15:04:52.769"/>
</kw>
<status status="PASS" starttime="20230708 15:04:52.464" endtime="20230708 15:04:52.770"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:52.771" endtime="20230708 15:04:53.186"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:53.205" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:53.187" endtime="20230708 15:04:53.206"/>
</kw>
<status status="PASS" starttime="20230708 15:04:53.186" endtime="20230708 15:04:53.206"/>
</kw>
<status status="PASS" starttime="20230708 15:04:52.770" endtime="20230708 15:04:53.206"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:53.208" endtime="20230708 15:04:53.980"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:54.008" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:53.981" endtime="20230708 15:04:54.009"/>
</kw>
<status status="PASS" starttime="20230708 15:04:53.981" endtime="20230708 15:04:54.010"/>
</kw>
<status status="PASS" starttime="20230708 15:04:53.207" endtime="20230708 15:04:54.010"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:04:54.011" endtime="20230708 15:04:54.411"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:04:54.435" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:04:54.412" endtime="20230708 15:04:54.435"/>
</kw>
<status status="PASS" starttime="20230708 15:04:54.411" endtime="20230708 15:04:54.435"/>
</kw>
<status status="PASS" starttime="20230708 15:04:54.010" endtime="20230708 15:04:54.436"/>
</kw>
<status status="PASS" starttime="20230708 15:04:49.680" endtime="20230708 15:04:54.436"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:04:54.730" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:04:54.437" endtime="20230708 15:04:54.731"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:54.437" endtime="20230708 15:04:54.732"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.733" endtime="20230708 15:04:54.733"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.733" endtime="20230708 15:04:54.733"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.733" endtime="20230708 15:04:54.733"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.733" endtime="20230708 15:04:54.733"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.734" endtime="20230708 15:04:54.734"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.734" endtime="20230708 15:04:54.734"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.734" endtime="20230708 15:04:54.734"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.735" endtime="20230708 15:04:54.735"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:54.735" endtime="20230708 15:04:54.735"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:04:54.735" endtime="20230708 15:04:54.735"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:04:54.735" endtime="20230708 15:04:54.735"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:04:54.734" endtime="20230708 15:04:54.736"/>
</if>
<status status="FAIL" starttime="20230708 15:04:54.436" endtime="20230708 15:04:54.736"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.737" endtime="20230708 15:04:54.737"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.737" endtime="20230708 15:04:54.737"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.738" endtime="20230708 15:04:54.738"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:37.400" endtime="20230708 15:04:54.739"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.739" endtime="20230708 15:04:54.739"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.739" endtime="20230708 15:04:54.740"/>
</kw>
<kw name="Room name is removed" library="booking">
<status status="NOT RUN" starttime="20230708 15:04:54.740" endtime="20230708 15:04:54.740"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:04:55.424" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:04:54.740" endtime="20230708 15:04:55.424"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:32.651" endtime="20230708 15:04:55.425">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t4" name="Verify Purpose of trip checkbox in Edit guest popup when marking someone else as a guest" line="29">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:04:55.432" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/45ae4cd5-cf51-44c0-b57c-5a448796f073"}</msg>
<msg timestamp="20230708 15:04:56.109" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/45ae4cd5-cf51-44c0-b57c-5a448796f073"}</msg>
<status status="PASS" starttime="20230708 15:04:55.431" endtime="20230708 15:04:56.110"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:04:56.110" endtime="20230708 15:04:56.111"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:04:56.112" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:04:56.151" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:04:56.151" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:04:56.111" endtime="20230708 15:04:56.151"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:04:58.876" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:04:56.151" endtime="20230708 15:04:58.877"/>
</kw>
<status status="PASS" starttime="20230708 15:04:55.430" endtime="20230708 15:04:58.877"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:04:58.877" endtime="20230708 15:05:00.104"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:00.113" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:05:00.107" endtime="20230708 15:05:00.113"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:00.165" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:00.166" level="INFO">${els} = ['element=46dda996-3a5e-419a-98d6-2092a3e8209a']</msg>
<status status="PASS" starttime="20230708 15:05:00.113" endtime="20230708 15:05:00.166"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:05:00.167" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:05:00.167" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:05:00.166" endtime="20230708 15:05:00.167"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:00.168" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:05:00.167" endtime="20230708 15:05:00.168"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.167" endtime="20230708 15:05:00.168"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:00.168" endtime="20230708 15:05:00.168"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:00.168" endtime="20230708 15:05:00.168"/>
</branch>
<status status="PASS" starttime="20230708 15:05:00.167" endtime="20230708 15:05:00.168"/>
</if>
<status status="PASS" starttime="20230708 15:05:00.113" endtime="20230708 15:05:00.169"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:00.169" endtime="20230708 15:05:00.169"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:00.169" endtime="20230708 15:05:00.169"/>
</branch>
<status status="PASS" starttime="20230708 15:05:00.113" endtime="20230708 15:05:00.169"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:00.176" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:05:00.169" endtime="20230708 15:05:00.177"/>
</kw>
<msg timestamp="20230708 15:05:00.177" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:05:00.106" endtime="20230708 15:05:00.177"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:00.178" endtime="20230708 15:05:00.277"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.177" endtime="20230708 15:05:00.277"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:00.278" endtime="20230708 15:05:00.278"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:00.277" endtime="20230708 15:05:00.278"/>
</branch>
<status status="PASS" starttime="20230708 15:05:00.177" endtime="20230708 15:05:00.278"/>
</if>
<status status="PASS" starttime="20230708 15:05:00.105" endtime="20230708 15:05:00.278"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:05:00.281" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:05:00.279" endtime="20230708 15:05:00.281"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:05:00.282" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:05:00.282" endtime="20230708 15:05:00.282"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:05:00.282" endtime="20230708 15:05:00.283"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.278" endtime="20230708 15:05:00.283"/>
</kw>
<status status="PASS" starttime="20230708 15:04:55.430" endtime="20230708 15:05:00.283"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:00.285" endtime="20230708 15:05:00.285"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:00.285" endtime="20230708 15:05:00.285"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:00.286" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:05:00.286" endtime="20230708 15:05:00.286"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:00.286" endtime="20230708 15:05:00.409"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:00.423" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:00.410" endtime="20230708 15:05:00.423"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.409" endtime="20230708 15:05:00.424"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:00.424" endtime="20230708 15:05:00.554"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:00.579" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:05:00.554" endtime="20230708 15:05:00.579"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.285" endtime="20230708 15:05:00.579"/>
</branch>
<status status="PASS" starttime="20230708 15:05:00.285" endtime="20230708 15:05:00.579"/>
</if>
<status status="PASS" starttime="20230708 15:05:00.284" endtime="20230708 15:05:00.580"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:00.581" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:05:00.580" endtime="20230708 15:05:00.581"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.580" endtime="20230708 15:05:00.581"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:05:00.581" endtime="20230708 15:05:00.582"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.581" endtime="20230708 15:05:00.582"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:00.584" endtime="20230708 15:05:01.183"/>
</kw>
<status status="PASS" starttime="20230708 15:05:00.583" endtime="20230708 15:05:01.184"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:04.834" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:01.185" endtime="20230708 15:05:04.834"/>
</kw>
<status status="PASS" starttime="20230708 15:05:01.184" endtime="20230708 15:05:04.834"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:05:05.088" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:05:04.835" endtime="20230708 15:05:05.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:05:05.088" endtime="20230708 15:05:05.089"/>
</kw>
<status status="PASS" starttime="20230708 15:05:01.184" endtime="20230708 15:05:05.089"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:05.090" endtime="20230708 15:05:10.507"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:11.614" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:10.508" endtime="20230708 15:05:11.614"/>
</kw>
<status status="PASS" starttime="20230708 15:05:10.507" endtime="20230708 15:05:11.614"/>
</kw>
<status status="PASS" starttime="20230708 15:05:05.089" endtime="20230708 15:05:11.615"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:11.642" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:11.643" level="INFO">${elements} = ['element=ee6fd2d9-cffa-49a8-a7ba-4c5b0b8b43e1']</msg>
<status status="PASS" starttime="20230708 15:05:11.617" endtime="20230708 15:05:11.643"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:11.644" level="INFO">${first_element} = element=ee6fd2d9-cffa-49a8-a7ba-4c5b0b8b43e1</msg>
<status status="PASS" starttime="20230708 15:05:11.643" endtime="20230708 15:05:11.644"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:11.644" endtime="20230708 15:05:11.781"/>
</kw>
<status status="PASS" starttime="20230708 15:05:11.615" endtime="20230708 15:05:11.781"/>
</kw>
<status status="PASS" starttime="20230708 15:05:11.615" endtime="20230708 15:05:11.781"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:11.782" endtime="20230708 15:05:14.047"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:14.069" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:14.048" endtime="20230708 15:05:14.070"/>
</kw>
<status status="PASS" starttime="20230708 15:05:14.047" endtime="20230708 15:05:14.070"/>
</kw>
<status status="PASS" starttime="20230708 15:05:11.782" endtime="20230708 15:05:14.070"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:14.071" endtime="20230708 15:05:14.336"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:14.767" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:14.337" endtime="20230708 15:05:14.768"/>
</kw>
<status status="PASS" starttime="20230708 15:05:14.336" endtime="20230708 15:05:14.768"/>
</kw>
<status status="PASS" starttime="20230708 15:05:14.070" endtime="20230708 15:05:14.768"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:14.769" endtime="20230708 15:05:15.011"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:15.027" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:15.012" endtime="20230708 15:05:15.028"/>
</kw>
<status status="PASS" starttime="20230708 15:05:15.011" endtime="20230708 15:05:15.028"/>
</kw>
<status status="PASS" starttime="20230708 15:05:14.768" endtime="20230708 15:05:15.028"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:15.029" endtime="20230708 15:05:15.263"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:15.284" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:15.264" endtime="20230708 15:05:15.284"/>
</kw>
<status status="PASS" starttime="20230708 15:05:15.263" endtime="20230708 15:05:15.284"/>
</kw>
<status status="PASS" starttime="20230708 15:05:15.028" endtime="20230708 15:05:15.284"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:15.285" endtime="20230708 15:05:15.741"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:15.773" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:15.742" endtime="20230708 15:05:15.773"/>
</kw>
<status status="PASS" starttime="20230708 15:05:15.741" endtime="20230708 15:05:15.773"/>
</kw>
<status status="PASS" starttime="20230708 15:05:15.285" endtime="20230708 15:05:15.774"/>
</kw>
<status status="PASS" starttime="20230708 15:05:11.781" endtime="20230708 15:05:15.774"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:05:16.106" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:05:15.775" endtime="20230708 15:05:16.106"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:15.775" endtime="20230708 15:05:16.108"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.108" endtime="20230708 15:05:16.108"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.109" endtime="20230708 15:05:16.109"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.109" endtime="20230708 15:05:16.109"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.109" endtime="20230708 15:05:16.109"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.110" endtime="20230708 15:05:16.110"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.110" endtime="20230708 15:05:16.110"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.110" endtime="20230708 15:05:16.110"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.111" endtime="20230708 15:05:16.111"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:16.111" endtime="20230708 15:05:16.111"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:05:16.111" endtime="20230708 15:05:16.111"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:16.111" endtime="20230708 15:05:16.111"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:05:16.110" endtime="20230708 15:05:16.111"/>
</if>
<status status="FAIL" starttime="20230708 15:05:15.774" endtime="20230708 15:05:16.112"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.112" endtime="20230708 15:05:16.113"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.113" endtime="20230708 15:05:16.113"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.113" endtime="20230708 15:05:16.113"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:00.284" endtime="20230708 15:05:16.114"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.114" endtime="20230708 15:05:16.114"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.114" endtime="20230708 15:05:16.114"/>
</kw>
<kw name="The &quot;Purpose of the trip&quot; checkbox is removed" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:16.114" endtime="20230708 15:05:16.114"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:05:16.750" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:05:16.115" endtime="20230708 15:05:16.750"/>
</kw>
<status status="FAIL" starttime="20230708 15:04:55.429" endtime="20230708 15:05:16.750">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t5" name="Verify Save and invite button when marking someone else as a guest" line="35">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:05:16.756" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/74072b51-e6ab-4073-84a2-c93c5506e081"}</msg>
<msg timestamp="20230708 15:05:17.440" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/74072b51-e6ab-4073-84a2-c93c5506e081"}</msg>
<status status="PASS" starttime="20230708 15:05:16.755" endtime="20230708 15:05:17.441"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:05:17.441" endtime="20230708 15:05:17.442"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:05:17.443" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:05:17.514" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:05:17.514" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:05:17.442" endtime="20230708 15:05:17.514"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:05:20.204" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:05:17.515" endtime="20230708 15:05:20.204"/>
</kw>
<status status="PASS" starttime="20230708 15:05:16.755" endtime="20230708 15:05:20.204"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:05:20.205" endtime="20230708 15:05:21.914"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:21.919" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:05:21.916" endtime="20230708 15:05:21.919"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:21.973" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:21.973" level="INFO">${els} = ['element=43664cb8-19b1-491c-ae69-31381e4be178']</msg>
<status status="PASS" starttime="20230708 15:05:21.920" endtime="20230708 15:05:21.973"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:05:21.974" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:05:21.974" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:05:21.974" endtime="20230708 15:05:21.974"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:21.975" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:05:21.975" endtime="20230708 15:05:21.975"/>
</kw>
<status status="PASS" starttime="20230708 15:05:21.975" endtime="20230708 15:05:21.975"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:21.976" endtime="20230708 15:05:21.976"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:21.976" endtime="20230708 15:05:21.976"/>
</branch>
<status status="PASS" starttime="20230708 15:05:21.974" endtime="20230708 15:05:21.976"/>
</if>
<status status="PASS" starttime="20230708 15:05:21.919" endtime="20230708 15:05:21.976"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:21.976" endtime="20230708 15:05:21.977"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:21.976" endtime="20230708 15:05:21.977"/>
</branch>
<status status="PASS" starttime="20230708 15:05:21.919" endtime="20230708 15:05:21.977"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:21.980" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:05:21.977" endtime="20230708 15:05:21.980"/>
</kw>
<msg timestamp="20230708 15:05:21.980" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:05:21.915" endtime="20230708 15:05:21.980"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:21.981" endtime="20230708 15:05:22.093"/>
</kw>
<status status="PASS" starttime="20230708 15:05:21.981" endtime="20230708 15:05:22.094"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:22.094" endtime="20230708 15:05:22.094"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:22.094" endtime="20230708 15:05:22.094"/>
</branch>
<status status="PASS" starttime="20230708 15:05:21.981" endtime="20230708 15:05:22.094"/>
</if>
<status status="PASS" starttime="20230708 15:05:21.915" endtime="20230708 15:05:22.095"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:05:22.102" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:05:22.095" endtime="20230708 15:05:22.102"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:05:22.103" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:05:22.102" endtime="20230708 15:05:22.103"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:05:22.103" endtime="20230708 15:05:22.104"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.095" endtime="20230708 15:05:22.104"/>
</kw>
<status status="PASS" starttime="20230708 15:05:16.754" endtime="20230708 15:05:22.104"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:22.106" endtime="20230708 15:05:22.106"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:22.105" endtime="20230708 15:05:22.106"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:22.106" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:05:22.106" endtime="20230708 15:05:22.106"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:22.107" endtime="20230708 15:05:22.230"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:22.241" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:22.231" endtime="20230708 15:05:22.241"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.230" endtime="20230708 15:05:22.241"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:22.242" endtime="20230708 15:05:22.542"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:22.605" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:05:22.542" endtime="20230708 15:05:22.605"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.106" endtime="20230708 15:05:22.605"/>
</branch>
<status status="PASS" starttime="20230708 15:05:22.105" endtime="20230708 15:05:22.606"/>
</if>
<status status="PASS" starttime="20230708 15:05:22.105" endtime="20230708 15:05:22.606"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:22.607" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:05:22.607" endtime="20230708 15:05:22.608"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.606" endtime="20230708 15:05:22.610"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:05:22.611" endtime="20230708 15:05:22.612"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.610" endtime="20230708 15:05:22.612"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:22.613" endtime="20230708 15:05:23.302"/>
</kw>
<status status="PASS" starttime="20230708 15:05:22.612" endtime="20230708 15:05:23.302"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:26.893" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:23.304" endtime="20230708 15:05:26.893"/>
</kw>
<status status="PASS" starttime="20230708 15:05:23.303" endtime="20230708 15:05:26.894"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:05:27.148" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:05:26.894" endtime="20230708 15:05:27.148"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:05:27.148" endtime="20230708 15:05:27.149"/>
</kw>
<status status="PASS" starttime="20230708 15:05:23.303" endtime="20230708 15:05:27.149"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:27.150" endtime="20230708 15:05:33.210"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:34.213" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:33.211" endtime="20230708 15:05:34.214"/>
</kw>
<status status="PASS" starttime="20230708 15:05:33.210" endtime="20230708 15:05:34.214"/>
</kw>
<status status="PASS" starttime="20230708 15:05:27.149" endtime="20230708 15:05:34.214"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:34.231" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:34.231" level="INFO">${elements} = ['element=dff97e31-5fd3-4844-b65b-b3516dbe721e']</msg>
<status status="PASS" starttime="20230708 15:05:34.216" endtime="20230708 15:05:34.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:34.232" level="INFO">${first_element} = element=dff97e31-5fd3-4844-b65b-b3516dbe721e</msg>
<status status="PASS" starttime="20230708 15:05:34.232" endtime="20230708 15:05:34.232"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:34.232" endtime="20230708 15:05:34.409"/>
</kw>
<status status="PASS" starttime="20230708 15:05:34.216" endtime="20230708 15:05:34.410"/>
</kw>
<status status="PASS" starttime="20230708 15:05:34.215" endtime="20230708 15:05:34.410"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:34.411" endtime="20230708 15:05:36.733"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:36.815" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:36.734" endtime="20230708 15:05:36.815"/>
</kw>
<status status="PASS" starttime="20230708 15:05:36.733" endtime="20230708 15:05:36.815"/>
</kw>
<status status="PASS" starttime="20230708 15:05:34.410" endtime="20230708 15:05:36.816"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:36.816" endtime="20230708 15:05:37.051"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:37.071" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:37.052" endtime="20230708 15:05:37.072"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.052" endtime="20230708 15:05:37.072"/>
</kw>
<status status="PASS" starttime="20230708 15:05:36.816" endtime="20230708 15:05:37.072"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:37.073" endtime="20230708 15:05:37.473"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:37.491" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:37.474" endtime="20230708 15:05:37.491"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.473" endtime="20230708 15:05:37.491"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.073" endtime="20230708 15:05:37.491"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:37.492" endtime="20230708 15:05:37.736"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:37.789" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:37.737" endtime="20230708 15:05:37.789"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.736" endtime="20230708 15:05:37.790"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.492" endtime="20230708 15:05:37.790"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:37.791" endtime="20230708 15:05:38.416"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:38.431" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:38.417" endtime="20230708 15:05:38.432"/>
</kw>
<status status="PASS" starttime="20230708 15:05:38.417" endtime="20230708 15:05:38.432"/>
</kw>
<status status="PASS" starttime="20230708 15:05:37.790" endtime="20230708 15:05:38.432"/>
</kw>
<status status="PASS" starttime="20230708 15:05:34.410" endtime="20230708 15:05:38.432"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:05:38.739" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:05:38.434" endtime="20230708 15:05:38.740"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:38.433" endtime="20230708 15:05:38.742"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.743" endtime="20230708 15:05:38.743"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.743" endtime="20230708 15:05:38.743"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.743" endtime="20230708 15:05:38.743"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.744" endtime="20230708 15:05:38.744"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.744" endtime="20230708 15:05:38.744"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.744" endtime="20230708 15:05:38.744"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.745" endtime="20230708 15:05:38.745"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.745" endtime="20230708 15:05:38.745"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:38.745" endtime="20230708 15:05:38.745"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:05:38.746" endtime="20230708 15:05:38.746"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:38.746" endtime="20230708 15:05:38.746"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:05:38.745" endtime="20230708 15:05:38.746"/>
</if>
<status status="FAIL" starttime="20230708 15:05:38.433" endtime="20230708 15:05:38.747"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.747" endtime="20230708 15:05:38.747"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.747" endtime="20230708 15:05:38.747"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.748" endtime="20230708 15:05:38.748"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:22.104" endtime="20230708 15:05:38.748"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.749" endtime="20230708 15:05:38.749"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.749" endtime="20230708 15:05:38.749"/>
</kw>
<kw name="The &quot;Save and sign&quot; button changes to &quot; Save and invite&quot; button" library="booking">
<status status="NOT RUN" starttime="20230708 15:05:38.749" endtime="20230708 15:05:38.749"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:05:39.401" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:05:38.750" endtime="20230708 15:05:39.401"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:16.753" endtime="20230708 15:05:39.401">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t6" name="Verify Invite guest popup UI" line="42">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:05:39.407" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/de77a118-03d7-4894-b1a8-b53c6adc1138"}</msg>
<msg timestamp="20230708 15:05:40.103" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/de77a118-03d7-4894-b1a8-b53c6adc1138"}</msg>
<status status="PASS" starttime="20230708 15:05:39.406" endtime="20230708 15:05:40.103"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:05:40.104" endtime="20230708 15:05:40.104"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:05:40.105" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:05:40.182" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:05:40.182" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:05:40.104" endtime="20230708 15:05:40.183"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:05:43.795" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:05:40.183" endtime="20230708 15:05:43.795"/>
</kw>
<status status="PASS" starttime="20230708 15:05:39.406" endtime="20230708 15:05:43.796"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:05:43.796" endtime="20230708 15:05:44.846"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:44.851" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:05:44.848" endtime="20230708 15:05:44.851"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:44.904" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:44.904" level="INFO">${els} = ['element=03f4d97e-924d-4934-82e1-9f3866718d5e']</msg>
<status status="PASS" starttime="20230708 15:05:44.851" endtime="20230708 15:05:44.904"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:05:44.905" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:05:44.905" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:05:44.905" endtime="20230708 15:05:44.905"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:44.906" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:05:44.906" endtime="20230708 15:05:44.906"/>
</kw>
<status status="PASS" starttime="20230708 15:05:44.906" endtime="20230708 15:05:44.906"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:44.907" endtime="20230708 15:05:44.907"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:44.906" endtime="20230708 15:05:44.907"/>
</branch>
<status status="PASS" starttime="20230708 15:05:44.905" endtime="20230708 15:05:44.907"/>
</if>
<status status="PASS" starttime="20230708 15:05:44.851" endtime="20230708 15:05:44.907"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:05:44.907" endtime="20230708 15:05:44.907"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:44.907" endtime="20230708 15:05:44.908"/>
</branch>
<status status="PASS" starttime="20230708 15:05:44.851" endtime="20230708 15:05:44.908"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:05:44.911" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:05:44.908" endtime="20230708 15:05:44.911"/>
</kw>
<msg timestamp="20230708 15:05:44.911" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:05:44.847" endtime="20230708 15:05:44.911"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:44.912" endtime="20230708 15:05:45.008"/>
</kw>
<status status="PASS" starttime="20230708 15:05:44.912" endtime="20230708 15:05:45.008"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:45.009" endtime="20230708 15:05:45.009"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:45.008" endtime="20230708 15:05:45.009"/>
</branch>
<status status="PASS" starttime="20230708 15:05:44.912" endtime="20230708 15:05:45.009"/>
</if>
<status status="PASS" starttime="20230708 15:05:44.847" endtime="20230708 15:05:45.009"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:05:45.014" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:05:45.010" endtime="20230708 15:05:45.014"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:05:45.015" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:05:45.014" endtime="20230708 15:05:45.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:05:45.015" endtime="20230708 15:05:45.016"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.009" endtime="20230708 15:05:45.016"/>
</kw>
<status status="PASS" starttime="20230708 15:05:39.405" endtime="20230708 15:05:45.016"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:05:45.019" endtime="20230708 15:05:45.019"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:05:45.018" endtime="20230708 15:05:45.020"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:45.020" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:05:45.020" endtime="20230708 15:05:45.020"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:45.021" endtime="20230708 15:05:45.167"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:45.306" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:45.168" endtime="20230708 15:05:45.306"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.167" endtime="20230708 15:05:45.306"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:45.307" endtime="20230708 15:05:45.529"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:45.604" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:05:45.530" endtime="20230708 15:05:45.604"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.020" endtime="20230708 15:05:45.604"/>
</branch>
<status status="PASS" starttime="20230708 15:05:45.017" endtime="20230708 15:05:45.605"/>
</if>
<status status="PASS" starttime="20230708 15:05:45.017" endtime="20230708 15:05:45.605"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:05:45.606" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:05:45.606" endtime="20230708 15:05:45.606"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.605" endtime="20230708 15:05:45.606"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:05:45.607" endtime="20230708 15:05:45.608"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.607" endtime="20230708 15:05:45.608"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:45.612" endtime="20230708 15:05:46.134"/>
</kw>
<status status="PASS" starttime="20230708 15:05:45.609" endtime="20230708 15:05:46.135"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:49.963" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:46.136" endtime="20230708 15:05:49.963"/>
</kw>
<status status="PASS" starttime="20230708 15:05:46.135" endtime="20230708 15:05:49.964"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:05:50.218" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:05:49.964" endtime="20230708 15:05:50.218"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:05:50.218" endtime="20230708 15:05:50.219"/>
</kw>
<status status="PASS" starttime="20230708 15:05:46.135" endtime="20230708 15:05:50.219"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:50.220" endtime="20230708 15:05:55.223"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:56.513" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:55.224" endtime="20230708 15:05:56.514"/>
</kw>
<status status="PASS" starttime="20230708 15:05:55.223" endtime="20230708 15:05:56.514"/>
</kw>
<status status="PASS" starttime="20230708 15:05:50.219" endtime="20230708 15:05:56.514"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:05:56.545" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:05:56.546" level="INFO">${elements} = ['element=7ae49600-256e-46a5-a667-34ec7032b451']</msg>
<status status="PASS" starttime="20230708 15:05:56.516" endtime="20230708 15:05:56.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:05:56.546" level="INFO">${first_element} = element=7ae49600-256e-46a5-a667-34ec7032b451</msg>
<status status="PASS" starttime="20230708 15:05:56.546" endtime="20230708 15:05:56.546"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:56.547" endtime="20230708 15:05:56.697"/>
</kw>
<status status="PASS" starttime="20230708 15:05:56.515" endtime="20230708 15:05:56.697"/>
</kw>
<status status="PASS" starttime="20230708 15:05:56.515" endtime="20230708 15:05:56.697"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:56.698" endtime="20230708 15:05:58.575"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:58.651" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:58.576" endtime="20230708 15:05:58.651"/>
</kw>
<status status="PASS" starttime="20230708 15:05:58.575" endtime="20230708 15:05:58.651"/>
</kw>
<status status="PASS" starttime="20230708 15:05:56.698" endtime="20230708 15:05:58.651"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:58.652" endtime="20230708 15:05:58.903"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:58.920" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:58.904" endtime="20230708 15:05:58.920"/>
</kw>
<status status="PASS" starttime="20230708 15:05:58.903" endtime="20230708 15:05:58.920"/>
</kw>
<status status="PASS" starttime="20230708 15:05:58.652" endtime="20230708 15:05:58.921"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:58.921" endtime="20230708 15:05:59.307"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:59.324" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:59.308" endtime="20230708 15:05:59.324"/>
</kw>
<status status="PASS" starttime="20230708 15:05:59.307" endtime="20230708 15:05:59.324"/>
</kw>
<status status="PASS" starttime="20230708 15:05:58.921" endtime="20230708 15:05:59.324"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:59.325" endtime="20230708 15:05:59.733"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:05:59.758" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:05:59.734" endtime="20230708 15:05:59.759"/>
</kw>
<status status="PASS" starttime="20230708 15:05:59.733" endtime="20230708 15:05:59.759"/>
</kw>
<status status="PASS" starttime="20230708 15:05:59.325" endtime="20230708 15:05:59.759"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:05:59.760" endtime="20230708 15:06:00.156"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:00.176" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:00.157" endtime="20230708 15:06:00.176"/>
</kw>
<status status="PASS" starttime="20230708 15:06:00.156" endtime="20230708 15:06:00.176"/>
</kw>
<status status="PASS" starttime="20230708 15:05:59.759" endtime="20230708 15:06:00.176"/>
</kw>
<status status="PASS" starttime="20230708 15:05:56.697" endtime="20230708 15:06:00.177"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:06:00.490" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:06:00.178" endtime="20230708 15:06:00.490"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:00.177" endtime="20230708 15:06:00.491"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.492" endtime="20230708 15:06:00.492"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.492" endtime="20230708 15:06:00.492"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.492" endtime="20230708 15:06:00.493"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.493" endtime="20230708 15:06:00.493"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.493" endtime="20230708 15:06:00.493"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.493" endtime="20230708 15:06:00.493"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.494" endtime="20230708 15:06:00.494"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.495" endtime="20230708 15:06:00.495"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:00.494" endtime="20230708 15:06:00.495"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:06:00.495" endtime="20230708 15:06:00.496"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:00.495" endtime="20230708 15:06:00.497"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:06:00.494" endtime="20230708 15:06:00.497"/>
</if>
<status status="FAIL" starttime="20230708 15:06:00.177" endtime="20230708 15:06:00.498"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.498" endtime="20230708 15:06:00.498"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.499" endtime="20230708 15:06:00.499"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.499" endtime="20230708 15:06:00.499"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:45.017" endtime="20230708 15:06:00.500"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.500" endtime="20230708 15:06:00.500"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.501" endtime="20230708 15:06:00.501"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.501" endtime="20230708 15:06:00.501"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.501" endtime="20230708 15:06:00.501"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.501" endtime="20230708 15:06:00.501"/>
</kw>
<kw name="Verify the Invite Guest UI" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:00.502" endtime="20230708 15:06:00.502"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:06:01.173" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:06:00.502" endtime="20230708 15:06:01.173"/>
</kw>
<status status="FAIL" starttime="20230708 15:05:39.405" endtime="20230708 15:06:01.174">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t7" name="Verify email field validation when inviting guest" line="51">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:06:01.180" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/5480206b-4ee1-4c95-9a9a-f2812e3e0e94"}</msg>
<msg timestamp="20230708 15:06:01.861" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/5480206b-4ee1-4c95-9a9a-f2812e3e0e94"}</msg>
<status status="PASS" starttime="20230708 15:06:01.180" endtime="20230708 15:06:01.861"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:06:01.862" endtime="20230708 15:06:01.862"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:06:01.863" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:06:01.938" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:06:01.938" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:06:01.862" endtime="20230708 15:06:01.938"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:06:04.693" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:06:01.939" endtime="20230708 15:06:04.694"/>
</kw>
<status status="PASS" starttime="20230708 15:06:01.179" endtime="20230708 15:06:04.694"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:06:04.694" endtime="20230708 15:06:05.751"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:06:05.756" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:06:05.753" endtime="20230708 15:06:05.756"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:06:05.812" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:06:05.812" level="INFO">${els} = ['element=9d1ace5e-9f18-42a8-9ab0-afc27d734dd5']</msg>
<status status="PASS" starttime="20230708 15:06:05.757" endtime="20230708 15:06:05.812"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:06:05.813" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:06:05.813" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:06:05.813" endtime="20230708 15:06:05.813"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:06:05.814" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:06:05.814" endtime="20230708 15:06:05.814"/>
</kw>
<status status="PASS" starttime="20230708 15:06:05.814" endtime="20230708 15:06:05.814"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:06:05.814" endtime="20230708 15:06:05.815"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:05.814" endtime="20230708 15:06:05.815"/>
</branch>
<status status="PASS" starttime="20230708 15:06:05.813" endtime="20230708 15:06:05.815"/>
</if>
<status status="PASS" starttime="20230708 15:06:05.757" endtime="20230708 15:06:05.815"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:06:05.815" endtime="20230708 15:06:05.815"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:05.815" endtime="20230708 15:06:05.815"/>
</branch>
<status status="PASS" starttime="20230708 15:06:05.756" endtime="20230708 15:06:05.816"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:06:05.819" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:06:05.816" endtime="20230708 15:06:05.819"/>
</kw>
<msg timestamp="20230708 15:06:05.820" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:06:05.752" endtime="20230708 15:06:05.820"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:05.820" endtime="20230708 15:06:05.918"/>
</kw>
<status status="PASS" starttime="20230708 15:06:05.820" endtime="20230708 15:06:05.918"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:06:05.919" endtime="20230708 15:06:05.919"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:05.918" endtime="20230708 15:06:05.919"/>
</branch>
<status status="PASS" starttime="20230708 15:06:05.820" endtime="20230708 15:06:05.919"/>
</if>
<status status="PASS" starttime="20230708 15:06:05.752" endtime="20230708 15:06:05.919"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:06:05.924" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:06:05.920" endtime="20230708 15:06:05.924"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:06:05.924" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:06:05.924" endtime="20230708 15:06:05.924"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:06:05.925" endtime="20230708 15:06:05.925"/>
</kw>
<status status="PASS" starttime="20230708 15:06:05.919" endtime="20230708 15:06:05.925"/>
</kw>
<status status="PASS" starttime="20230708 15:06:01.178" endtime="20230708 15:06:05.925"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:06:05.928" endtime="20230708 15:06:05.928"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:05.928" endtime="20230708 15:06:05.929"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:06:05.929" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:06:05.929" endtime="20230708 15:06:05.929"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:05.929" endtime="20230708 15:06:06.110"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:06.169" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:06.111" endtime="20230708 15:06:06.169"/>
</kw>
<status status="PASS" starttime="20230708 15:06:06.110" endtime="20230708 15:06:06.170"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:06.170" endtime="20230708 15:06:06.449"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:06.494" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:06:06.449" endtime="20230708 15:06:06.494"/>
</kw>
<status status="PASS" starttime="20230708 15:06:05.929" endtime="20230708 15:06:06.494"/>
</branch>
<status status="PASS" starttime="20230708 15:06:05.928" endtime="20230708 15:06:06.495"/>
</if>
<status status="PASS" starttime="20230708 15:06:05.927" endtime="20230708 15:06:06.495"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:06:06.497" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:06:06.497" endtime="20230708 15:06:06.497"/>
</kw>
<status status="PASS" starttime="20230708 15:06:06.495" endtime="20230708 15:06:06.498"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:06:06.500" endtime="20230708 15:06:06.501"/>
</kw>
<status status="PASS" starttime="20230708 15:06:06.499" endtime="20230708 15:06:06.501"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:06.502" endtime="20230708 15:06:07.020"/>
</kw>
<status status="PASS" starttime="20230708 15:06:06.502" endtime="20230708 15:06:07.021"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:10.779" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:07.022" endtime="20230708 15:06:10.779"/>
</kw>
<status status="PASS" starttime="20230708 15:06:07.021" endtime="20230708 15:06:10.779"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:06:11.035" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:06:10.780" endtime="20230708 15:06:11.035"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:06:11.035" endtime="20230708 15:06:11.036"/>
</kw>
<status status="PASS" starttime="20230708 15:06:07.021" endtime="20230708 15:06:11.036"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:11.037" endtime="20230708 15:06:16.669"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:18.036" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:16.671" endtime="20230708 15:06:18.037"/>
</kw>
<status status="PASS" starttime="20230708 15:06:16.669" endtime="20230708 15:06:18.037"/>
</kw>
<status status="PASS" starttime="20230708 15:06:11.036" endtime="20230708 15:06:18.037"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:06:18.055" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:06:18.056" level="INFO">${elements} = ['element=a2dcaa3a-9a01-492e-b797-9d947c0e9531']</msg>
<status status="PASS" starttime="20230708 15:06:18.039" endtime="20230708 15:06:18.056"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:06:18.057" level="INFO">${first_element} = element=a2dcaa3a-9a01-492e-b797-9d947c0e9531</msg>
<status status="PASS" starttime="20230708 15:06:18.056" endtime="20230708 15:06:18.057"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:18.057" endtime="20230708 15:06:18.249"/>
</kw>
<status status="PASS" starttime="20230708 15:06:18.038" endtime="20230708 15:06:18.250"/>
</kw>
<status status="PASS" starttime="20230708 15:06:18.037" endtime="20230708 15:06:18.250"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:18.251" endtime="20230708 15:06:20.750"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:20.769" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:20.752" endtime="20230708 15:06:20.769"/>
</kw>
<status status="PASS" starttime="20230708 15:06:20.751" endtime="20230708 15:06:20.770"/>
</kw>
<status status="PASS" starttime="20230708 15:06:18.251" endtime="20230708 15:06:20.770"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:20.771" endtime="20230708 15:06:21.253"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:21.667" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:21.254" endtime="20230708 15:06:21.668"/>
</kw>
<status status="PASS" starttime="20230708 15:06:21.253" endtime="20230708 15:06:21.668"/>
</kw>
<status status="PASS" starttime="20230708 15:06:20.770" endtime="20230708 15:06:21.668"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:21.670" endtime="20230708 15:06:21.925"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:21.946" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:21.926" endtime="20230708 15:06:21.946"/>
</kw>
<status status="PASS" starttime="20230708 15:06:21.925" endtime="20230708 15:06:21.946"/>
</kw>
<status status="PASS" starttime="20230708 15:06:21.669" endtime="20230708 15:06:21.947"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:21.948" endtime="20230708 15:06:22.173"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:22.215" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:22.174" endtime="20230708 15:06:22.215"/>
</kw>
<status status="PASS" starttime="20230708 15:06:22.173" endtime="20230708 15:06:22.215"/>
</kw>
<status status="PASS" starttime="20230708 15:06:21.947" endtime="20230708 15:06:22.216"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:22.216" endtime="20230708 15:06:22.509"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:22.538" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:22.510" endtime="20230708 15:06:22.539"/>
</kw>
<status status="PASS" starttime="20230708 15:06:22.510" endtime="20230708 15:06:22.539"/>
</kw>
<status status="PASS" starttime="20230708 15:06:22.216" endtime="20230708 15:06:22.539"/>
</kw>
<status status="PASS" starttime="20230708 15:06:18.250" endtime="20230708 15:06:22.539"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:06:22.849" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:06:22.541" endtime="20230708 15:06:22.849"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:22.540" endtime="20230708 15:06:22.851"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.851" endtime="20230708 15:06:22.851"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.851" endtime="20230708 15:06:22.851"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.852" endtime="20230708 15:06:22.852"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.852" endtime="20230708 15:06:22.852"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.852" endtime="20230708 15:06:22.852"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.853" endtime="20230708 15:06:22.853"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.853" endtime="20230708 15:06:22.853"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.854" endtime="20230708 15:06:22.854"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:22.854" endtime="20230708 15:06:22.854"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:06:22.854" endtime="20230708 15:06:22.854"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:22.854" endtime="20230708 15:06:22.854"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:06:22.853" endtime="20230708 15:06:22.854"/>
</if>
<status status="FAIL" starttime="20230708 15:06:22.540" endtime="20230708 15:06:22.855"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.856" endtime="20230708 15:06:22.856"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.856" endtime="20230708 15:06:22.856"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.856" endtime="20230708 15:06:22.856"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:05.926" endtime="20230708 15:06:22.857"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.857" endtime="20230708 15:06:22.857"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.857" endtime="20230708 15:06:22.857"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.858" endtime="20230708 15:06:22.858"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.858" endtime="20230708 15:06:22.858"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.858" endtime="20230708 15:06:22.858"/>
</kw>
<kw name="Verify email with valid email" library="booking">
<status status="NOT RUN" starttime="20230708 15:06:22.858" endtime="20230708 15:06:22.858"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:06:23.504" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:06:22.859" endtime="20230708 15:06:23.504"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:01.177" endtime="20230708 15:06:23.504">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t8" name="Verify invalid email field validation when inviting guest" line="60">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:06:23.510" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/25f11f8b-d0db-478f-a116-aff08aa864d1"}</msg>
<msg timestamp="20230708 15:06:24.233" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/25f11f8b-d0db-478f-a116-aff08aa864d1"}</msg>
<status status="PASS" starttime="20230708 15:06:23.509" endtime="20230708 15:06:24.233"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:06:24.234" endtime="20230708 15:06:24.235"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:06:24.239" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:06:24.312" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:06:24.313" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:06:24.235" endtime="20230708 15:06:24.313"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:06:26.861" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:06:24.313" endtime="20230708 15:06:26.862"/>
</kw>
<status status="PASS" starttime="20230708 15:06:23.509" endtime="20230708 15:06:26.862"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:06:26.862" endtime="20230708 15:06:28.530"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:06:28.535" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:06:28.532" endtime="20230708 15:06:28.535"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:06:28.590" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:06:28.591" level="INFO">${els} = ['element=a5965cf5-d439-4bea-b0bb-ec3681d976a6']</msg>
<status status="PASS" starttime="20230708 15:06:28.536" endtime="20230708 15:06:28.591"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:06:28.592" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:06:28.592" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:06:28.591" endtime="20230708 15:06:28.592"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:06:28.593" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:06:28.592" endtime="20230708 15:06:28.593"/>
</kw>
<status status="PASS" starttime="20230708 15:06:28.592" endtime="20230708 15:06:28.593"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:06:28.593" endtime="20230708 15:06:28.593"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:28.593" endtime="20230708 15:06:28.593"/>
</branch>
<status status="PASS" starttime="20230708 15:06:28.592" endtime="20230708 15:06:28.593"/>
</if>
<status status="PASS" starttime="20230708 15:06:28.535" endtime="20230708 15:06:28.594"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:06:28.594" endtime="20230708 15:06:28.594"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:28.594" endtime="20230708 15:06:28.594"/>
</branch>
<status status="PASS" starttime="20230708 15:06:28.535" endtime="20230708 15:06:28.594"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:06:28.599" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:06:28.594" endtime="20230708 15:06:28.599"/>
</kw>
<msg timestamp="20230708 15:06:28.600" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:06:28.531" endtime="20230708 15:06:28.600"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:28.600" endtime="20230708 15:06:28.687"/>
</kw>
<status status="PASS" starttime="20230708 15:06:28.600" endtime="20230708 15:06:28.692"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:06:28.692" endtime="20230708 15:06:28.692"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:28.692" endtime="20230708 15:06:28.692"/>
</branch>
<status status="PASS" starttime="20230708 15:06:28.600" endtime="20230708 15:06:28.693"/>
</if>
<status status="PASS" starttime="20230708 15:06:28.530" endtime="20230708 15:06:28.693"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:06:28.700" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:06:28.695" endtime="20230708 15:06:28.700"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:06:28.701" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:06:28.701" endtime="20230708 15:06:28.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:06:28.701" endtime="20230708 15:06:28.702"/>
</kw>
<status status="PASS" starttime="20230708 15:06:28.693" endtime="20230708 15:06:28.702"/>
</kw>
<status status="PASS" starttime="20230708 15:06:23.508" endtime="20230708 15:06:28.702"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:06:28.706" endtime="20230708 15:06:28.706"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:06:28.706" endtime="20230708 15:06:28.706"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:06:28.707" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:06:28.706" endtime="20230708 15:06:28.707"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:28.707" endtime="20230708 15:06:28.846"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:28.861" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:28.847" endtime="20230708 15:06:28.861"/>
</kw>
<status status="PASS" starttime="20230708 15:06:28.846" endtime="20230708 15:06:28.861"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:28.862" endtime="20230708 15:06:29.019"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:29.048" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:06:29.019" endtime="20230708 15:06:29.048"/>
</kw>
<status status="PASS" starttime="20230708 15:06:28.706" endtime="20230708 15:06:29.049"/>
</branch>
<status status="PASS" starttime="20230708 15:06:28.705" endtime="20230708 15:06:29.049"/>
</if>
<status status="PASS" starttime="20230708 15:06:28.703" endtime="20230708 15:06:29.049"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:06:29.050" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:06:29.050" endtime="20230708 15:06:29.050"/>
</kw>
<status status="PASS" starttime="20230708 15:06:29.049" endtime="20230708 15:06:29.050"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:06:29.051" endtime="20230708 15:06:29.051"/>
</kw>
<status status="PASS" starttime="20230708 15:06:29.051" endtime="20230708 15:06:29.052"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:29.053" endtime="20230708 15:06:29.535"/>
</kw>
<status status="PASS" starttime="20230708 15:06:29.052" endtime="20230708 15:06:29.535"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:33.199" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:29.537" endtime="20230708 15:06:33.199"/>
</kw>
<status status="PASS" starttime="20230708 15:06:29.536" endtime="20230708 15:06:33.199"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:06:33.453" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:06:33.200" endtime="20230708 15:06:33.453"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:06:33.453" endtime="20230708 15:06:33.454"/>
</kw>
<status status="PASS" starttime="20230708 15:06:29.536" endtime="20230708 15:06:33.454"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:06:33.456" endtime="20230708 15:06:39.301"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:06:40.565" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:06:39.302" endtime="20230708 15:06:40.566"/>
</kw>
<status status="PASS" starttime="20230708 15:06:39.302" endtime="20230708 15:06:40.566"/>
</kw>
<status status="PASS" starttime="20230708 15:06:33.456" endtime="20230708 15:06:40.566"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:06:40.593" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:06:40.593" level="INFO">${elements} = ['element=8932a696-0983-4670-82d7-d9ad1111294c']</msg>
<status status="PASS" starttime="20230708 15:06:40.567" endtime="20230708 15:06:40.594"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:06:40.594" level="INFO">${first_element} = element=8932a696-0983-4670-82d7-d9ad1111294c</msg>
<status status="PASS" starttime="20230708 15:06:40.594" endtime="20230708 15:06:40.594"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230708 15:08:10.734" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230708 15:08:10.735" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:08:10.735" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
element was detached from the DOM, retrying
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action,
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230708 15:06:40.595" endtime="20230708 15:08:10.739"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:40.567" endtime="20230708 15:08:10.740"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:40.566" endtime="20230708 15:08:10.741"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.742" endtime="20230708 15:08:10.742"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<status status="NOT RUN" starttime="20230708 15:08:10.742" endtime="20230708 15:08:10.742"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.742" endtime="20230708 15:08:10.742"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.743" endtime="20230708 15:08:10.743"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.743" endtime="20230708 15:08:10.743"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:28.702" endtime="20230708 15:08:10.744"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.744" endtime="20230708 15:08:10.744"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.744" endtime="20230708 15:08:10.744"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.744" endtime="20230708 15:08:10.745"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.745" endtime="20230708 15:08:10.745"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.745" endtime="20230708 15:08:10.745"/>
</kw>
<kw name="Verify email with invalid email" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:10.745" endtime="20230708 15:08:10.745"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:08:11.443" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:08:10.746" endtime="20230708 15:08:11.444"/>
</kw>
<status status="FAIL" starttime="20230708 15:06:23.508" endtime="20230708 15:08:11.444">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
    [ Message content over the limit has been removed. ]
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action,
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s3-t9" name="Verify Warning popup when inviting blocked guest" line="69">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:08:11.450" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/db2494d2-f120-43cb-8c59-9e88b6ee0d98"}</msg>
<msg timestamp="20230708 15:08:12.154" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/db2494d2-f120-43cb-8c59-9e88b6ee0d98"}</msg>
<status status="PASS" starttime="20230708 15:08:11.449" endtime="20230708 15:08:12.154"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:08:12.155" endtime="20230708 15:08:12.155"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:08:12.159" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:08:12.251" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:08:12.251" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:08:12.156" endtime="20230708 15:08:12.251"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:08:14.955" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:08:12.251" endtime="20230708 15:08:14.956"/>
</kw>
<status status="PASS" starttime="20230708 15:08:11.449" endtime="20230708 15:08:14.956"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:08:14.956" endtime="20230708 15:08:16.355"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:08:16.360" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:08:16.357" endtime="20230708 15:08:16.360"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:08:16.412" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:08:16.412" level="INFO">${els} = ['element=0d41c8ed-5b7e-498e-ac95-221436a94ee3']</msg>
<status status="PASS" starttime="20230708 15:08:16.361" endtime="20230708 15:08:16.412"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:08:16.413" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:08:16.413" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:08:16.412" endtime="20230708 15:08:16.413"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:08:16.414" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:08:16.413" endtime="20230708 15:08:16.414"/>
</kw>
<status status="PASS" starttime="20230708 15:08:16.413" endtime="20230708 15:08:16.414"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:08:16.414" endtime="20230708 15:08:16.414"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:16.414" endtime="20230708 15:08:16.414"/>
</branch>
<status status="PASS" starttime="20230708 15:08:16.413" endtime="20230708 15:08:16.414"/>
</if>
<status status="PASS" starttime="20230708 15:08:16.360" endtime="20230708 15:08:16.415"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:08:16.415" endtime="20230708 15:08:16.415"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:16.415" endtime="20230708 15:08:16.415"/>
</branch>
<status status="PASS" starttime="20230708 15:08:16.360" endtime="20230708 15:08:16.415"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:08:16.418" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:08:16.416" endtime="20230708 15:08:16.419"/>
</kw>
<msg timestamp="20230708 15:08:16.419" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:08:16.356" endtime="20230708 15:08:16.419"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:16.420" endtime="20230708 15:08:16.513"/>
</kw>
<status status="PASS" starttime="20230708 15:08:16.419" endtime="20230708 15:08:16.513"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:08:16.514" endtime="20230708 15:08:16.514"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:16.514" endtime="20230708 15:08:16.514"/>
</branch>
<status status="PASS" starttime="20230708 15:08:16.419" endtime="20230708 15:08:16.514"/>
</if>
<status status="PASS" starttime="20230708 15:08:16.355" endtime="20230708 15:08:16.514"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:08:16.520" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:08:16.515" endtime="20230708 15:08:16.521"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:08:16.521" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:08:16.521" endtime="20230708 15:08:16.521"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:08:16.522" endtime="20230708 15:08:16.522"/>
</kw>
<status status="PASS" starttime="20230708 15:08:16.515" endtime="20230708 15:08:16.522"/>
</kw>
<status status="PASS" starttime="20230708 15:08:11.448" endtime="20230708 15:08:16.522"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:08:16.525" endtime="20230708 15:08:16.525"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:16.525" endtime="20230708 15:08:16.525"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:08:16.526" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:08:16.525" endtime="20230708 15:08:16.526"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:16.526" endtime="20230708 15:08:16.643"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:16.764" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:16.645" endtime="20230708 15:08:16.764"/>
</kw>
<status status="PASS" starttime="20230708 15:08:16.644" endtime="20230708 15:08:16.765"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:16.765" endtime="20230708 15:08:16.984"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:17.074" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:08:16.984" endtime="20230708 15:08:17.074"/>
</kw>
<status status="PASS" starttime="20230708 15:08:16.525" endtime="20230708 15:08:17.074"/>
</branch>
<status status="PASS" starttime="20230708 15:08:16.524" endtime="20230708 15:08:17.075"/>
</if>
<status status="PASS" starttime="20230708 15:08:16.524" endtime="20230708 15:08:17.075"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:08:17.076" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:08:17.076" endtime="20230708 15:08:17.076"/>
</kw>
<status status="PASS" starttime="20230708 15:08:17.075" endtime="20230708 15:08:17.076"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:08:17.078" endtime="20230708 15:08:17.079"/>
</kw>
<status status="PASS" starttime="20230708 15:08:17.076" endtime="20230708 15:08:17.079"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:17.079" endtime="20230708 15:08:17.673"/>
</kw>
<status status="PASS" starttime="20230708 15:08:17.079" endtime="20230708 15:08:17.673"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:21.266" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:17.675" endtime="20230708 15:08:21.266"/>
</kw>
<status status="PASS" starttime="20230708 15:08:17.674" endtime="20230708 15:08:21.267"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:08:21.522" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:08:21.268" endtime="20230708 15:08:21.522"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:08:21.522" endtime="20230708 15:08:21.523"/>
</kw>
<status status="PASS" starttime="20230708 15:08:17.674" endtime="20230708 15:08:21.523"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:21.524" endtime="20230708 15:08:27.318"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:28.374" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:27.320" endtime="20230708 15:08:28.374"/>
</kw>
<status status="PASS" starttime="20230708 15:08:27.318" endtime="20230708 15:08:28.375"/>
</kw>
<status status="PASS" starttime="20230708 15:08:21.523" endtime="20230708 15:08:28.375"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:08:28.393" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:08:28.393" level="INFO">${elements} = ['element=ae029ce5-328b-4faa-8065-a3434767cd96']</msg>
<status status="PASS" starttime="20230708 15:08:28.376" endtime="20230708 15:08:28.393"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:08:28.394" level="INFO">${first_element} = element=ae029ce5-328b-4faa-8065-a3434767cd96</msg>
<status status="PASS" starttime="20230708 15:08:28.394" endtime="20230708 15:08:28.394"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:28.394" endtime="20230708 15:08:28.561"/>
</kw>
<status status="PASS" starttime="20230708 15:08:28.376" endtime="20230708 15:08:28.561"/>
</kw>
<status status="PASS" starttime="20230708 15:08:28.375" endtime="20230708 15:08:28.562"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:28.563" endtime="20230708 15:08:30.416"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:30.505" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:30.417" endtime="20230708 15:08:30.505"/>
</kw>
<status status="PASS" starttime="20230708 15:08:30.416" endtime="20230708 15:08:30.505"/>
</kw>
<status status="PASS" starttime="20230708 15:08:28.562" endtime="20230708 15:08:30.506"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:30.507" endtime="20230708 15:08:30.979"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:31.120" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:30.980" endtime="20230708 15:08:31.121"/>
</kw>
<status status="PASS" starttime="20230708 15:08:30.980" endtime="20230708 15:08:31.121"/>
</kw>
<status status="PASS" starttime="20230708 15:08:30.506" endtime="20230708 15:08:31.121"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:31.122" endtime="20230708 15:08:31.441"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:31.457" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:31.442" endtime="20230708 15:08:31.458"/>
</kw>
<status status="PASS" starttime="20230708 15:08:31.441" endtime="20230708 15:08:31.458"/>
</kw>
<status status="PASS" starttime="20230708 15:08:31.122" endtime="20230708 15:08:31.458"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:31.459" endtime="20230708 15:08:31.706"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:31.727" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:31.707" endtime="20230708 15:08:31.727"/>
</kw>
<status status="PASS" starttime="20230708 15:08:31.706" endtime="20230708 15:08:31.727"/>
</kw>
<status status="PASS" starttime="20230708 15:08:31.458" endtime="20230708 15:08:31.728"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:31.728" endtime="20230708 15:08:32.147"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:32.171" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:32.148" endtime="20230708 15:08:32.172"/>
</kw>
<status status="PASS" starttime="20230708 15:08:32.147" endtime="20230708 15:08:32.172"/>
</kw>
<status status="PASS" starttime="20230708 15:08:31.728" endtime="20230708 15:08:32.172"/>
</kw>
<status status="PASS" starttime="20230708 15:08:28.562" endtime="20230708 15:08:32.172"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:08:32.492" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:08:32.174" endtime="20230708 15:08:32.492"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:32.173" endtime="20230708 15:08:32.493"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.494" endtime="20230708 15:08:32.494"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.494" endtime="20230708 15:08:32.494"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.494" endtime="20230708 15:08:32.494"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.495" endtime="20230708 15:08:32.495"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.495" endtime="20230708 15:08:32.495"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.495" endtime="20230708 15:08:32.496"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.496" endtime="20230708 15:08:32.496"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.496" endtime="20230708 15:08:32.497"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:32.496" endtime="20230708 15:08:32.497"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:08:32.497" endtime="20230708 15:08:32.497"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:32.497" endtime="20230708 15:08:32.497"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:08:32.496" endtime="20230708 15:08:32.497"/>
</if>
<status status="FAIL" starttime="20230708 15:08:32.173" endtime="20230708 15:08:32.498"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.499" endtime="20230708 15:08:32.499"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.500" endtime="20230708 15:08:32.500"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.500" endtime="20230708 15:08:32.500"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:16.524" endtime="20230708 15:08:32.501"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.501" endtime="20230708 15:08:32.502"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.502" endtime="20230708 15:08:32.502"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.502" endtime="20230708 15:08:32.502"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.502" endtime="20230708 15:08:32.502"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.502" endtime="20230708 15:08:32.503"/>
</kw>
<kw name="Fill invite guest info with block guest email" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.503" endtime="20230708 15:08:32.503"/>
</kw>
<kw name="Verify Warning Popup is displayed with blocker email" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.503" endtime="20230708 15:08:32.503"/>
</kw>
<kw name="Close Warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:32.503" endtime="20230708 15:08:32.503"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:08:33.162" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:08:32.504" endtime="20230708 15:08:33.163"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:11.447" endtime="20230708 15:08:33.163">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t10" name="Verify invite guest with guest email same as booker email" line="80">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:08:33.172" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0d8e8afd-b304-44bd-9d86-7d7975e440ee"}</msg>
<msg timestamp="20230708 15:08:33.846" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0d8e8afd-b304-44bd-9d86-7d7975e440ee"}</msg>
<status status="PASS" starttime="20230708 15:08:33.171" endtime="20230708 15:08:33.846"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:08:33.846" endtime="20230708 15:08:33.847"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:08:33.848" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:08:33.916" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:08:33.916" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:08:33.847" endtime="20230708 15:08:33.916"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:08:36.583" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:08:33.917" endtime="20230708 15:08:36.583"/>
</kw>
<status status="PASS" starttime="20230708 15:08:33.170" endtime="20230708 15:08:36.583"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:08:36.584" endtime="20230708 15:08:37.907"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:08:37.912" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:08:37.909" endtime="20230708 15:08:37.912"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:08:37.968" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:08:37.969" level="INFO">${els} = ['element=7085cc98-c5dc-44d4-aa17-7780f2b6207b']</msg>
<status status="PASS" starttime="20230708 15:08:37.912" endtime="20230708 15:08:37.969"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:08:37.970" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:08:37.970" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:08:37.969" endtime="20230708 15:08:37.970"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:08:37.971" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:08:37.970" endtime="20230708 15:08:37.971"/>
</kw>
<status status="PASS" starttime="20230708 15:08:37.970" endtime="20230708 15:08:37.971"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:08:37.971" endtime="20230708 15:08:37.971"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:37.971" endtime="20230708 15:08:37.971"/>
</branch>
<status status="PASS" starttime="20230708 15:08:37.970" endtime="20230708 15:08:37.971"/>
</if>
<status status="PASS" starttime="20230708 15:08:37.912" endtime="20230708 15:08:37.972"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:08:37.972" endtime="20230708 15:08:37.972"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:37.972" endtime="20230708 15:08:37.972"/>
</branch>
<status status="PASS" starttime="20230708 15:08:37.912" endtime="20230708 15:08:37.972"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:08:37.976" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:08:37.973" endtime="20230708 15:08:37.976"/>
</kw>
<msg timestamp="20230708 15:08:37.976" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:08:37.908" endtime="20230708 15:08:37.976"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:37.977" endtime="20230708 15:08:38.055"/>
</kw>
<status status="PASS" starttime="20230708 15:08:37.977" endtime="20230708 15:08:38.055"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:08:38.055" endtime="20230708 15:08:38.056"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:38.055" endtime="20230708 15:08:38.056"/>
</branch>
<status status="PASS" starttime="20230708 15:08:37.976" endtime="20230708 15:08:38.056"/>
</if>
<status status="PASS" starttime="20230708 15:08:37.908" endtime="20230708 15:08:38.056"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:08:38.059" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:08:38.057" endtime="20230708 15:08:38.059"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:08:38.060" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:08:38.060" endtime="20230708 15:08:38.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:08:38.061" endtime="20230708 15:08:38.061"/>
</kw>
<status status="PASS" starttime="20230708 15:08:38.056" endtime="20230708 15:08:38.062"/>
</kw>
<status status="PASS" starttime="20230708 15:08:33.170" endtime="20230708 15:08:38.062"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:08:38.063" endtime="20230708 15:08:38.063"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:38.063" endtime="20230708 15:08:38.063"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:08:38.064" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:08:38.064" endtime="20230708 15:08:38.064"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:38.064" endtime="20230708 15:08:38.285"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:38.336" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:38.287" endtime="20230708 15:08:38.336"/>
</kw>
<status status="PASS" starttime="20230708 15:08:38.286" endtime="20230708 15:08:38.337"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:38.337" endtime="20230708 15:08:40.468"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:40.510" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:08:40.468" endtime="20230708 15:08:40.510"/>
</kw>
<status status="PASS" starttime="20230708 15:08:38.064" endtime="20230708 15:08:40.510"/>
</branch>
<status status="PASS" starttime="20230708 15:08:38.063" endtime="20230708 15:08:40.511"/>
</if>
<status status="PASS" starttime="20230708 15:08:38.062" endtime="20230708 15:08:40.511"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:08:40.512" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:08:40.512" endtime="20230708 15:08:40.512"/>
</kw>
<status status="PASS" starttime="20230708 15:08:40.511" endtime="20230708 15:08:40.512"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:08:40.513" endtime="20230708 15:08:40.514"/>
</kw>
<status status="PASS" starttime="20230708 15:08:40.512" endtime="20230708 15:08:40.515"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:40.517" endtime="20230708 15:08:41.274"/>
</kw>
<status status="PASS" starttime="20230708 15:08:40.517" endtime="20230708 15:08:41.275"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:44.884" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:41.276" endtime="20230708 15:08:44.885"/>
</kw>
<status status="PASS" starttime="20230708 15:08:41.276" endtime="20230708 15:08:44.885"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:08:45.140" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:08:44.885" endtime="20230708 15:08:45.140"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:08:45.140" endtime="20230708 15:08:45.141"/>
</kw>
<status status="PASS" starttime="20230708 15:08:41.275" endtime="20230708 15:08:45.141"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:45.142" endtime="20230708 15:08:50.953"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:52.360" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:50.954" endtime="20230708 15:08:52.361"/>
</kw>
<status status="PASS" starttime="20230708 15:08:50.954" endtime="20230708 15:08:52.361"/>
</kw>
<status status="PASS" starttime="20230708 15:08:45.141" endtime="20230708 15:08:52.361"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:08:52.380" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:08:52.381" level="INFO">${elements} = ['element=76741df2-f641-4466-85a4-2e54cd1056db']</msg>
<status status="PASS" starttime="20230708 15:08:52.363" endtime="20230708 15:08:52.381"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:08:52.382" level="INFO">${first_element} = element=76741df2-f641-4466-85a4-2e54cd1056db</msg>
<status status="PASS" starttime="20230708 15:08:52.381" endtime="20230708 15:08:52.382"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:52.382" endtime="20230708 15:08:52.559"/>
</kw>
<status status="PASS" starttime="20230708 15:08:52.362" endtime="20230708 15:08:52.560"/>
</kw>
<status status="PASS" starttime="20230708 15:08:52.362" endtime="20230708 15:08:52.560"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:52.561" endtime="20230708 15:08:54.587"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:54.605" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:54.588" endtime="20230708 15:08:54.605"/>
</kw>
<status status="PASS" starttime="20230708 15:08:54.588" endtime="20230708 15:08:54.606"/>
</kw>
<status status="PASS" starttime="20230708 15:08:52.560" endtime="20230708 15:08:54.606"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:54.607" endtime="20230708 15:08:55.071"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:55.090" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:55.072" endtime="20230708 15:08:55.090"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.072" endtime="20230708 15:08:55.090"/>
</kw>
<status status="PASS" starttime="20230708 15:08:54.606" endtime="20230708 15:08:55.091"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:55.091" endtime="20230708 15:08:55.465"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:55.486" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:55.466" endtime="20230708 15:08:55.486"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.466" endtime="20230708 15:08:55.487"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.091" endtime="20230708 15:08:55.487"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:55.488" endtime="20230708 15:08:55.844"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:55.867" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:55.845" endtime="20230708 15:08:55.867"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.845" endtime="20230708 15:08:55.867"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.487" endtime="20230708 15:08:55.868"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:08:55.868" endtime="20230708 15:08:56.224"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:08:56.242" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:08:56.225" endtime="20230708 15:08:56.242"/>
</kw>
<status status="PASS" starttime="20230708 15:08:56.225" endtime="20230708 15:08:56.243"/>
</kw>
<status status="PASS" starttime="20230708 15:08:55.868" endtime="20230708 15:08:56.243"/>
</kw>
<status status="PASS" starttime="20230708 15:08:52.560" endtime="20230708 15:08:56.243"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:08:56.561" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:08:56.244" endtime="20230708 15:08:56.562"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:56.244" endtime="20230708 15:08:56.563"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.564" endtime="20230708 15:08:56.564"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.564" endtime="20230708 15:08:56.564"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.564" endtime="20230708 15:08:56.564"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.564" endtime="20230708 15:08:56.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.565" endtime="20230708 15:08:56.565"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.565" endtime="20230708 15:08:56.565"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.565" endtime="20230708 15:08:56.565"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.566" endtime="20230708 15:08:56.566"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:56.566" endtime="20230708 15:08:56.566"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:08:56.566" endtime="20230708 15:08:56.566"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:08:56.566" endtime="20230708 15:08:56.566"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:08:56.565" endtime="20230708 15:08:56.566"/>
</if>
<status status="FAIL" starttime="20230708 15:08:56.243" endtime="20230708 15:08:56.567"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.568" endtime="20230708 15:08:56.568"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.568" endtime="20230708 15:08:56.568"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.568" endtime="20230708 15:08:56.568"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:38.062" endtime="20230708 15:08:56.569"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.569" endtime="20230708 15:08:56.569"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.569" endtime="20230708 15:08:56.569"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.569" endtime="20230708 15:08:56.570"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.570" endtime="20230708 15:08:56.570"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.570" endtime="20230708 15:08:56.570"/>
</kw>
<kw name="Fill invite guest infor with booker email" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.570" endtime="20230708 15:08:56.570"/>
</kw>
<kw name="Verify Warning Popup is displayed with booker email" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.570" endtime="20230708 15:08:56.570"/>
</kw>
<kw name="Close Warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.571" endtime="20230708 15:08:56.571"/>
</kw>
<kw name="Click Cancel button" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.571" endtime="20230708 15:08:56.571"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<status status="NOT RUN" starttime="20230708 15:08:56.571" endtime="20230708 15:08:56.571"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:08:57.217" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:08:56.572" endtime="20230708 15:08:57.217"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:33.169" endtime="20230708 15:08:57.218">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s3-t11" name="Verify invite guest with valid information" line="93">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:08:57.224" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/d5a0ec66-0606-492a-bd36-753158d1a7b3"}</msg>
<msg timestamp="20230708 15:08:57.894" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/d5a0ec66-0606-492a-bd36-753158d1a7b3"}</msg>
<status status="PASS" starttime="20230708 15:08:57.223" endtime="20230708 15:08:57.894"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:08:57.895" endtime="20230708 15:08:57.899"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:08:57.900" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:08:57.967" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:08:57.967" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:08:57.900" endtime="20230708 15:08:57.967"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:09:00.583" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:08:57.968" endtime="20230708 15:09:00.583"/>
</kw>
<status status="PASS" starttime="20230708 15:08:57.222" endtime="20230708 15:09:00.583"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:09:00.584" endtime="20230708 15:09:01.650"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:09:01.655" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:09:01.652" endtime="20230708 15:09:01.655"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:09:01.711" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:09:01.711" level="INFO">${els} = ['element=bb6714b6-f407-48e6-827d-686234cc27bd']</msg>
<status status="PASS" starttime="20230708 15:09:01.656" endtime="20230708 15:09:01.711"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:09:01.712" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:09:01.712" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:09:01.711" endtime="20230708 15:09:01.712"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:09:01.713" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:09:01.713" endtime="20230708 15:09:01.713"/>
</kw>
<status status="PASS" starttime="20230708 15:09:01.712" endtime="20230708 15:09:01.713"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:09:01.713" endtime="20230708 15:09:01.713"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:01.713" endtime="20230708 15:09:01.713"/>
</branch>
<status status="PASS" starttime="20230708 15:09:01.712" endtime="20230708 15:09:01.714"/>
</if>
<status status="PASS" starttime="20230708 15:09:01.655" endtime="20230708 15:09:01.714"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:09:01.714" endtime="20230708 15:09:01.714"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:01.714" endtime="20230708 15:09:01.714"/>
</branch>
<status status="PASS" starttime="20230708 15:09:01.655" endtime="20230708 15:09:01.714"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:09:01.718" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:09:01.714" endtime="20230708 15:09:01.718"/>
</kw>
<msg timestamp="20230708 15:09:01.718" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:09:01.651" endtime="20230708 15:09:01.718"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:01.719" endtime="20230708 15:09:01.825"/>
</kw>
<status status="PASS" starttime="20230708 15:09:01.719" endtime="20230708 15:09:01.826"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:09:01.826" endtime="20230708 15:09:01.826"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:01.826" endtime="20230708 15:09:01.826"/>
</branch>
<status status="PASS" starttime="20230708 15:09:01.719" endtime="20230708 15:09:01.826"/>
</if>
<status status="PASS" starttime="20230708 15:09:01.651" endtime="20230708 15:09:01.827"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:09:01.831" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:09:01.828" endtime="20230708 15:09:01.831"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:09:01.833" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:09:01.832" endtime="20230708 15:09:01.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:09:01.833" endtime="20230708 15:09:01.833"/>
</kw>
<status status="PASS" starttime="20230708 15:09:01.827" endtime="20230708 15:09:01.834"/>
</kw>
<status status="PASS" starttime="20230708 15:08:57.222" endtime="20230708 15:09:01.834"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:09:01.835" endtime="20230708 15:09:01.836"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:01.835" endtime="20230708 15:09:01.836"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:09:01.836" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:09:01.836" endtime="20230708 15:09:01.836"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:01.836" endtime="20230708 15:09:01.954"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:01.967" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:01.955" endtime="20230708 15:09:01.968"/>
</kw>
<status status="PASS" starttime="20230708 15:09:01.954" endtime="20230708 15:09:01.968"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:01.968" endtime="20230708 15:09:02.245"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:02.364" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:09:02.246" endtime="20230708 15:09:02.365"/>
</kw>
<status status="PASS" starttime="20230708 15:09:01.836" endtime="20230708 15:09:02.365"/>
</branch>
<status status="PASS" starttime="20230708 15:09:01.835" endtime="20230708 15:09:02.365"/>
</if>
<status status="PASS" starttime="20230708 15:09:01.834" endtime="20230708 15:09:02.365"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:09:02.366" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:09:02.366" endtime="20230708 15:09:02.366"/>
</kw>
<status status="PASS" starttime="20230708 15:09:02.366" endtime="20230708 15:09:02.367"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:09:02.367" endtime="20230708 15:09:02.368"/>
</kw>
<status status="PASS" starttime="20230708 15:09:02.367" endtime="20230708 15:09:02.368"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:02.369" endtime="20230708 15:09:02.951"/>
</kw>
<status status="PASS" starttime="20230708 15:09:02.368" endtime="20230708 15:09:02.951"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:06.710" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:02.953" endtime="20230708 15:09:06.710"/>
</kw>
<status status="PASS" starttime="20230708 15:09:02.952" endtime="20230708 15:09:06.711"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:09:06.969" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:09:06.711" endtime="20230708 15:09:06.969"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:09:06.970" endtime="20230708 15:09:06.970"/>
</kw>
<status status="PASS" starttime="20230708 15:09:02.952" endtime="20230708 15:09:06.970"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:06.971" endtime="20230708 15:09:12.591"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:13.809" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:12.592" endtime="20230708 15:09:13.809"/>
</kw>
<status status="PASS" starttime="20230708 15:09:12.592" endtime="20230708 15:09:13.810"/>
</kw>
<status status="PASS" starttime="20230708 15:09:06.970" endtime="20230708 15:09:13.810"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:09:13.823" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:09:13.823" level="INFO">${elements} = ['element=08ae80f6-51e3-45ec-b92b-01fd91f76ee1']</msg>
<status status="PASS" starttime="20230708 15:09:13.813" endtime="20230708 15:09:13.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:09:13.824" level="INFO">${first_element} = element=08ae80f6-51e3-45ec-b92b-01fd91f76ee1</msg>
<status status="PASS" starttime="20230708 15:09:13.824" endtime="20230708 15:09:13.824"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:13.824" endtime="20230708 15:09:13.972"/>
</kw>
<status status="PASS" starttime="20230708 15:09:13.811" endtime="20230708 15:09:13.972"/>
</kw>
<status status="PASS" starttime="20230708 15:09:13.810" endtime="20230708 15:09:13.973"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:13.974" endtime="20230708 15:09:15.727"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:15.742" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:15.728" endtime="20230708 15:09:15.743"/>
</kw>
<status status="PASS" starttime="20230708 15:09:15.727" endtime="20230708 15:09:15.743"/>
</kw>
<status status="PASS" starttime="20230708 15:09:13.973" endtime="20230708 15:09:15.743"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:15.744" endtime="20230708 15:09:16.260"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:16.278" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:16.261" endtime="20230708 15:09:16.278"/>
</kw>
<status status="PASS" starttime="20230708 15:09:16.260" endtime="20230708 15:09:16.279"/>
</kw>
<status status="PASS" starttime="20230708 15:09:15.743" endtime="20230708 15:09:16.279"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:16.280" endtime="20230708 15:09:16.657"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:16.676" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:16.658" endtime="20230708 15:09:16.676"/>
</kw>
<status status="PASS" starttime="20230708 15:09:16.658" endtime="20230708 15:09:16.676"/>
</kw>
<status status="PASS" starttime="20230708 15:09:16.279" endtime="20230708 15:09:16.676"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:16.677" endtime="20230708 15:09:17.061"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:17.078" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:17.062" endtime="20230708 15:09:17.078"/>
</kw>
<status status="PASS" starttime="20230708 15:09:17.062" endtime="20230708 15:09:17.079"/>
</kw>
<status status="PASS" starttime="20230708 15:09:16.677" endtime="20230708 15:09:17.079"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:17.080" endtime="20230708 15:09:17.440"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:17.460" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:17.441" endtime="20230708 15:09:17.460"/>
</kw>
<status status="PASS" starttime="20230708 15:09:17.440" endtime="20230708 15:09:17.461"/>
</kw>
<status status="PASS" starttime="20230708 15:09:17.079" endtime="20230708 15:09:17.461"/>
</kw>
<status status="PASS" starttime="20230708 15:09:13.973" endtime="20230708 15:09:17.461"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:09:17.861" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:09:17.463" endtime="20230708 15:09:17.862"/>
</kw>
<status status="FAIL" starttime="20230708 15:09:17.462" endtime="20230708 15:09:17.863"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.864" endtime="20230708 15:09:17.864"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.864" endtime="20230708 15:09:17.864"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.864" endtime="20230708 15:09:17.865"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.865" endtime="20230708 15:09:17.865"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.865" endtime="20230708 15:09:17.865"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.865" endtime="20230708 15:09:17.865"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.866" endtime="20230708 15:09:17.866"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.866" endtime="20230708 15:09:17.866"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:17.866" endtime="20230708 15:09:17.866"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:09:17.867" endtime="20230708 15:09:17.867"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:17.867" endtime="20230708 15:09:17.867"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:09:17.866" endtime="20230708 15:09:17.867"/>
</if>
<status status="FAIL" starttime="20230708 15:09:17.462" endtime="20230708 15:09:17.868"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.868" endtime="20230708 15:09:17.868"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.868" endtime="20230708 15:09:17.868"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.869" endtime="20230708 15:09:17.869"/>
</kw>
<status status="FAIL" starttime="20230708 15:09:01.834" endtime="20230708 15:09:17.869"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.870" endtime="20230708 15:09:17.870"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.870" endtime="20230708 15:09:17.870"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.870" endtime="20230708 15:09:17.870"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.870" endtime="20230708 15:09:17.870"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.871" endtime="20230708 15:09:17.871"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.871" endtime="20230708 15:09:17.871"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.871" endtime="20230708 15:09:17.871"/>
</kw>
<kw name="Notice &quot;Invite sent&quot; displays" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.871" endtime="20230708 15:09:17.871"/>
</kw>
<kw name="Status of guest confirmation is changed to &quot;Invite sent, not check-in&quot;" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.871" endtime="20230708 15:09:17.872"/>
</kw>
<kw name="Verify Guest information component" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.872" endtime="20230708 15:09:17.872"/>
</kw>
<kw name="Verify Booking summary" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.872" endtime="20230708 15:09:17.872"/>
</kw>
<kw name="Verify Guest information popup when guest not checkin" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.872" endtime="20230708 15:09:17.872"/>
</kw>
<kw name="Click Uninvite button" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:17.872" endtime="20230708 15:09:17.872"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:09:18.533" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:09:17.873" endtime="20230708 15:09:18.533"/>
</kw>
<status status="FAIL" starttime="20230708 15:08:57.221" endtime="20230708 15:09:18.534">TypeError: expected string or bytes-like object</status>
</test>
<status status="FAIL" starttime="20230708 15:03:48.637" endtime="20230708 15:09:18.538"/>
</suite>
<suite id="s1-s1-s1-s1-s4" name="BUI2-559" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-559.robot">
<test id="s1-s1-s1-s1-s4-t1" name="UI authentication Formerly guest info when invited adult" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:09:18.567" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6470d67d-ae08-40c4-a7d6-b5ce18ebb58a"}</msg>
<msg timestamp="20230708 15:09:19.237" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6470d67d-ae08-40c4-a7d6-b5ce18ebb58a"}</msg>
<status status="PASS" starttime="20230708 15:09:18.566" endtime="20230708 15:09:19.237"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:09:19.240" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:09:19.237" endtime="20230708 15:09:19.240"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:09:19.240" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:09:19.289" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:09:19.290" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:09:19.240" endtime="20230708 15:09:19.290"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:09:21.929" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:09:19.290" endtime="20230708 15:09:21.930"/>
</kw>
<status status="PASS" starttime="20230708 15:09:18.566" endtime="20230708 15:09:21.930"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:09:21.931" endtime="20230708 15:09:23.654"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:09:23.660" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:09:23.656" endtime="20230708 15:09:23.660"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:09:23.715" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:09:23.715" level="INFO">${els} = ['element=0abfa805-da4c-4c7f-b0f1-d0a50ad81666']</msg>
<status status="PASS" starttime="20230708 15:09:23.662" endtime="20230708 15:09:23.715"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:09:23.716" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:09:23.716" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:09:23.715" endtime="20230708 15:09:23.716"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:09:23.717" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:09:23.716" endtime="20230708 15:09:23.717"/>
</kw>
<status status="PASS" starttime="20230708 15:09:23.716" endtime="20230708 15:09:23.717"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:09:23.717" endtime="20230708 15:09:23.717"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:23.717" endtime="20230708 15:09:23.717"/>
</branch>
<status status="PASS" starttime="20230708 15:09:23.716" endtime="20230708 15:09:23.717"/>
</if>
<status status="PASS" starttime="20230708 15:09:23.662" endtime="20230708 15:09:23.718"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:09:23.718" endtime="20230708 15:09:23.718"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:23.718" endtime="20230708 15:09:23.718"/>
</branch>
<status status="PASS" starttime="20230708 15:09:23.661" endtime="20230708 15:09:23.718"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:09:23.721" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:09:23.718" endtime="20230708 15:09:23.721"/>
</kw>
<msg timestamp="20230708 15:09:23.721" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:09:23.655" endtime="20230708 15:09:23.722"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:23.722" endtime="20230708 15:09:23.827"/>
</kw>
<status status="PASS" starttime="20230708 15:09:23.722" endtime="20230708 15:09:23.827"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:09:23.828" endtime="20230708 15:09:23.828"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:23.827" endtime="20230708 15:09:23.828"/>
</branch>
<status status="PASS" starttime="20230708 15:09:23.722" endtime="20230708 15:09:23.828"/>
</if>
<status status="PASS" starttime="20230708 15:09:23.654" endtime="20230708 15:09:23.828"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:09:23.832" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:09:23.829" endtime="20230708 15:09:23.833"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:09:23.833" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:09:23.833" endtime="20230708 15:09:23.833"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:09:23.833" endtime="20230708 15:09:23.834"/>
</kw>
<status status="PASS" starttime="20230708 15:09:23.828" endtime="20230708 15:09:23.834"/>
</kw>
<status status="PASS" starttime="20230708 15:09:18.565" endtime="20230708 15:09:23.834"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:09:23.836" endtime="20230708 15:09:23.836"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:09:23.835" endtime="20230708 15:09:23.836"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:09:23.836" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:09:23.836" endtime="20230708 15:09:23.836"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:23.836" endtime="20230708 15:09:23.953"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:24.077" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:23.954" endtime="20230708 15:09:24.077"/>
</kw>
<status status="PASS" starttime="20230708 15:09:23.953" endtime="20230708 15:09:24.078"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:24.078" endtime="20230708 15:09:25.425"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:25.472" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:09:25.425" endtime="20230708 15:09:25.472"/>
</kw>
<status status="PASS" starttime="20230708 15:09:23.836" endtime="20230708 15:09:25.472"/>
</branch>
<status status="PASS" starttime="20230708 15:09:23.835" endtime="20230708 15:09:25.473"/>
</if>
<status status="PASS" starttime="20230708 15:09:23.835" endtime="20230708 15:09:25.473"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:09:25.474" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:09:25.474" endtime="20230708 15:09:25.474"/>
</kw>
<status status="PASS" starttime="20230708 15:09:25.473" endtime="20230708 15:09:25.474"/>
</kw>
<kw name="Select 1 Room 2 Adult and 1 Children" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, 'guests')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:25.475" endtime="20230708 15:09:25.974"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'adults')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:25.974" endtime="20230708 15:09:26.211"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'children')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:26.212" endtime="20230708 15:09:26.464"/>
</kw>
<status status="PASS" starttime="20230708 15:09:25.474" endtime="20230708 15:09:26.464"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:26.465" endtime="20230708 15:09:26.945"/>
</kw>
<status status="PASS" starttime="20230708 15:09:26.465" endtime="20230708 15:09:26.945"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:30.602" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:26.946" endtime="20230708 15:09:30.602"/>
</kw>
<status status="PASS" starttime="20230708 15:09:26.946" endtime="20230708 15:09:30.603"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:09:30.861" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:09:30.603" endtime="20230708 15:09:30.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:09:30.861" endtime="20230708 15:09:30.862"/>
</kw>
<status status="PASS" starttime="20230708 15:09:26.945" endtime="20230708 15:09:30.862"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:30.863" endtime="20230708 15:09:44.913"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:46.430" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:44.914" endtime="20230708 15:09:46.430"/>
</kw>
<status status="PASS" starttime="20230708 15:09:44.913" endtime="20230708 15:09:46.431"/>
</kw>
<status status="PASS" starttime="20230708 15:09:30.862" endtime="20230708 15:09:46.431"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:09:46.454" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:09:46.454" level="INFO">${elements} = ['element=fd09a7fa-84bf-40da-8215-56d35e1e48e2']</msg>
<status status="PASS" starttime="20230708 15:09:46.432" endtime="20230708 15:09:46.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:09:46.456" level="INFO">${first_element} = element=fd09a7fa-84bf-40da-8215-56d35e1e48e2</msg>
<status status="PASS" starttime="20230708 15:09:46.455" endtime="20230708 15:09:46.456"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:46.456" endtime="20230708 15:09:51.529"/>
</kw>
<status status="PASS" starttime="20230708 15:09:46.432" endtime="20230708 15:09:51.529"/>
</kw>
<status status="PASS" starttime="20230708 15:09:46.431" endtime="20230708 15:09:51.529"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:51.531" endtime="20230708 15:09:53.597"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:53.622" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:53.598" endtime="20230708 15:09:53.622"/>
</kw>
<status status="PASS" starttime="20230708 15:09:53.597" endtime="20230708 15:09:53.623"/>
</kw>
<status status="PASS" starttime="20230708 15:09:51.530" endtime="20230708 15:09:53.623"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:53.624" endtime="20230708 15:09:54.152"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:54.173" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:54.153" endtime="20230708 15:09:54.173"/>
</kw>
<status status="PASS" starttime="20230708 15:09:54.153" endtime="20230708 15:09:54.173"/>
</kw>
<status status="PASS" starttime="20230708 15:09:53.624" endtime="20230708 15:09:54.174"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:54.174" endtime="20230708 15:09:54.423"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:54.444" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:54.424" endtime="20230708 15:09:54.445"/>
</kw>
<status status="PASS" starttime="20230708 15:09:54.423" endtime="20230708 15:09:54.445"/>
</kw>
<status status="PASS" starttime="20230708 15:09:54.174" endtime="20230708 15:09:54.445"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:54.446" endtime="20230708 15:09:54.905"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:55.072" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:54.906" endtime="20230708 15:09:55.073"/>
</kw>
<status status="PASS" starttime="20230708 15:09:54.906" endtime="20230708 15:09:55.073"/>
</kw>
<status status="PASS" starttime="20230708 15:09:54.446" endtime="20230708 15:09:55.073"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:09:55.074" endtime="20230708 15:09:55.245"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:09:55.381" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:09:55.246" endtime="20230708 15:09:55.381"/>
</kw>
<status status="PASS" starttime="20230708 15:09:55.245" endtime="20230708 15:09:55.382"/>
</kw>
<status status="PASS" starttime="20230708 15:09:55.073" endtime="20230708 15:09:55.382"/>
</kw>
<status status="PASS" starttime="20230708 15:09:51.530" endtime="20230708 15:09:55.382"/>
</kw>
<kw name="Fill in Contact Information 1">
<msg timestamp="20230708 15:09:55.390" level="FAIL">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</msg>
<status status="FAIL" starttime="20230708 15:09:55.390" endtime="20230708 15:09:55.390"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.390" endtime="20230708 15:09:55.390"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.391" endtime="20230708 15:09:55.391"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.391" endtime="20230708 15:09:55.391"/>
</kw>
<kw name="Booker is main guest and completes check-in process" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.391" endtime="20230708 15:09:55.391"/>
</kw>
<kw name="Click the first guest invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.391" endtime="20230708 15:09:55.391"/>
</kw>
<kw name="Verify Invite guest popup UI when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.391" endtime="20230708 15:09:55.392"/>
</kw>
<kw name="Fill in guest information when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.392" endtime="20230708 15:09:55.392"/>
</kw>
<kw name="Verify Invite guest UI after invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:09:55.392" endtime="20230708 15:09:55.392"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:09:56.056" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:09:55.393" endtime="20230708 15:09:56.056"/>
</kw>
<status status="FAIL" starttime="20230708 15:09:18.565" endtime="20230708 15:09:56.056">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</status>
</test>
<test id="s1-s1-s1-s1-s4-t2" name="Univite pop-up UI validation" line="30">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:09:56.064" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/e1dbdd93-a26c-4072-9cbd-122899f51b05"}</msg>
<msg timestamp="20230708 15:09:56.770" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/e1dbdd93-a26c-4072-9cbd-122899f51b05"}</msg>
<status status="PASS" starttime="20230708 15:09:56.063" endtime="20230708 15:09:56.770"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:09:56.770" endtime="20230708 15:09:56.771"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:09:56.772" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:09:56.860" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:09:56.860" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:09:56.771" endtime="20230708 15:09:56.861"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:09:59.528" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:09:56.861" endtime="20230708 15:09:59.528"/>
</kw>
<status status="PASS" starttime="20230708 15:09:56.062" endtime="20230708 15:09:59.529"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:09:59.529" endtime="20230708 15:10:00.578"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:10:00.583" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:10:00.580" endtime="20230708 15:10:00.583"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:10:00.635" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:10:00.635" level="INFO">${els} = ['element=a2816813-6b5e-43d3-8ea8-72a634b3ed44']</msg>
<status status="PASS" starttime="20230708 15:10:00.584" endtime="20230708 15:10:00.636"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:10:00.636" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:10:00.636" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:10:00.636" endtime="20230708 15:10:00.636"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:10:00.637" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:10:00.637" endtime="20230708 15:10:00.637"/>
</kw>
<status status="PASS" starttime="20230708 15:10:00.637" endtime="20230708 15:10:00.637"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:10:00.638" endtime="20230708 15:10:00.638"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:00.638" endtime="20230708 15:10:00.638"/>
</branch>
<status status="PASS" starttime="20230708 15:10:00.637" endtime="20230708 15:10:00.638"/>
</if>
<status status="PASS" starttime="20230708 15:10:00.583" endtime="20230708 15:10:00.638"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:10:00.639" endtime="20230708 15:10:00.639"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:00.638" endtime="20230708 15:10:00.639"/>
</branch>
<status status="PASS" starttime="20230708 15:10:00.583" endtime="20230708 15:10:00.639"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:10:00.643" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:10:00.639" endtime="20230708 15:10:00.643"/>
</kw>
<msg timestamp="20230708 15:10:00.644" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:10:00.579" endtime="20230708 15:10:00.644"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:00.644" endtime="20230708 15:10:00.742"/>
</kw>
<status status="PASS" starttime="20230708 15:10:00.644" endtime="20230708 15:10:00.742"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:10:00.742" endtime="20230708 15:10:00.743"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:00.742" endtime="20230708 15:10:00.743"/>
</branch>
<status status="PASS" starttime="20230708 15:10:00.644" endtime="20230708 15:10:00.743"/>
</if>
<status status="PASS" starttime="20230708 15:10:00.579" endtime="20230708 15:10:00.743"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:10:00.747" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:10:00.744" endtime="20230708 15:10:00.747"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:10:00.748" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:10:00.748" endtime="20230708 15:10:00.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:10:00.748" endtime="20230708 15:10:00.749"/>
</kw>
<status status="PASS" starttime="20230708 15:10:00.743" endtime="20230708 15:10:00.749"/>
</kw>
<status status="PASS" starttime="20230708 15:09:56.062" endtime="20230708 15:10:00.749"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:10:00.751" endtime="20230708 15:10:00.751"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:00.751" endtime="20230708 15:10:00.751"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:10:00.752" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:10:00.752" endtime="20230708 15:10:00.752"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:00.752" endtime="20230708 15:10:00.863"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:00.873" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:00.864" endtime="20230708 15:10:00.874"/>
</kw>
<status status="PASS" starttime="20230708 15:10:00.864" endtime="20230708 15:10:00.874"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:00.874" endtime="20230708 15:10:01.116"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:01.151" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:10:01.117" endtime="20230708 15:10:01.152"/>
</kw>
<status status="PASS" starttime="20230708 15:10:00.752" endtime="20230708 15:10:01.152"/>
</branch>
<status status="PASS" starttime="20230708 15:10:00.750" endtime="20230708 15:10:01.152"/>
</if>
<status status="PASS" starttime="20230708 15:10:00.749" endtime="20230708 15:10:01.152"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:10:01.154" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:10:01.153" endtime="20230708 15:10:01.154"/>
</kw>
<status status="PASS" starttime="20230708 15:10:01.153" endtime="20230708 15:10:01.155"/>
</kw>
<kw name="Select 1 Room 2 Adult and 1 Children" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, 'guests')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:01.156" endtime="20230708 15:10:01.393"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'adults')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:01.394" endtime="20230708 15:10:01.562"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'children')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:01.562" endtime="20230708 15:10:01.771"/>
</kw>
<status status="PASS" starttime="20230708 15:10:01.155" endtime="20230708 15:10:01.771"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:01.772" endtime="20230708 15:10:02.626"/>
</kw>
<status status="PASS" starttime="20230708 15:10:01.771" endtime="20230708 15:10:02.626"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:05.999" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:02.629" endtime="20230708 15:10:06.000"/>
</kw>
<status status="PASS" starttime="20230708 15:10:02.627" endtime="20230708 15:10:06.000"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:10:06.253" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:10:06.000" endtime="20230708 15:10:06.253"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:10:06.253" endtime="20230708 15:10:06.254"/>
</kw>
<status status="PASS" starttime="20230708 15:10:02.626" endtime="20230708 15:10:06.254"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:06.256" endtime="20230708 15:10:20.589"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:22.494" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:20.590" endtime="20230708 15:10:22.494"/>
</kw>
<status status="PASS" starttime="20230708 15:10:20.590" endtime="20230708 15:10:22.495"/>
</kw>
<status status="PASS" starttime="20230708 15:10:06.254" endtime="20230708 15:10:22.495"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:10:22.506" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:10:22.507" level="INFO">${elements} = ['element=b78a2dc3-4189-48da-8cf2-8e8153dba3b2']</msg>
<status status="PASS" starttime="20230708 15:10:22.496" endtime="20230708 15:10:22.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:10:22.508" level="INFO">${first_element} = element=b78a2dc3-4189-48da-8cf2-8e8153dba3b2</msg>
<status status="PASS" starttime="20230708 15:10:22.507" endtime="20230708 15:10:22.508"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:22.508" endtime="20230708 15:10:29.125"/>
</kw>
<status status="PASS" starttime="20230708 15:10:22.496" endtime="20230708 15:10:29.125"/>
</kw>
<status status="PASS" starttime="20230708 15:10:22.495" endtime="20230708 15:10:29.125"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:29.127" endtime="20230708 15:10:31.285"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:31.307" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:31.286" endtime="20230708 15:10:31.307"/>
</kw>
<status status="PASS" starttime="20230708 15:10:31.286" endtime="20230708 15:10:31.308"/>
</kw>
<status status="PASS" starttime="20230708 15:10:29.126" endtime="20230708 15:10:31.308"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:31.309" endtime="20230708 15:10:31.556"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:31.575" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:31.557" endtime="20230708 15:10:31.575"/>
</kw>
<status status="PASS" starttime="20230708 15:10:31.556" endtime="20230708 15:10:31.575"/>
</kw>
<status status="PASS" starttime="20230708 15:10:31.308" endtime="20230708 15:10:31.576"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:31.576" endtime="20230708 15:10:32.124"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:32.206" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:32.126" endtime="20230708 15:10:32.206"/>
</kw>
<status status="PASS" starttime="20230708 15:10:32.125" endtime="20230708 15:10:32.207"/>
</kw>
<status status="PASS" starttime="20230708 15:10:31.576" endtime="20230708 15:10:32.207"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:32.208" endtime="20230708 15:10:32.492"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:32.511" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:32.493" endtime="20230708 15:10:32.511"/>
</kw>
<status status="PASS" starttime="20230708 15:10:32.493" endtime="20230708 15:10:32.515"/>
</kw>
<status status="PASS" starttime="20230708 15:10:32.207" endtime="20230708 15:10:32.516"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:32.517" endtime="20230708 15:10:32.770"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:32.904" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:32.771" endtime="20230708 15:10:32.904"/>
</kw>
<status status="PASS" starttime="20230708 15:10:32.771" endtime="20230708 15:10:32.905"/>
</kw>
<status status="PASS" starttime="20230708 15:10:32.516" endtime="20230708 15:10:32.905"/>
</kw>
<status status="PASS" starttime="20230708 15:10:29.126" endtime="20230708 15:10:32.905"/>
</kw>
<kw name="Fill in Contact Information 1">
<msg timestamp="20230708 15:10:32.913" level="FAIL">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</msg>
<status status="FAIL" starttime="20230708 15:10:32.913" endtime="20230708 15:10:32.913"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.913" endtime="20230708 15:10:32.914"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.914" endtime="20230708 15:10:32.914"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.914" endtime="20230708 15:10:32.915"/>
</kw>
<kw name="Booker is main guest and completes check-in process" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.915" endtime="20230708 15:10:32.915"/>
</kw>
<kw name="Click the first guest invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.915" endtime="20230708 15:10:32.916"/>
</kw>
<kw name="Verify Invite guest popup UI when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.916" endtime="20230708 15:10:32.916"/>
</kw>
<kw name="Fill in guest information when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.916" endtime="20230708 15:10:32.916"/>
</kw>
<kw name="Uninvite guest" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.916" endtime="20230708 15:10:32.917"/>
</kw>
<kw name="Verify Uninvite warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:10:32.917" endtime="20230708 15:10:32.917"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:10:33.614" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:10:32.917" endtime="20230708 15:10:33.614"/>
</kw>
<status status="FAIL" starttime="20230708 15:09:56.061" endtime="20230708 15:10:33.615">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</status>
</test>
<test id="s1-s1-s1-s1-s4-t3" name="UI authentication Formerly guest info when invited child" line="50">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:10:33.621" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/cc3ae8ac-6050-4f9d-b3ad-172cbe2528ef"}</msg>
<msg timestamp="20230708 15:10:34.282" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/cc3ae8ac-6050-4f9d-b3ad-172cbe2528ef"}</msg>
<status status="PASS" starttime="20230708 15:10:33.620" endtime="20230708 15:10:34.283"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:10:34.283" endtime="20230708 15:10:34.284"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:10:34.284" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:10:34.336" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:10:34.336" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:10:34.284" endtime="20230708 15:10:34.336"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:10:37.016" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:10:34.337" endtime="20230708 15:10:37.016"/>
</kw>
<status status="PASS" starttime="20230708 15:10:33.619" endtime="20230708 15:10:37.017"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:10:37.017" endtime="20230708 15:10:39.267"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:10:39.273" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:10:39.269" endtime="20230708 15:10:39.274"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:10:39.324" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:10:39.324" level="INFO">${els} = ['element=9c0e7c07-2ace-49d7-9d30-50fce870c4b5']</msg>
<status status="PASS" starttime="20230708 15:10:39.274" endtime="20230708 15:10:39.324"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:10:39.325" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:10:39.325" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:10:39.325" endtime="20230708 15:10:39.325"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:10:39.326" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:10:39.326" endtime="20230708 15:10:39.326"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.326" endtime="20230708 15:10:39.326"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:10:39.327" endtime="20230708 15:10:39.327"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:39.326" endtime="20230708 15:10:39.327"/>
</branch>
<status status="PASS" starttime="20230708 15:10:39.325" endtime="20230708 15:10:39.327"/>
</if>
<status status="PASS" starttime="20230708 15:10:39.274" endtime="20230708 15:10:39.327"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:10:39.328" endtime="20230708 15:10:39.328"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:39.327" endtime="20230708 15:10:39.328"/>
</branch>
<status status="PASS" starttime="20230708 15:10:39.274" endtime="20230708 15:10:39.328"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:10:39.331" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:10:39.328" endtime="20230708 15:10:39.331"/>
</kw>
<msg timestamp="20230708 15:10:39.332" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:10:39.268" endtime="20230708 15:10:39.332"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:39.332" endtime="20230708 15:10:39.422"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.332" endtime="20230708 15:10:39.423"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:10:39.423" endtime="20230708 15:10:39.424"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:39.423" endtime="20230708 15:10:39.424"/>
</branch>
<status status="PASS" starttime="20230708 15:10:39.332" endtime="20230708 15:10:39.424"/>
</if>
<status status="PASS" starttime="20230708 15:10:39.267" endtime="20230708 15:10:39.424"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:10:39.427" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:10:39.425" endtime="20230708 15:10:39.427"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:10:39.429" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:10:39.428" endtime="20230708 15:10:39.429"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:10:39.429" endtime="20230708 15:10:39.429"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.424" endtime="20230708 15:10:39.430"/>
</kw>
<status status="PASS" starttime="20230708 15:10:33.619" endtime="20230708 15:10:39.430"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:10:39.431" endtime="20230708 15:10:39.431"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:10:39.431" endtime="20230708 15:10:39.431"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:10:39.432" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:10:39.432" endtime="20230708 15:10:39.432"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:39.432" endtime="20230708 15:10:39.532"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:39.541" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:39.533" endtime="20230708 15:10:39.542"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.532" endtime="20230708 15:10:39.542"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:39.542" endtime="20230708 15:10:39.820"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:39.888" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:10:39.821" endtime="20230708 15:10:39.888"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.431" endtime="20230708 15:10:39.888"/>
</branch>
<status status="PASS" starttime="20230708 15:10:39.431" endtime="20230708 15:10:39.888"/>
</if>
<status status="PASS" starttime="20230708 15:10:39.430" endtime="20230708 15:10:39.889"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:10:39.890" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:10:39.890" endtime="20230708 15:10:39.890"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.889" endtime="20230708 15:10:39.890"/>
</kw>
<kw name="Select 1 Room 2 Adult and 1 Children" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, 'guests')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:39.891" endtime="20230708 15:10:40.084"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'adults')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:40.085" endtime="20230708 15:10:40.374"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'children')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:40.374" endtime="20230708 15:10:40.638"/>
</kw>
<status status="PASS" starttime="20230708 15:10:39.890" endtime="20230708 15:10:40.639"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:40.640" endtime="20230708 15:10:41.239"/>
</kw>
<status status="PASS" starttime="20230708 15:10:40.639" endtime="20230708 15:10:41.239"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:44.600" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:41.241" endtime="20230708 15:10:44.601"/>
</kw>
<status status="PASS" starttime="20230708 15:10:41.240" endtime="20230708 15:10:44.601"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:10:44.858" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:10:44.601" endtime="20230708 15:10:44.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:10:44.859" endtime="20230708 15:10:44.859"/>
</kw>
<status status="PASS" starttime="20230708 15:10:41.240" endtime="20230708 15:10:44.860"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:44.860" endtime="20230708 15:10:50.687"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:52.192" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:50.688" endtime="20230708 15:10:52.192"/>
</kw>
<status status="PASS" starttime="20230708 15:10:50.687" endtime="20230708 15:10:52.193"/>
</kw>
<status status="PASS" starttime="20230708 15:10:44.860" endtime="20230708 15:10:52.193"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:10:52.218" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:10:52.218" level="INFO">${elements} = ['element=2edef20f-c0e9-4cbd-84a7-092c88ccbc9e']</msg>
<status status="PASS" starttime="20230708 15:10:52.195" endtime="20230708 15:10:52.218"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:10:52.219" level="INFO">${first_element} = element=2edef20f-c0e9-4cbd-84a7-092c88ccbc9e</msg>
<status status="PASS" starttime="20230708 15:10:52.218" endtime="20230708 15:10:52.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:52.219" endtime="20230708 15:10:57.388"/>
</kw>
<status status="PASS" starttime="20230708 15:10:52.193" endtime="20230708 15:10:57.388"/>
</kw>
<status status="PASS" starttime="20230708 15:10:52.193" endtime="20230708 15:10:57.388"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:57.389" endtime="20230708 15:10:59.551"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:59.572" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:59.552" endtime="20230708 15:10:59.572"/>
</kw>
<status status="PASS" starttime="20230708 15:10:59.551" endtime="20230708 15:10:59.573"/>
</kw>
<status status="PASS" starttime="20230708 15:10:57.389" endtime="20230708 15:10:59.573"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:59.574" endtime="20230708 15:10:59.828"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:10:59.852" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:10:59.829" endtime="20230708 15:10:59.852"/>
</kw>
<status status="PASS" starttime="20230708 15:10:59.829" endtime="20230708 15:10:59.853"/>
</kw>
<status status="PASS" starttime="20230708 15:10:59.573" endtime="20230708 15:10:59.853"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:10:59.854" endtime="20230708 15:11:00.521"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:00.609" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:00.522" endtime="20230708 15:11:00.609"/>
</kw>
<status status="PASS" starttime="20230708 15:11:00.522" endtime="20230708 15:11:00.610"/>
</kw>
<status status="PASS" starttime="20230708 15:10:59.853" endtime="20230708 15:11:00.610"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:00.611" endtime="20230708 15:11:00.828"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:00.850" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:00.829" endtime="20230708 15:11:00.850"/>
</kw>
<status status="PASS" starttime="20230708 15:11:00.829" endtime="20230708 15:11:00.851"/>
</kw>
<status status="PASS" starttime="20230708 15:11:00.610" endtime="20230708 15:11:00.851"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:00.852" endtime="20230708 15:11:01.100"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:01.204" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:01.101" endtime="20230708 15:11:01.204"/>
</kw>
<status status="PASS" starttime="20230708 15:11:01.101" endtime="20230708 15:11:01.204"/>
</kw>
<status status="PASS" starttime="20230708 15:11:00.851" endtime="20230708 15:11:01.205"/>
</kw>
<status status="PASS" starttime="20230708 15:10:57.389" endtime="20230708 15:11:01.205"/>
</kw>
<kw name="Fill in Contact Information 1">
<msg timestamp="20230708 15:11:01.214" level="FAIL">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</msg>
<status status="FAIL" starttime="20230708 15:11:01.214" endtime="20230708 15:11:01.214"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.215" endtime="20230708 15:11:01.215"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.215" endtime="20230708 15:11:01.215"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.215" endtime="20230708 15:11:01.215"/>
</kw>
<kw name="Booker is main guest and completes check-in process" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.216" endtime="20230708 15:11:01.216"/>
</kw>
<kw name="Click the secondary guest invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.216" endtime="20230708 15:11:01.216"/>
</kw>
<kw name="Verify Add guest popup UI when guest is children" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.216" endtime="20230708 15:11:01.216"/>
</kw>
<kw name="Fill in guest information when guest is children" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.216" endtime="20230708 15:11:01.216"/>
</kw>
<kw name="Verify Add guest UI after save children information" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:01.216" endtime="20230708 15:11:01.217"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:11:01.904" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:11:01.217" endtime="20230708 15:11:01.904"/>
</kw>
<status status="FAIL" starttime="20230708 15:10:33.618" endtime="20230708 15:11:01.904">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</status>
</test>
<test id="s1-s1-s1-s1-s4-t4" name="UI validation when remove guest" line="69">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:11:01.911" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/103f5562-589b-4b6a-b0f9-ee578b7224b9"}</msg>
<msg timestamp="20230708 15:11:02.589" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/103f5562-589b-4b6a-b0f9-ee578b7224b9"}</msg>
<status status="PASS" starttime="20230708 15:11:01.910" endtime="20230708 15:11:02.589"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:11:02.590" endtime="20230708 15:11:02.590"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:11:02.591" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:11:02.674" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:11:02.674" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:11:02.591" endtime="20230708 15:11:02.675"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:11:05.347" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:11:02.675" endtime="20230708 15:11:05.347"/>
</kw>
<status status="PASS" starttime="20230708 15:11:01.910" endtime="20230708 15:11:05.348"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:11:05.348" endtime="20230708 15:11:06.470"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:11:06.474" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:11:06.471" endtime="20230708 15:11:06.474"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:11:06.526" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:11:06.527" level="INFO">${els} = ['element=0d6aca44-7bad-462e-bf85-6a2f24c80cbc']</msg>
<status status="PASS" starttime="20230708 15:11:06.474" endtime="20230708 15:11:06.527"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:11:06.527" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:11:06.528" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:11:06.527" endtime="20230708 15:11:06.528"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:11:06.528" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:11:06.528" endtime="20230708 15:11:06.528"/>
</kw>
<status status="PASS" starttime="20230708 15:11:06.528" endtime="20230708 15:11:06.529"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:11:06.529" endtime="20230708 15:11:06.529"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:06.529" endtime="20230708 15:11:06.529"/>
</branch>
<status status="PASS" starttime="20230708 15:11:06.528" endtime="20230708 15:11:06.529"/>
</if>
<status status="PASS" starttime="20230708 15:11:06.474" endtime="20230708 15:11:06.529"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:11:06.530" endtime="20230708 15:11:06.530"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:06.529" endtime="20230708 15:11:06.530"/>
</branch>
<status status="PASS" starttime="20230708 15:11:06.474" endtime="20230708 15:11:06.530"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:11:06.533" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:11:06.530" endtime="20230708 15:11:06.533"/>
</kw>
<msg timestamp="20230708 15:11:06.533" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:11:06.471" endtime="20230708 15:11:06.533"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:06.534" endtime="20230708 15:11:06.618"/>
</kw>
<status status="PASS" starttime="20230708 15:11:06.534" endtime="20230708 15:11:06.618"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:11:06.618" endtime="20230708 15:11:06.618"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:06.618" endtime="20230708 15:11:06.618"/>
</branch>
<status status="PASS" starttime="20230708 15:11:06.534" endtime="20230708 15:11:06.619"/>
</if>
<status status="PASS" starttime="20230708 15:11:06.470" endtime="20230708 15:11:06.619"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:11:06.623" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:11:06.621" endtime="20230708 15:11:06.623"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:11:06.624" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:11:06.623" endtime="20230708 15:11:06.624"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:11:06.624" endtime="20230708 15:11:06.624"/>
</kw>
<status status="PASS" starttime="20230708 15:11:06.619" endtime="20230708 15:11:06.624"/>
</kw>
<status status="PASS" starttime="20230708 15:11:01.909" endtime="20230708 15:11:06.625"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:11:06.627" endtime="20230708 15:11:06.627"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:06.627" endtime="20230708 15:11:06.627"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:11:06.628" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:11:06.627" endtime="20230708 15:11:06.628"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:06.628" endtime="20230708 15:11:06.742"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:06.753" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:06.743" endtime="20230708 15:11:06.753"/>
</kw>
<status status="PASS" starttime="20230708 15:11:06.742" endtime="20230708 15:11:06.754"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:06.754" endtime="20230708 15:11:07.029"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:07.092" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:11:07.030" endtime="20230708 15:11:07.093"/>
</kw>
<status status="PASS" starttime="20230708 15:11:06.627" endtime="20230708 15:11:07.093"/>
</branch>
<status status="PASS" starttime="20230708 15:11:06.626" endtime="20230708 15:11:07.093"/>
</if>
<status status="PASS" starttime="20230708 15:11:06.625" endtime="20230708 15:11:07.093"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:11:07.094" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:11:07.094" endtime="20230708 15:11:07.094"/>
</kw>
<status status="PASS" starttime="20230708 15:11:07.094" endtime="20230708 15:11:07.096"/>
</kw>
<kw name="Select 1 Room 2 Adult and 1 Children" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, 'guests')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:07.097" endtime="20230708 15:11:07.303"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'adults')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:07.304" endtime="20230708 15:11:07.813"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'children')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:07.813" endtime="20230708 15:11:08.034"/>
</kw>
<status status="PASS" starttime="20230708 15:11:07.096" endtime="20230708 15:11:08.034"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:08.035" endtime="20230708 15:11:08.627"/>
</kw>
<status status="PASS" starttime="20230708 15:11:08.034" endtime="20230708 15:11:08.628"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:11.987" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:08.629" endtime="20230708 15:11:11.989"/>
</kw>
<status status="PASS" starttime="20230708 15:11:08.628" endtime="20230708 15:11:11.989"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:11:12.246" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:11:11.989" endtime="20230708 15:11:12.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:11:12.246" endtime="20230708 15:11:12.247"/>
</kw>
<status status="PASS" starttime="20230708 15:11:08.628" endtime="20230708 15:11:12.247"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:12.248" endtime="20230708 15:11:26.630"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:28.117" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:26.631" endtime="20230708 15:11:28.117"/>
</kw>
<status status="PASS" starttime="20230708 15:11:26.630" endtime="20230708 15:11:28.118"/>
</kw>
<status status="PASS" starttime="20230708 15:11:12.247" endtime="20230708 15:11:28.118"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:11:28.137" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:11:28.138" level="INFO">${elements} = ['element=6c7e3b68-57b3-4633-99f9-44d355e2c373']</msg>
<status status="PASS" starttime="20230708 15:11:28.119" endtime="20230708 15:11:28.138"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:11:28.139" level="INFO">${first_element} = element=6c7e3b68-57b3-4633-99f9-44d355e2c373</msg>
<status status="PASS" starttime="20230708 15:11:28.138" endtime="20230708 15:11:28.139"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:28.139" endtime="20230708 15:11:33.251"/>
</kw>
<status status="PASS" starttime="20230708 15:11:28.119" endtime="20230708 15:11:33.252"/>
</kw>
<status status="PASS" starttime="20230708 15:11:28.118" endtime="20230708 15:11:33.252"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:33.253" endtime="20230708 15:11:35.335"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:35.352" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:35.336" endtime="20230708 15:11:35.352"/>
</kw>
<status status="PASS" starttime="20230708 15:11:35.335" endtime="20230708 15:11:35.352"/>
</kw>
<status status="PASS" starttime="20230708 15:11:33.252" endtime="20230708 15:11:35.353"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:35.353" endtime="20230708 15:11:35.832"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:36.028" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:35.833" endtime="20230708 15:11:36.028"/>
</kw>
<status status="PASS" starttime="20230708 15:11:35.832" endtime="20230708 15:11:36.029"/>
</kw>
<status status="PASS" starttime="20230708 15:11:35.353" endtime="20230708 15:11:36.029"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:36.030" endtime="20230708 15:11:36.427"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:36.450" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:36.429" endtime="20230708 15:11:36.450"/>
</kw>
<status status="PASS" starttime="20230708 15:11:36.427" endtime="20230708 15:11:36.451"/>
</kw>
<status status="PASS" starttime="20230708 15:11:36.029" endtime="20230708 15:11:36.451"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:36.452" endtime="20230708 15:11:36.656"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:36.681" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:36.657" endtime="20230708 15:11:36.681"/>
</kw>
<status status="PASS" starttime="20230708 15:11:36.657" endtime="20230708 15:11:36.681"/>
</kw>
<status status="PASS" starttime="20230708 15:11:36.451" endtime="20230708 15:11:36.682"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:36.682" endtime="20230708 15:11:37.033"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:37.119" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:37.034" endtime="20230708 15:11:37.119"/>
</kw>
<status status="PASS" starttime="20230708 15:11:37.033" endtime="20230708 15:11:37.120"/>
</kw>
<status status="PASS" starttime="20230708 15:11:36.682" endtime="20230708 15:11:37.120"/>
</kw>
<status status="PASS" starttime="20230708 15:11:33.252" endtime="20230708 15:11:37.120"/>
</kw>
<kw name="Fill in Contact Information 1">
<msg timestamp="20230708 15:11:37.131" level="FAIL">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</msg>
<status status="FAIL" starttime="20230708 15:11:37.130" endtime="20230708 15:11:37.131"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.131" endtime="20230708 15:11:37.132"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.132" endtime="20230708 15:11:37.132"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.132" endtime="20230708 15:11:37.132"/>
</kw>
<kw name="Booker is main guest and completes check-in process" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.132" endtime="20230708 15:11:37.133"/>
</kw>
<kw name="Click the secondary guest invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.133" endtime="20230708 15:11:37.133"/>
</kw>
<kw name="Fill in guest information when guest is children" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.133" endtime="20230708 15:11:37.133"/>
</kw>
<kw name="Remove guest" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.133" endtime="20230708 15:11:37.133"/>
</kw>
<kw name="Verify Remove guest warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:11:37.134" endtime="20230708 15:11:37.134"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:11:37.846" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:11:37.134" endtime="20230708 15:11:37.847"/>
</kw>
<status status="FAIL" starttime="20230708 15:11:01.909" endtime="20230708 15:11:37.847">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</status>
</test>
<test id="s1-s1-s1-s1-s4-t5" name="UI validation when uninvite guest" line="88">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:11:37.854" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/520a9cbd-3e64-461f-a246-0873a3483c7d"}</msg>
<msg timestamp="20230708 15:11:38.547" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/520a9cbd-3e64-461f-a246-0873a3483c7d"}</msg>
<status status="PASS" starttime="20230708 15:11:37.853" endtime="20230708 15:11:38.547"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:11:38.547" endtime="20230708 15:11:38.548"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:11:38.549" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:11:38.630" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:11:38.631" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:11:38.548" endtime="20230708 15:11:38.631"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:11:41.736" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:11:38.631" endtime="20230708 15:11:41.736"/>
</kw>
<status status="PASS" starttime="20230708 15:11:37.852" endtime="20230708 15:11:41.736"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:11:41.737" endtime="20230708 15:11:42.967"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:11:42.971" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:11:42.968" endtime="20230708 15:11:42.971"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:11:43.026" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:11:43.027" level="INFO">${els} = ['element=cf27dc70-4b96-4632-af88-c6609e63f39c']</msg>
<status status="PASS" starttime="20230708 15:11:42.972" endtime="20230708 15:11:43.027"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:11:43.027" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:11:43.027" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:11:43.027" endtime="20230708 15:11:43.028"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:11:43.028" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:11:43.028" endtime="20230708 15:11:43.028"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.028" endtime="20230708 15:11:43.028"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:11:43.029" endtime="20230708 15:11:43.029"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:43.029" endtime="20230708 15:11:43.029"/>
</branch>
<status status="PASS" starttime="20230708 15:11:43.028" endtime="20230708 15:11:43.029"/>
</if>
<status status="PASS" starttime="20230708 15:11:42.972" endtime="20230708 15:11:43.029"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:11:43.030" endtime="20230708 15:11:43.030"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:43.029" endtime="20230708 15:11:43.030"/>
</branch>
<status status="PASS" starttime="20230708 15:11:42.972" endtime="20230708 15:11:43.030"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:11:43.033" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:11:43.030" endtime="20230708 15:11:43.033"/>
</kw>
<msg timestamp="20230708 15:11:43.034" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:11:42.968" endtime="20230708 15:11:43.034"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:43.034" endtime="20230708 15:11:43.125"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.034" endtime="20230708 15:11:43.125"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:11:43.126" endtime="20230708 15:11:43.126"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:43.126" endtime="20230708 15:11:43.126"/>
</branch>
<status status="PASS" starttime="20230708 15:11:43.034" endtime="20230708 15:11:43.126"/>
</if>
<status status="PASS" starttime="20230708 15:11:42.967" endtime="20230708 15:11:43.126"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:11:43.130" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:11:43.127" endtime="20230708 15:11:43.130"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:11:43.130" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:11:43.130" endtime="20230708 15:11:43.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:11:43.131" endtime="20230708 15:11:43.131"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.127" endtime="20230708 15:11:43.131"/>
</kw>
<status status="PASS" starttime="20230708 15:11:37.852" endtime="20230708 15:11:43.131"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:11:43.133" endtime="20230708 15:11:43.133"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:11:43.132" endtime="20230708 15:11:43.133"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:11:43.133" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230708 15:11:43.133" endtime="20230708 15:11:43.133"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:43.134" endtime="20230708 15:11:43.363"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:43.405" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:43.364" endtime="20230708 15:11:43.405"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.364" endtime="20230708 15:11:43.406"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:43.406" endtime="20230708 15:11:43.632"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:43.720" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:11:43.633" endtime="20230708 15:11:43.720"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.133" endtime="20230708 15:11:43.720"/>
</branch>
<status status="PASS" starttime="20230708 15:11:43.132" endtime="20230708 15:11:43.720"/>
</if>
<status status="PASS" starttime="20230708 15:11:43.132" endtime="20230708 15:11:43.720"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:11:43.721" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:11:43.721" endtime="20230708 15:11:43.723"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.721" endtime="20230708 15:11:43.723"/>
</kw>
<kw name="Select 1 Room 2 Adult and 1 Children" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, 'guests')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:43.724" endtime="20230708 15:11:43.935"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'adults')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:43.936" endtime="20230708 15:11:44.083"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[contains(@data-nelson-guests-add, 'children')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:44.083" endtime="20230708 15:11:44.306"/>
</kw>
<status status="PASS" starttime="20230708 15:11:43.723" endtime="20230708 15:11:44.306"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:44.307" endtime="20230708 15:11:45.102"/>
</kw>
<status status="PASS" starttime="20230708 15:11:44.306" endtime="20230708 15:11:45.103"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:11:48.566" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:11:45.104" endtime="20230708 15:11:48.566"/>
</kw>
<status status="PASS" starttime="20230708 15:11:45.103" endtime="20230708 15:11:48.567"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:11:48.830" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:11:48.567" endtime="20230708 15:11:48.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:11:48.830" endtime="20230708 15:11:48.831"/>
</kw>
<status status="PASS" starttime="20230708 15:11:45.103" endtime="20230708 15:11:48.831"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:11:48.832" endtime="20230708 15:12:03.013"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:04.324" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:03.014" endtime="20230708 15:12:04.324"/>
</kw>
<status status="PASS" starttime="20230708 15:12:03.013" endtime="20230708 15:12:04.325"/>
</kw>
<status status="PASS" starttime="20230708 15:11:48.831" endtime="20230708 15:12:04.325"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:12:04.349" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:12:04.350" level="INFO">${elements} = ['element=43df6d06-8663-4552-a972-61a867489afe']</msg>
<status status="PASS" starttime="20230708 15:12:04.326" endtime="20230708 15:12:04.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:12:04.351" level="INFO">${first_element} = element=43df6d06-8663-4552-a972-61a867489afe</msg>
<status status="PASS" starttime="20230708 15:12:04.350" endtime="20230708 15:12:04.351"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:04.351" endtime="20230708 15:12:09.450"/>
</kw>
<status status="PASS" starttime="20230708 15:12:04.326" endtime="20230708 15:12:09.451"/>
</kw>
<status status="PASS" starttime="20230708 15:12:04.325" endtime="20230708 15:12:09.451"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:09.452" endtime="20230708 15:12:11.597"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:11.616" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:11.598" endtime="20230708 15:12:11.616"/>
</kw>
<status status="PASS" starttime="20230708 15:12:11.598" endtime="20230708 15:12:11.616"/>
</kw>
<status status="PASS" starttime="20230708 15:12:09.452" endtime="20230708 15:12:11.616"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:11.617" endtime="20230708 15:12:12.077"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:12.261" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:12.078" endtime="20230708 15:12:12.262"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.077" endtime="20230708 15:12:12.262"/>
</kw>
<status status="PASS" starttime="20230708 15:12:11.617" endtime="20230708 15:12:12.262"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:12.263" endtime="20230708 15:12:12.677"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:12.694" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:12.679" endtime="20230708 15:12:12.694"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.678" endtime="20230708 15:12:12.695"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.263" endtime="20230708 15:12:12.695"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:12.695" endtime="20230708 15:12:12.902"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:12.940" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:12.903" endtime="20230708 15:12:12.940"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.903" endtime="20230708 15:12:12.941"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.695" endtime="20230708 15:12:12.941"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:12.943" endtime="20230708 15:12:13.287"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:13.361" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:13.288" endtime="20230708 15:12:13.361"/>
</kw>
<status status="PASS" starttime="20230708 15:12:13.287" endtime="20230708 15:12:13.361"/>
</kw>
<status status="PASS" starttime="20230708 15:12:12.941" endtime="20230708 15:12:13.362"/>
</kw>
<status status="PASS" starttime="20230708 15:12:09.451" endtime="20230708 15:12:13.362"/>
</kw>
<kw name="Fill in Contact Information 1">
<msg timestamp="20230708 15:12:13.370" level="FAIL">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</msg>
<status status="FAIL" starttime="20230708 15:12:13.369" endtime="20230708 15:12:13.370"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.370" endtime="20230708 15:12:13.370"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.370" endtime="20230708 15:12:13.370"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.371" endtime="20230708 15:12:13.371"/>
</kw>
<kw name="Booker is main guest and completes check-in process" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.371" endtime="20230708 15:12:13.371"/>
</kw>
<kw name="Click the first guest invite" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.371" endtime="20230708 15:12:13.371"/>
</kw>
<kw name="Verify Invite guest popup UI when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.371" endtime="20230708 15:12:13.372"/>
</kw>
<kw name="Fill in guest information when guest is adult" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.372" endtime="20230708 15:12:13.372"/>
</kw>
<kw name="Uninvite guest" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.372" endtime="20230708 15:12:13.372"/>
</kw>
<kw name="Verify Uninvite warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.373" endtime="20230708 15:12:13.373"/>
</kw>
<kw name="Click Univite button in Uninvite warning popup" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.373" endtime="20230708 15:12:13.373"/>
</kw>
<kw name="The user is uninvited from the reservation" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:13.373" endtime="20230708 15:12:13.373"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:12:14.093" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:12:13.374" endtime="20230708 15:12:14.093"/>
</kw>
<status status="FAIL" starttime="20230708 15:11:37.851" endtime="20230708 15:12:14.093">No keyword with name 'Fill in Contact Information 1' found. Did you mean:
    booking.Fill In Contact Information</status>
</test>
<status status="FAIL" starttime="20230708 15:09:18.545" endtime="20230708 15:12:14.096"/>
</suite>
<status status="FAIL" starttime="20230708 15:01:52.548" endtime="20230708 15:12:14.103"/>
</suite>
<status status="FAIL" starttime="20230708 15:01:52.546" endtime="20230708 15:12:14.106"/>
</suite>
<suite id="s1-s1-s2" name="Regression" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/regression">
<suite id="s1-s1-s2-s1" name="Modify Booking" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/regression/modify_booking.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:12:14.663" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/8ebe7424-4433-4559-bfbf-ed202a5c63cb"}</msg>
<msg timestamp="20230708 15:12:15.361" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/8ebe7424-4433-4559-bfbf-ed202a5c63cb"}</msg>
<status status="PASS" starttime="20230708 15:12:14.662" endtime="20230708 15:12:15.361"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:15.365" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:12:15.362" endtime="20230708 15:12:15.365"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:12:15.366" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:12:15.462" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:12:15.463" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:12:15.366" endtime="20230708 15:12:15.463"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:12:18.119" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:12:15.463" endtime="20230708 15:12:18.120"/>
</kw>
<status status="PASS" starttime="20230708 15:12:14.662" endtime="20230708 15:12:18.120"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:12:18.121" endtime="20230708 15:12:19.400"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:19.405" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:12:19.401" endtime="20230708 15:12:19.405"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:12:19.466" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:12:19.467" level="INFO">${els} = ['element=7f0031a3-1aaa-4343-ae85-9ea2d3236f10']</msg>
<status status="PASS" starttime="20230708 15:12:19.406" endtime="20230708 15:12:19.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:12:19.467" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:12:19.467" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:12:19.467" endtime="20230708 15:12:19.467"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:12:19.468" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:12:19.468" endtime="20230708 15:12:19.468"/>
</kw>
<status status="PASS" starttime="20230708 15:12:19.468" endtime="20230708 15:12:19.468"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.469" endtime="20230708 15:12:19.469"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:19.469" endtime="20230708 15:12:19.469"/>
</branch>
<status status="PASS" starttime="20230708 15:12:19.468" endtime="20230708 15:12:19.469"/>
</if>
<status status="PASS" starttime="20230708 15:12:19.406" endtime="20230708 15:12:19.469"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.469" endtime="20230708 15:12:19.469"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:19.469" endtime="20230708 15:12:19.470"/>
</branch>
<status status="PASS" starttime="20230708 15:12:19.406" endtime="20230708 15:12:19.470"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:19.474" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:12:19.470" endtime="20230708 15:12:19.474"/>
</kw>
<msg timestamp="20230708 15:12:19.474" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:12:19.400" endtime="20230708 15:12:19.474"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:19.475" endtime="20230708 15:12:19.575"/>
</kw>
<status status="PASS" starttime="20230708 15:12:19.475" endtime="20230708 15:12:19.575"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.576" endtime="20230708 15:12:19.576"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:19.576" endtime="20230708 15:12:19.576"/>
</branch>
<status status="PASS" starttime="20230708 15:12:19.474" endtime="20230708 15:12:19.576"/>
</if>
<status status="PASS" starttime="20230708 15:12:19.400" endtime="20230708 15:12:19.576"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:12:19.584" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:12:19.577" endtime="20230708 15:12:19.584"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:12:19.585" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:12:19.584" endtime="20230708 15:12:19.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:12:19.585" endtime="20230708 15:12:19.586"/>
</kw>
<status status="PASS" starttime="20230708 15:12:19.577" endtime="20230708 15:12:19.587"/>
</kw>
<status status="PASS" starttime="20230708 15:12:14.661" endtime="20230708 15:12:19.587"/>
</kw>
<test id="s1-s1-s2-s1-t1" name="A new booker opens the edit guest page and changes the main guest to someone else" line="12">
<kw name="Pass Execution" library="BuiltIn">
<arg>TBD</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230708 15:12:19.593" level="INFO">Execution passed with message:
TBD</msg>
<status status="PASS" starttime="20230708 15:12:19.593" endtime="20230708 15:12:19.594"/>
</kw>
<kw name="A new booker makes a reservation" library="booking">
<doc>A new booker makes a reservation</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.594" endtime="20230708 15:12:19.594"/>
</kw>
<kw name="Successfully completes a payment" library="booking">
<doc>The payment is successfully completed</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.594" endtime="20230708 15:12:19.594"/>
</kw>
<kw name="Booker clicks on main guest name" library="booking">
<doc>Booker clicks on main guest name</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.594" endtime="20230708 15:12:19.594"/>
</kw>
<kw name="Edit guest page is opened" library="booking">
<doc>Verifeies guest page is opened</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.595" endtime="20230708 15:12:19.595"/>
</kw>
<kw name="Save and Sign button is visible" library="booking">
<doc>Verifies the save and sign button is visible</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.595" endtime="20230708 15:12:19.595"/>
</kw>
<kw name="Toggle Someone Else Checkbox" library="booking">
<doc>Toggles the "Someone else will be the main guest" checkbox</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.595" endtime="20230708 15:12:19.595"/>
</kw>
<kw name="Save and Sign button is visible" library="booking">
<doc>Verifies the save and sign button is visible</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.596" endtime="20230708 15:12:19.596"/>
</kw>
<kw name="Fill in Other Guest Details" library="booking">
<doc>Fills in other guest details, which can be given as arguments or uses default values</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.596" endtime="20230708 15:12:19.596"/>
</kw>
<kw name="Click Save and Sign" library="booking">
<doc>Clicks the save and sign button</doc>
<status status="NOT RUN" starttime="20230708 15:12:19.596" endtime="20230708 15:12:19.596"/>
</kw>
<tag>skip</tag>
<status status="PASS" starttime="20230708 15:12:19.587" endtime="20230708 15:12:19.596">TBD</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="PASS" starttime="20230708 15:12:14.111" endtime="20230708 15:12:19.605"/>
</suite>
<suite id="s1-s1-s2-s2" name="New Booking" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/regression/new_booking.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:12:19.697" level="INFO">Switching browser to browser=610609fe-b2c7-4eaf-87d5-e0597a424393</msg>
<msg timestamp="20230708 15:12:19.700" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230708 15:12:19.700" level="INFO">Reusing existing browser with id: browser=610609fe-b2c7-4eaf-87d5-e0597a424393</msg>
<status status="PASS" starttime="20230708 15:12:19.697" endtime="20230708 15:12:19.700"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:19.702" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:12:19.700" endtime="20230708 15:12:19.702"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:12:19.703" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:12:19.720" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:12:19.720" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:12:19.703" endtime="20230708 15:12:19.720"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:12:21.807" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230708 15:12:19.721" endtime="20230708 15:12:21.807"/>
</kw>
<status status="PASS" starttime="20230708 15:12:19.696" endtime="20230708 15:12:21.807"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:12:21.808" endtime="20230708 15:12:22.910"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:22.916" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230708 15:12:22.912" endtime="20230708 15:12:22.916"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230708 15:12:22.971" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230708 15:12:22.972" level="INFO">${els} = ['element=8120677b-c405-4868-8a22-94131742ed64']</msg>
<status status="PASS" starttime="20230708 15:12:22.916" endtime="20230708 15:12:22.972"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230708 15:12:22.972" level="INFO">Length is 1</msg>
<msg timestamp="20230708 15:12:22.973" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230708 15:12:22.972" endtime="20230708 15:12:22.973"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230708 15:12:22.973" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230708 15:12:22.973" endtime="20230708 15:12:22.973"/>
</kw>
<status status="PASS" starttime="20230708 15:12:22.973" endtime="20230708 15:12:22.974"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:12:22.974" endtime="20230708 15:12:22.974"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:22.974" endtime="20230708 15:12:22.974"/>
</branch>
<status status="PASS" starttime="20230708 15:12:22.973" endtime="20230708 15:12:22.974"/>
</if>
<status status="PASS" starttime="20230708 15:12:22.916" endtime="20230708 15:12:22.974"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230708 15:12:22.975" endtime="20230708 15:12:22.975"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:22.974" endtime="20230708 15:12:22.975"/>
</branch>
<status status="PASS" starttime="20230708 15:12:22.916" endtime="20230708 15:12:22.975"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:22.978" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230708 15:12:22.975" endtime="20230708 15:12:22.978"/>
</kw>
<msg timestamp="20230708 15:12:22.979" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230708 15:12:22.911" endtime="20230708 15:12:22.979"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:22.979" endtime="20230708 15:12:23.085"/>
</kw>
<status status="PASS" starttime="20230708 15:12:22.979" endtime="20230708 15:12:23.085"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:12:23.085" endtime="20230708 15:12:23.085"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:23.085" endtime="20230708 15:12:23.086"/>
</branch>
<status status="PASS" starttime="20230708 15:12:22.979" endtime="20230708 15:12:23.086"/>
</if>
<status status="PASS" starttime="20230708 15:12:22.910" endtime="20230708 15:12:23.086"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230708 15:12:23.092" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230708 15:12:23.087" endtime="20230708 15:12:23.092"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230708 15:12:23.093" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230708 15:12:23.092" endtime="20230708 15:12:23.093"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230708 15:12:23.093" endtime="20230708 15:12:23.093"/>
</kw>
<status status="PASS" starttime="20230708 15:12:23.086" endtime="20230708 15:12:23.093"/>
</kw>
<status status="PASS" starttime="20230708 15:12:19.696" endtime="20230708 15:12:23.094"/>
</kw>
<test id="s1-s1-s2-s2-t1" name="Create A New Booking" line="12">
<kw name="Select Hotel" library="booking">
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:12:23.101" endtime="20230708 15:12:23.101"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:23.101" endtime="20230708 15:12:23.101"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:12:23.102" level="INFO">Selecting Hotel: Lönnrotin</msg>
<status status="PASS" starttime="20230708 15:12:23.102" endtime="20230708 15:12:23.102"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:23.102" endtime="20230708 15:12:23.215"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:23.226" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:23.216" endtime="20230708 15:12:23.226"/>
</kw>
<status status="PASS" starttime="20230708 15:12:23.216" endtime="20230708 15:12:23.227"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:23.227" endtime="20230708 15:12:24.512"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:24.546" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state hidden</msg>
<status status="PASS" starttime="20230708 15:12:24.513" endtime="20230708 15:12:24.546"/>
</kw>
<status status="PASS" starttime="20230708 15:12:23.101" endtime="20230708 15:12:24.546"/>
</branch>
<status status="PASS" starttime="20230708 15:12:23.101" endtime="20230708 15:12:24.546"/>
</if>
<status status="PASS" starttime="20230708 15:12:23.100" endtime="20230708 15:12:24.547"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230708 15:12:24.548" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230708 15:12:24.547" endtime="20230708 15:12:24.548"/>
</kw>
<status status="PASS" starttime="20230708 15:12:24.547" endtime="20230708 15:12:24.548"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:12:24.550" endtime="20230708 15:12:24.551"/>
</kw>
<status status="PASS" starttime="20230708 15:12:24.549" endtime="20230708 15:12:24.551"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:24.551" endtime="20230708 15:12:25.246"/>
</kw>
<status status="PASS" starttime="20230708 15:12:24.551" endtime="20230708 15:12:25.247"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:28.809" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:25.248" endtime="20230708 15:12:28.810"/>
</kw>
<status status="PASS" starttime="20230708 15:12:25.247" endtime="20230708 15:12:28.810"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:12:29.068" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230708 15:12:28.810" endtime="20230708 15:12:29.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230708 15:12:29.069" endtime="20230708 15:12:29.069"/>
</kw>
<status status="PASS" starttime="20230708 15:12:25.247" endtime="20230708 15:12:29.069"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:29.070" endtime="20230708 15:12:34.617"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:35.863" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:34.618" endtime="20230708 15:12:35.863"/>
</kw>
<status status="PASS" starttime="20230708 15:12:34.617" endtime="20230708 15:12:35.864"/>
</kw>
<status status="PASS" starttime="20230708 15:12:29.070" endtime="20230708 15:12:35.864"/>
</kw>
<kw name="Continue to Payment" library="booking">
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:35.865" endtime="20230708 15:12:36.021"/>
</kw>
<status status="PASS" starttime="20230708 15:12:35.864" endtime="20230708 15:12:36.022"/>
</kw>
<kw name="Select Join for Free" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//input[@value='memberRate' and @checked='']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:37.393" level="INFO">Waited for Element with selector //input[@value='memberRate' and @checked=''] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:36.023" endtime="20230708 15:12:37.393"/>
</kw>
<status status="PASS" starttime="20230708 15:12:36.022" endtime="20230708 15:12:37.394"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:12:37.687" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230708 15:12:37.395" endtime="20230708 15:12:37.687"/>
</kw>
<status status="PASS" starttime="20230708 15:12:37.394" endtime="20230708 15:12:37.688"/>
</kw>
<status status="PASS" starttime="20230708 15:12:36.022" endtime="20230708 15:12:37.688"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230708 15:12:38.055" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:12:37.689" endtime="20230708 15:12:38.055"/>
</kw>
<status status="FAIL" starttime="20230708 15:12:37.689" endtime="20230708 15:12:38.056"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.057" endtime="20230708 15:12:38.057"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.057" endtime="20230708 15:12:38.057"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.057" endtime="20230708 15:12:38.058"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.058" endtime="20230708 15:12:38.058"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.058" endtime="20230708 15:12:38.058"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.058" endtime="20230708 15:12:38.058"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.059" endtime="20230708 15:12:38.059"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.059" endtime="20230708 15:12:38.059"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:38.059" endtime="20230708 15:12:38.059"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230708 15:12:38.060" endtime="20230708 15:12:38.060"/>
</kw>
<status status="NOT RUN" starttime="20230708 15:12:38.059" endtime="20230708 15:12:38.060"/>
</branch>
<status status="NOT RUN" starttime="20230708 15:12:38.059" endtime="20230708 15:12:38.060"/>
</if>
<status status="FAIL" starttime="20230708 15:12:37.688" endtime="20230708 15:12:38.061"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:38.061" endtime="20230708 15:12:38.061"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:38.061" endtime="20230708 15:12:38.061"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230708 15:12:38.061" endtime="20230708 15:12:38.062"/>
</kw>
<doc>A new booker opens the page and does a successful booking</doc>
<status status="FAIL" starttime="20230708 15:12:23.094" endtime="20230708 15:12:38.063">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s2-s2-t2" name="Confirm Email and Open Link" line="27">
<kw name="Get Variable Value" library="BuiltIn">
<var>${id}</var>
<arg>$ID</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230708 15:12:38.331" level="INFO">${id} = None</msg>
<status status="PASS" starttime="20230708 15:12:38.329" endtime="20230708 15:12:38.331"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${modify_link}</var>
<arg>${id}</arg>
<msg timestamp="20230708 15:12:38.332" level="FAIL">ApiValueError: Missing the required parameter `inbox_id` when calling `wait_for_matching_emails`</msg>
<status status="FAIL" starttime="20230708 15:12:38.331" endtime="20230708 15:12:38.332"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${modify_link}</arg>
<status status="NOT RUN" starttime="20230708 15:12:38.333" endtime="20230708 15:12:38.333"/>
</kw>
<doc>A new booker receives an email with a link to modify the booking</doc>
<status status="FAIL" starttime="20230708 15:12:38.323" endtime="20230708 15:12:38.333">ApiValueError: Missing the required parameter `inbox_id` when calling `wait_for_matching_emails`</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:12:39.030" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:12:38.341" endtime="20230708 15:12:39.030"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230708 15:12:19.673" endtime="20230708 15:12:39.030"/>
</suite>
<status status="FAIL" starttime="20230708 15:12:14.109" endtime="20230708 15:12:39.041"/>
</suite>
<status status="FAIL" starttime="20230708 15:01:52.544" endtime="20230708 15:12:39.044"/>
</suite>
<suite id="s1-s2" name="MUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI">
<suite id="s1-s2-s1" name="EC" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC">
<suite id="s1-s2-s1-s1" name="Example" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC/example.robot">
<test id="s1-s2-s1-s1-t1" name="Open MUI" line="15">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:12:39.082" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/4a9f89bc-1686-4806-b0a6-7b1cde57144b"}</msg>
<msg timestamp="20230708 15:12:39.765" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/4a9f89bc-1686-4806-b0a6-7b1cde57144b"}</msg>
<status status="PASS" starttime="20230708 15:12:39.081" endtime="20230708 15:12:39.765"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:39.768" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:12:39.766" endtime="20230708 15:12:39.769"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:12:39.769" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:12:39.839" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:12:39.839" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:12:39.769" endtime="20230708 15:12:39.839"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:12:40.651" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:12:40.651" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:12:40.651" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230708 15:12:39.839" endtime="20230708 15:12:40.653"/>
</kw>
<status status="FAIL" starttime="20230708 15:12:39.081" endtime="20230708 15:12:40.654"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230708 15:12:40.655" endtime="20230708 15:12:40.655"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230708 15:12:40.656" endtime="20230708 15:12:40.656"/>
</kw>
<status status="FAIL" starttime="20230708 15:12:39.080" endtime="20230708 15:12:40.657"/>
</kw>
<tag>exhibition_court</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20230708 15:12:39.078" endtime="20230708 15:12:40.659">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:12:42.709" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:12:40.766" endtime="20230708 15:12:42.710"/>
</kw>
<doc>This file contains keywords that are related to the booking process.</doc>
<status status="FAIL" starttime="20230708 15:12:39.052" endtime="20230708 15:12:42.710"/>
</suite>
<suite id="s1-s2-s1-s2" name="New Booking" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC/new_booking.robot">
<test id="s1-s2-s1-s2-t1" name="Create A New Booking on Booking.com for today and verify Emails" line="31">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:12:42.742" endtime="20230708 15:12:42.742"/>
</kw>
<msg timestamp="20230708 15:12:42.743" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230708 15:12:42.742" endtime="20230708 15:12:42.743"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:12:42.745" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/88a07259-740f-440c-a9e3-94f857bd4839"}</msg>
<msg timestamp="20230708 15:12:43.427" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/88a07259-740f-440c-a9e3-94f857bd4839"}</msg>
<status status="PASS" starttime="20230708 15:12:42.744" endtime="20230708 15:12:43.427"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:12:43.431" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:12:43.428" endtime="20230708 15:12:43.431"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:12:43.432" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:12:43.504" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:12:43.505" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:12:43.432" endtime="20230708 15:12:43.505"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:12:46.805" level="INFO">Successfully initialized new page object and opened url: https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1</msg>
<status status="PASS" starttime="20230708 15:12:43.505" endtime="20230708 15:12:46.805"/>
</kw>
<status status="PASS" starttime="20230708 15:12:42.743" endtime="20230708 15:12:46.806"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:12:46.806" endtime="20230708 15:12:46.807"/>
</kw>
<kw name="Get Selectors For Far Date" library="Helpers">
<var>${day}</var>
<var>${month}</var>
<msg timestamp="20230708 15:12:46.807" level="INFO">${day} = 6</msg>
<msg timestamp="20230708 15:12:46.807" level="INFO">${month} = 9</msg>
<status status="PASS" starttime="20230708 15:12:46.807" endtime="20230708 15:12:46.808"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-monthday</arg>
<arg>value</arg>
<arg>${day}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:46.808" endtime="20230708 15:12:47.002"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-yearmonth</arg>
<arg>value</arg>
<arg>2023-${month}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:47.002" endtime="20230708 15:12:48.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Check availability')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:48.508" endtime="20230708 15:12:51.745"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230708 15:12:51.745" endtime="20230708 15:12:55.506"/>
</kw>
<kw name="Is Element Visible" library="common">
<var>${reserveButton}</var>
<arg>//button[@name='book']</arg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230708 15:12:55.600" level="INFO">${isVisible} = True</msg>
<status status="PASS" starttime="20230708 15:12:55.508" endtime="20230708 15:12:55.600"/>
</kw>
<msg timestamp="20230708 15:12:55.600" level="INFO">${reserveButton} = True</msg>
<status status="PASS" starttime="20230708 15:12:55.507" endtime="20230708 15:12:55.600"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[contains(@id, 'unit')]</arg>
<arg>value</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:55.601" endtime="20230708 15:12:55.645"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'reserve')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:55.645" endtime="20230708 15:12:58.955"/>
</kw>
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:12:58.956" endtime="20230708 15:12:58.956"/>
</kw>
<msg timestamp="20230708 15:12:58.956" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230708 15:12:58.955" endtime="20230708 15:12:58.956"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstname</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:58.957" endtime="20230708 15:12:59.559"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:12:59.560" level="INFO">Fills the text 'Mos' in the given field.</msg>
<status status="PASS" starttime="20230708 15:12:59.559" endtime="20230708 15:12:59.614"/>
</kw>
<status status="PASS" starttime="20230708 15:12:58.957" endtime="20230708 15:12:59.615"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastname</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:12:59.616" endtime="20230708 15:12:59.855"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:12:59.856" level="INFO">Fills the text 'Def' in the given field.</msg>
<status status="PASS" starttime="20230708 15:12:59.856" endtime="20230708 15:13:00.239"/>
</kw>
<status status="PASS" starttime="20230708 15:12:59.615" endtime="20230708 15:13:00.240"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${id}@mailslurp.com</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:00.241" endtime="20230708 15:13:00.816"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:13:00.817" level="INFO">Fills the text '492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com' in the given field.</msg>
<status status="PASS" starttime="20230708 15:13:00.816" endtime="20230708 15:13:00.943"/>
</kw>
<status status="PASS" starttime="20230708 15:13:00.240" endtime="20230708 15:13:00.943"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:13:00.943" endtime="20230708 15:13:00.944"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230708 15:13:00.945" level="INFO">${ID} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230708 15:13:00.944" endtime="20230708 15:13:00.945"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=remarks</arg>
<arg>testRemark</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:00.945" endtime="20230708 15:13:01.163"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:13:01.164" level="INFO">Fills the text 'testRemark' in the given field.</msg>
<status status="PASS" starttime="20230708 15:13:01.164" endtime="20230708 15:13:01.242"/>
</kw>
<status status="PASS" starttime="20230708 15:13:00.945" endtime="20230708 15:13:01.242"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[contains(@class, 'guest-name-input')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.243" endtime="20230708 15:13:01.390"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=firstname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.390" endtime="20230708 15:13:01.606"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=lastname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.607" endtime="20230708 15:13:01.725"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=email</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.725" endtime="20230708 15:13:01.844"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=bp-control-group__label--notstayer</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.845" endtime="20230708 15:13:01.928"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Final details')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:01.929" endtime="20230708 15:13:06.127"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//select[@data-phone-country]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230708 15:13:06.616" level="INFO">Waited for Element with selector //select[@data-phone-country] at state visible</msg>
<status status="PASS" starttime="20230708 15:13:06.128" endtime="20230708 15:13:06.616"/>
</kw>
<status status="PASS" starttime="20230708 15:13:06.127" endtime="20230708 15:13:06.616"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[@data-phone-country]</arg>
<arg>value</arg>
<arg>FI</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230708 15:13:06.616" endtime="20230708 15:13:06.927"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=phone</arg>
<arg>${phone}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230708 15:13:06.928" level="INFO">Fills the text '0401234567' in the given field.</msg>
<status status="PASS" starttime="20230708 15:13:06.928" endtime="20230708 15:13:07.077"/>
</kw>
<kw name="Fill in Card Details">
<kw name="Click and Fill" library="common">
<arg>id=cc_name</arg>
<arg>Card Holder</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230708 15:14:37.192" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230708 15:14:37.193" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:37.193" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=cc_name')
  locator resolved to &lt;input size="22" type="text" id="cc_name" name="cc_name…/&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-group bui-group--inline bui-group--la…&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--lock-scroll bui-…&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;a type="button" class="bui-button js-double-bookin…&gt;…&lt;/a&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #6
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;a type="button" class="bui-button js-double-bookin…&gt;…&lt;/a&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #7
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #8
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #9
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #10
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;a type="button" class="bui-button js-double-bookin…&gt;…&lt;/a&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #11
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #12
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #13
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #14
  waiting 500ms
  waiting for element to be visible, enabled an
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230708 15:13:07.078" endtime="20230708 15:14:37.194"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.195" endtime="20230708 15:14:37.195"/>
</kw>
<status status="FAIL" starttime="20230708 15:13:07.078" endtime="20230708 15:14:37.196"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_type</arg>
<arg>value</arg>
<arg>Visa</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.196" endtime="20230708 15:14:37.196"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_number</arg>
<arg>4153013999700321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.197" endtime="20230708 15:14:37.197"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_month</arg>
<arg>value</arg>
<arg>11</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.197" endtime="20230708 15:14:37.197"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=ccYear</arg>
<arg>value</arg>
<arg>2023</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.197" endtime="20230708 15:14:37.197"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_cvc</arg>
<arg>321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.197" endtime="20230708 15:14:37.198"/>
</kw>
<status status="FAIL" starttime="20230708 15:13:07.077" endtime="20230708 15:14:37.198"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[@name='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.199" endtime="20230708 15:14:37.199"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${longer}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.199" endtime="20230708 15:14:37.199"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(@class, 'bui-modal__close')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.199" endtime="20230708 15:14:37.199"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230708 15:12:42.739" endtime="20230708 15:14:37.200">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=cc_name')
  locator resolved to &lt;input size="22" type="text" id="cc_name" name="cc_name…/&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-group bui-group--inline bui-group--la…&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--lock-scroll bui-…&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
    [ Message content over the limit has been removed. ]
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #13
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div class="bui-overlay__align"&gt;…&lt;/div&gt; from &lt;div class="bui-overlay bui-overlay--active"&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #14
  waiting 500ms
  waiting for element to be visible, enabled an
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s2-s1-s2-t2" name="Verify Emails and Get Booking No" line="66">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230708 15:14:37.286" endtime="20230708 15:14:37.286"/>
</kw>
<msg timestamp="20230708 15:14:37.286" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230708 15:14:37.285" endtime="20230708 15:14:37.286"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${confirmationEmail}</var>
<arg>${id}</arg>
<arg>is confirmed</arg>
<msg timestamp="20230708 15:14:37.582" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230708 15:14:37.287" endtime="20230708 15:14:37.583"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${welcomeEmail}</var>
<arg>${id}</arg>
<arg>Welcome to Exhibition Court Hotel</arg>
<status status="NOT RUN" starttime="20230708 15:14:37.583" endtime="20230708 15:14:37.584"/>
</kw>
<kw name="Get Confirmation Number from Email" library="MailSlurp">
<var>${bookingNo}</var>
<arg>${welcomeEmail}</arg>
<status status="NOT RUN" starttime="20230708 15:14:37.584" endtime="20230708 15:14:37.584"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BDCNo}</arg>
<arg>${bookingNo}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230708 15:14:37.584" endtime="20230708 15:14:37.584"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230708 15:14:37.281" endtime="20230708 15:14:37.585">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s2-s1-s2-t3" name="Create A New Booking on Booking.com for a later date and verify Emails" line="73">
<kw name="Pass Execution" library="BuiltIn">
<arg>TBD</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230708 15:14:37.598" level="INFO">Execution passed with message:
TBD</msg>
<status status="PASS" starttime="20230708 15:14:37.598" endtime="20230708 15:14:37.598"/>
</kw>
<tag>exhibition_court</tag>
<status status="PASS" starttime="20230708 15:14:37.595" endtime="20230708 15:14:37.599">TBD</status>
</test>
<test id="s1-s2-s1-s2-t4" name="Cancel Booking via BDC" line="76">
<kw name="Pass Execution" library="BuiltIn">
<arg>Can't cancel if done upon the next 24 hours</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230708 15:14:37.606" level="INFO">Execution passed with message:
Can't cancel if done upon the next 24 hours</msg>
<status status="PASS" starttime="20230708 15:14:37.605" endtime="20230708 15:14:37.606"/>
</kw>
<tag>exhibition_court</tag>
<status status="PASS" starttime="20230708 15:14:37.603" endtime="20230708 15:14:37.606">Can't cancel if done upon the next 24 hours</status>
</test>
<test id="s1-s2-s1-s2-t5" name="Open Booking in MUI" line="79">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:14:37.615" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/69f8f73e-0f80-4d30-b387-7ec54a91d0e0"}</msg>
<msg timestamp="20230708 15:14:38.367" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/69f8f73e-0f80-4d30-b387-7ec54a91d0e0"}</msg>
<status status="PASS" starttime="20230708 15:14:37.614" endtime="20230708 15:14:38.368"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:14:38.368" endtime="20230708 15:14:38.371"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:14:38.372" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:14:38.443" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:14:38.443" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:14:38.371" endtime="20230708 15:14:38.443"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:14:39.226" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.227" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:39.227" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230708 15:14:38.443" endtime="20230708 15:14:39.228"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:37.614" endtime="20230708 15:14:39.229"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:39.230" endtime="20230708 15:14:39.230"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230708 15:14:39.230" endtime="20230708 15:14:39.230"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:37.614" endtime="20230708 15:14:39.234"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>In Nelson, looking for booking: ${BDCNo}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.235" endtime="20230708 15:14:39.235"/>
</kw>
<kw name="Search with String" library="mui">
<arg>${BDCNo}</arg>
<status status="NOT RUN" starttime="20230708 15:14:39.235" endtime="20230708 15:14:39.235"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.236" endtime="20230708 15:14:39.236"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(text(), '${BDCNo}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.236" endtime="20230708 15:14:39.236"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.236" endtime="20230708 15:14:39.237"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230708 15:14:37.611" endtime="20230708 15:14:39.237">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s2-s1-s2-t6" name="Cancel Booking in MUI" line="87">
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Cancel')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230708 15:14:39.374" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.375" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:39.376" level="FAIL">Error: Could not find active page</msg>
<status status="FAIL" starttime="20230708 15:14:39.368" endtime="20230708 15:14:39.376"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Yes')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.376" endtime="20230708 15:14:39.376"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.377" endtime="20230708 15:14:39.377"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${status}</var>
<arg>//span[contains(@class, 'status')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.378" endtime="20230708 15:14:39.378"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>Cancelled</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.378" endtime="20230708 15:14:39.378"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230708 15:14:39.360" endtime="20230708 15:14:39.379">Error: Could not find active page</status>
</test>
<test id="s1-s2-s1-s2-t7" name="Start Creating a new Booking in MUI" line="94">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:14:39.393" level="INFO">Switching browser to browser=a5dfaebc-afc2-4a96-ba43-91d29987e603</msg>
<msg timestamp="20230708 15:14:39.395" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230708 15:14:39.395" level="INFO">Reusing existing browser with id: browser=a5dfaebc-afc2-4a96-ba43-91d29987e603</msg>
<status status="PASS" starttime="20230708 15:14:39.393" endtime="20230708 15:14:39.395"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230708 15:14:39.396" endtime="20230708 15:14:39.396"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:14:39.397" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:14:39.510" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:14:39.510" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:14:39.396" endtime="20230708 15:14:39.510"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:14:39.817" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.818" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:39.819" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230708 15:14:39.511" endtime="20230708 15:14:39.819"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:39.392" endtime="20230708 15:14:39.821"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:39.821" endtime="20230708 15:14:39.821"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230708 15:14:39.821" endtime="20230708 15:14:39.822"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:39.392" endtime="20230708 15:14:39.822"/>
</kw>
<kw name="Open Reservations Page" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:39.822" endtime="20230708 15:14:39.823"/>
</kw>
<kw name="Click New Reservation Button" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:39.823" endtime="20230708 15:14:39.823"/>
</kw>
<kw name="Select Normal Reservation" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:39.823" endtime="20230708 15:14:39.823"/>
</kw>
<kw name="Switch Page" library="Browser">
<var>${previous}</var>
<arg>NEW</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.823" endtime="20230708 15:14:39.823"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="NOT RUN" starttime="20230708 15:14:39.824" endtime="20230708 15:14:39.824"/>
</kw>
<kw name="Create a successful booking and return UUID" library="booking">
<var>${uuid}</var>
<arg>True</arg>
<status status="NOT RUN" starttime="20230708 15:14:39.824" endtime="20230708 15:14:39.824"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230708 15:14:39.384" endtime="20230708 15:14:39.824">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:14:41.309" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230708 15:14:39.883" endtime="20230708 15:14:41.309"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230708 15:12:42.718" endtime="20230708 15:14:41.309"/>
</suite>
<status status="FAIL" starttime="20230708 15:12:39.050" endtime="20230708 15:14:41.317"/>
</suite>
<suite id="s1-s2-s2" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/feature">
<suite id="s1-s2-s2-s1" name="MUI-430" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/feature/MUI-430.robot">
<kw name="Open Browser to Nelson Portal and Login" library="mui" type="SETUP">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:14:41.343" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0f825c23-d7bb-4947-9660-6927b0e22910"}</msg>
<msg timestamp="20230708 15:14:42.028" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/0f825c23-d7bb-4947-9660-6927b0e22910"}</msg>
<status status="PASS" starttime="20230708 15:14:41.342" endtime="20230708 15:14:42.028"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230708 15:14:42.031" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230708 15:14:42.029" endtime="20230708 15:14:42.031"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230708 15:14:42.032" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230708 15:14:42.103" level="INFO">Successfully created context. </msg>
<msg timestamp="20230708 15:14:42.103" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230708 15:14:42.032" endtime="20230708 15:14:42.103"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230708 15:14:42.959" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:42.959" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:42.959" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230708 15:14:42.104" endtime="20230708 15:14:42.960"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:41.342" endtime="20230708 15:14:42.961"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230708 15:14:42.961" endtime="20230708 15:14:42.961"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>${environment}</arg>
<status status="NOT RUN" starttime="20230708 15:14:42.961" endtime="20230708 15:14:42.961"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:41.342" endtime="20230708 15:14:42.962"/>
</kw>
<test id="s1-s2-s2-s1-t1" name="Filter Check in incomplete and open reservation" line="12">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled on</doc>
<status status="FAIL" starttime="20230708 15:14:42.962" endtime="20230708 15:14:42.966">Parent suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s2-s2-s1-t2" name="Remove filter and open a reservation" line="23">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled off</doc>
<status status="FAIL" starttime="20230708 15:14:42.976" endtime="20230708 15:14:42.982">Parent suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:14:44.966" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230708 15:14:42.991" endtime="20230708 15:14:44.966"/>
</kw>
<doc>This file contains test cases for testing MUI-430.robot</doc>
<status status="FAIL" starttime="20230708 15:14:41.321" endtime="20230708 15:14:44.966">Suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</suite>
<status status="FAIL" starttime="20230708 15:14:41.319" endtime="20230708 15:14:44.973"/>
</suite>
<status status="FAIL" starttime="20230708 15:12:39.048" endtime="20230708 15:14:44.974"/>
</suite>
<suite id="s1-s3" name="Others" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/Others">
<suite id="s1-s3-s1" name="Example" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/Others/example.robot">
<test id="s1-s3-s1-t1" name="Open Nelson Portal" line="9">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>false</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230708 15:14:44.989" level="INFO">{"browser": "firefox", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/63df54f0-d07c-4973-88fb-b9f8aea57553"}</msg>
<msg timestamp="20230708 15:14:45.254" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:45.255" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230708 15:14:45.257" level="FAIL">Error: browserType.launch: 
╔════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Looks like you launched a headed browser without having a XServer running.                     ║
║ Set either 'headless: true' or use 'xvfb-run &lt;your-playwright-app&gt;' before running Playwright. ║
║                                                                                                ║
║ &lt;3 Playwright Team                                                                             ║
╚════════════════════════════════════════════════════════════════════════════════════════════════╝
=========================== logs ===========================
&lt;launching&gt; /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/Browser/wrapper/node_modules/playwright-core/.local-browsers/firefox-1408/firefox/firefox -no-remote -wait-for-browser -foreground -profile /tmp/playwright_firefoxdev_profile-VNuaEh -juggler-pipe -silent
&lt;launched&gt; pid=15155
[pid=15155][err] Error: no DISPLAY environment variable specified
[pid=15155] &lt;process did exit: exitCode=1, signal=null&gt;
[pid=15155] starting temporary directories cleanup
============================================================</msg>
<status status="FAIL" starttime="20230708 15:14:44.989" endtime="20230708 15:14:45.257"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<status status="NOT RUN" starttime="20230708 15:14:45.258" endtime="20230708 15:14:45.258"/>
</kw>
<kw name="EnvHandler.Get Environment Variable">
<var>${url}</var>
<arg>MUI_LINK</arg>
<status status="NOT RUN" starttime="20230708 15:14:45.264" endtime="20230708 15:14:45.264"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20230708 15:14:45.264" endtime="20230708 15:14:45.265"/>
</kw>
<tag>skip</tag>
<status status="FAIL" starttime="20230708 15:14:44.986" endtime="20230708 15:14:45.265">Error: browserType.launch: 
╔════════════════════════════════════════════════════════════════════════════════════════════════╗
║ Looks like you launched a headed browser without having a XServer running.                     ║
║ Set either 'headless: true' or use 'xvfb-run &lt;your-playwright-app&gt;' before running Playwright. ║
║                                                                                                ║
║ &lt;3 Playwright Team                                                                             ║
╚════════════════════════════════════════════════════════════════════════════════════════════════╝
=========================== logs ===========================
&lt;launching&gt; /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/Browser/wrapper/node_modules/playwright-core/.local-browsers/firefox-1408/firefox/firefox -no-remote -wait-for-browser -foreground -profile /tmp/playwright_firefoxdev_profile-VNuaEh -juggler-pipe -silent
&lt;launched&gt; pid=15155
[pid=15155][err] Error: no DISPLAY environment variable specified
[pid=15155] &lt;process did exit: exitCode=1, signal=null&gt;
[pid=15155] starting temporary directories cleanup
============================================================</status>
</test>
<test id="s1-s3-s1-t2" name="Login Nelson Portal" line="15">
<kw name="EnvHandler.Get Environment Variable">
<var>${password}</var>
<arg>MUI_PASSWORD</arg>
<msg timestamp="20230708 15:14:45.280" level="FAIL">No keyword with name 'EnvHandler.Get Environment Variable' found.</msg>
<status status="FAIL" starttime="20230708 15:14:45.280" endtime="20230708 15:14:45.280"/>
</kw>
<kw name="EnvHandler.Get Environment Variable">
<var>${username}</var>
<arg>MUI_USERNAME</arg>
<status status="NOT RUN" starttime="20230708 15:14:45.286" endtime="20230708 15:14:45.286"/>
</kw>
<kw name="Type Secret" library="Browser">
<arg>id=loginUsername</arg>
<arg>${username}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given secret from ``variable_name`` into the text field
found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:45.286" endtime="20230708 15:14:45.286"/>
</kw>
<kw name="Type Secret" library="Browser">
<arg>id=loginPassword</arg>
<arg>${password}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given secret from ``variable_name`` into the text field
found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230708 15:14:45.287" endtime="20230708 15:14:45.287"/>
</kw>
<tag>skip</tag>
<status status="FAIL" starttime="20230708 15:14:45.270" endtime="20230708 15:14:45.287">No keyword with name 'EnvHandler.Get Environment Variable' found.</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230708 15:14:45.294" level="INFO">No browser open, doing nothing</msg>
<status status="PASS" starttime="20230708 15:14:45.292" endtime="20230708 15:14:45.294"/>
</kw>
<status status="FAIL" starttime="20230708 15:14:44.977" endtime="20230708 15:14:45.294"/>
</suite>
<status status="FAIL" starttime="20230708 15:14:44.975" endtime="20230708 15:14:45.301"/>
</suite>
<doc>Argument file for running tests on Omena staging environment (test3)</doc>
<status status="FAIL" starttime="20230708 15:01:52.520" endtime="20230708 15:14:45.303"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="31" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="6" skip="0">exhibition_court</stat>
<stat pass="1" fail="2" skip="0">skip</stat>
<stat pass="0" fail="1" skip="0">smoke</stat>
<stat pass="0" fail="1" skip="0">smoke, booking, BUI2-556, online-checkin</stat>
</tag>
<suite>
<stat pass="4" fail="31" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="2" fail="21" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="1" fail="19" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="1" fail="19" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-556">Testsuites.BUI.Feature.Online Check In.BUI2-556</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1-s1-s1-s2" name="BUI2-557">Testsuites.BUI.Feature.Online Check In.BUI2-557</stat>
<stat pass="0" fail="11" skip="0" id="s1-s1-s1-s1-s3" name="BUI2-558">Testsuites.BUI.Feature.Online Check In.BUI2-558</stat>
<stat pass="0" fail="5" skip="0" id="s1-s1-s1-s1-s4" name="BUI2-559">Testsuites.BUI.Feature.Online Check In.BUI2-559</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1-s2" name="Regression">Testsuites.BUI.Regression</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2-s1" name="Modify Booking">Testsuites.BUI.Regression.Modify Booking</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s2-s2" name="New Booking">Testsuites.BUI.Regression.New Booking</stat>
<stat pass="2" fail="8" skip="0" id="s1-s2" name="MUI">Testsuites.MUI</stat>
<stat pass="2" fail="6" skip="0" id="s1-s2-s1" name="EC">Testsuites.MUI.EC</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s1-s1" name="Example">Testsuites.MUI.EC.Example</stat>
<stat pass="2" fail="5" skip="0" id="s1-s2-s1-s2" name="New Booking">Testsuites.MUI.EC.New Booking</stat>
<stat pass="0" fail="2" skip="0" id="s1-s2-s2" name="Feature">Testsuites.MUI.Feature</stat>
<stat pass="0" fail="2" skip="0" id="s1-s2-s2-s1" name="MUI-430">Testsuites.MUI.Feature.MUI-430</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3" name="Others">Testsuites.Others</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s1" name="Example">Testsuites.Others.Example</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230708 15:12:40.651" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.226" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.374" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:39.817" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:42.959" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230708 15:14:45.254" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
</errors>
</robot>
