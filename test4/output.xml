<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.16 on darwin)" generated="20230815 08:08:44.230" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/Users/sara/code/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/Users/sara/code/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-556" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-556.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:08:44.980" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:08:44.980" level="TRACE">Arguments: [ ${url}='https://test4.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:08:44.981" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | False | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:44.981" level="INFO">{"browser": "firefox", "headless": false, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test4/browser/traces/9d048e89-93a2-4867-8f21-ecd9b5ddf115"}</msg>
<msg timestamp="20230815 08:08:45.487" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test4/browser/traces/9d048e89-93a2-4867-8f21-ecd9b5ddf115"}</msg>
<msg timestamp="20230815 08:08:45.487" level="TRACE">Return: 'browser=eda2bdbd-5c9c-483f-a659-e420e2c789b5'</msg>
<status status="PASS" starttime="20230815 08:08:44.981" endtime="20230815 08:08:45.487"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:08:45.488" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:45.489" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:08:45.489" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:08:45.487" endtime="20230815 08:08:45.489"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:08:45.489" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:08:45.489" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:08:45.504" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:08:45.504" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:08:45.504" level="TRACE">Return: 'context=a806e649-a99c-4e04-9427-e52bc72799ee'</msg>
<status status="PASS" starttime="20230815 08:08:45.489" endtime="20230815 08:08:45.504"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:08:45.505" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:08:48.106" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/en</msg>
<msg timestamp="20230815 08:08:48.106" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:08:48.106" level="TRACE">Return: {'page_id': 'page=0b1b22a2-7c25-478a-a7f5-cd3c3bc1bc8a', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:08:45.504" endtime="20230815 08:08:48.106"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:08:48.106" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:08:48.106" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:08:48.108" level="DEBUG">https://test4.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:08:48.108" level="TRACE">Return: 'https://test4.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:08:48.108" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:08:48.106" endtime="20230815 08:08:48.108"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:08:48.108" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:08:48.108" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:08:48.108" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:08:48.108" endtime="20230815 08:08:48.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:08:48.108" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:08:48.108" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:08:48.108" endtime="20230815 08:08:48.108"/>
</kw>
<msg timestamp="20230815 08:08:48.109" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.106" endtime="20230815 08:08:48.109"/>
</kw>
<msg timestamp="20230815 08:08:48.109" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:44.980" endtime="20230815 08:08:48.109"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:08:48.109" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:08:48.109" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:08:48.109" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:08:48.111" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:08:48.111" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:08:48.109" endtime="20230815 08:08:48.111"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:08:48.112" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:08:48.137" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:08:48.137" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:08:48.137" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:08:48.137" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:08:48.111" endtime="20230815 08:08:48.137"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:08:48.137" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20230815 08:08:48.137" level="INFO">Length is 1</msg>
<msg timestamp="20230815 08:08:48.137" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:08:48.137" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230815 08:08:48.137" endtime="20230815 08:08:48.137"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:08:48.138" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20230815 08:08:48.138" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:08:48.138" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230815 08:08:48.137" endtime="20230815 08:08:48.138"/>
</kw>
<status status="PASS" starttime="20230815 08:08:48.137" endtime="20230815 08:08:48.138"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:08:48.138" endtime="20230815 08:08:48.138"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:08:48.138" endtime="20230815 08:08:48.138"/>
</branch>
<status status="PASS" starttime="20230815 08:08:48.137" endtime="20230815 08:08:48.138"/>
</if>
<status status="PASS" starttime="20230815 08:08:48.111" endtime="20230815 08:08:48.138"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:08:48.138" endtime="20230815 08:08:48.138"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:08:48.138" endtime="20230815 08:08:48.138"/>
</branch>
<status status="PASS" starttime="20230815 08:08:48.111" endtime="20230815 08:08:48.138"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:08:48.138" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:48.140" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:08:48.140" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:08:48.138" endtime="20230815 08:08:48.140"/>
</kw>
<msg timestamp="20230815 08:08:48.140" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:08:48.140" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230815 08:08:48.109" endtime="20230815 08:08:48.140"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:48.140" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:08:48.141" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:48.196" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:48.196" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.140" endtime="20230815 08:08:48.196"/>
</kw>
<status status="PASS" starttime="20230815 08:08:48.140" endtime="20230815 08:08:48.196"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:08:48.196" endtime="20230815 08:08:48.196"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:08:48.196" endtime="20230815 08:08:48.196"/>
</branch>
<status status="PASS" starttime="20230815 08:08:48.140" endtime="20230815 08:08:48.197"/>
</if>
<msg timestamp="20230815 08:08:48.197" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.109" endtime="20230815 08:08:48.197"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:08:48.197" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:08:48.197" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:08:48.198" level="DEBUG">https://test4.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:08:48.198" level="TRACE">Return: 'https://test4.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:08:48.198" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:08:48.197" endtime="20230815 08:08:48.198"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:08:48.198" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:08:48.198" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:08:48.198" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:08:48.198" endtime="20230815 08:08:48.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:08:48.198" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:08:48.198" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:08:48.198" endtime="20230815 08:08:48.198"/>
</kw>
<msg timestamp="20230815 08:08:48.199" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.197" endtime="20230815 08:08:48.199"/>
</kw>
<msg timestamp="20230815 08:08:48.199" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:44.980" endtime="20230815 08:08:48.199"/>
</kw>
<test id="s1-s1-s1-s1-s1-t1" name="Select Hotel, Dates and Guests" line="14">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:08:48.199" level="TRACE">Arguments: [ ${hotel}='Helsinki, Lönnrotinkatu' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:08:48.200" endtime="20230815 08:08:48.200"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:08:48.200" endtime="20230815 08:08:48.200"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:08:48.200" level="TRACE">Arguments: [ 'Selecting Hotel: Helsinki, Lönnrotinkatu' ]</msg>
<msg timestamp="20230815 08:08:48.200" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<msg timestamp="20230815 08:08:48.200" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.200" endtime="20230815 08:08:48.200"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:48.200" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:08:48.200" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:48.263" level="DEBUG">Clicked element: '//div[contains(@data-nelson-btn, "hotels")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:48.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.200" endtime="20230815 08:08:48.263"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:08:48.263" level="TRACE">Arguments: [ ${element}="//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:08:48.263" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:48.267" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<msg timestamp="20230815 08:08:48.267" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.263" endtime="20230815 08:08:48.267"/>
</kw>
<msg timestamp="20230815 08:08:48.267" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.263" endtime="20230815 08:08:48.267"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:48.267" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<msg timestamp="20230815 08:08:48.267" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:48.543" level="DEBUG">Clicked element: '//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:48.543" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.267" endtime="20230815 08:08:48.543"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:08:48.544" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.hidden: 8&gt; | timeout=datetime.timedelta(seconds=3) ]</msg>
<msg timestamp="20230815 08:08:48.549" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<msg timestamp="20230815 08:08:48.549" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.543" endtime="20230815 08:08:48.549"/>
</kw>
<status status="PASS" starttime="20230815 08:08:48.200" endtime="20230815 08:08:48.549"/>
</branch>
<status status="PASS" starttime="20230815 08:08:48.199" endtime="20230815 08:08:48.549"/>
</if>
<msg timestamp="20230815 08:08:48.549" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.199" endtime="20230815 08:08:48.549"/>
</kw>
<kw name="Select Dates" library="booking">
<msg timestamp="20230815 08:08:48.549" level="TRACE">Arguments: [  ]</msg>
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:08:48.550" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:08:48.550" level="INFO"/>
<msg timestamp="20230815 08:08:48.550" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.549" endtime="20230815 08:08:48.550"/>
</kw>
<msg timestamp="20230815 08:08:48.550" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.549" endtime="20230815 08:08:48.550"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<msg timestamp="20230815 08:08:48.550" level="TRACE">Arguments: [ ${rooms}='1' | ${persons}='1' | ${children}='0' ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:08:48.551" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:08:48.551" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.550" endtime="20230815 08:08:48.551"/>
</kw>
<msg timestamp="20230815 08:08:48.551" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.550" endtime="20230815 08:08:48.551"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230815 08:08:48.199" endtime="20230815 08:08:48.551"/>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Check Available Rooms and Select a Standard Room" line="19">
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20230815 08:08:48.553" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:08:48.553" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:08:48.555" level="DEBUG">https://test4.omenahotels.com/en/#</msg>
<msg timestamp="20230815 08:08:48.555" level="TRACE">Return: 'https://test4.omenahotels.com/en/#'</msg>
<msg timestamp="20230815 08:08:48.555" level="INFO">${url} = https://test4.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230815 08:08:48.553" endtime="20230815 08:08:48.555"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20230815 08:08:48.555" level="TRACE">Arguments: [ ${string}='https://test4.omenahotels.com/en/#' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230815 08:08:48.555" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en/#' | '/booking/' ]</msg>
<msg timestamp="20230815 08:08:48.555" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:08:48.555" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230815 08:08:48.555" endtime="20230815 08:08:48.555"/>
</kw>
<msg timestamp="20230815 08:08:48.555" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:08:48.555" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230815 08:08:48.555" endtime="20230815 08:08:48.555"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:08:48.556" endtime="20230815 08:08:48.556"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:08:48.555" endtime="20230815 08:08:48.556"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:48.556" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20230815 08:08:48.556" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:48.938" level="DEBUG">Clicked element: '//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:48.938" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.556" endtime="20230815 08:08:48.938"/>
</kw>
<status status="PASS" starttime="20230815 08:08:48.556" endtime="20230815 08:08:48.939"/>
</branch>
<status status="PASS" starttime="20230815 08:08:48.555" endtime="20230815 08:08:48.939"/>
</if>
<msg timestamp="20230815 08:08:48.939" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.553" endtime="20230815 08:08:48.939"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20230815 08:08:48.939" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:08:48.939" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:08:48.940" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:50.280" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20230815 08:08:50.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.939" endtime="20230815 08:08:50.280"/>
</kw>
<msg timestamp="20230815 08:08:50.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.939" endtime="20230815 08:08:50.280"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:50.280" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:08:50.532" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:08:50.532" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.25114011764526367 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:08:50.532" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:08:50.532" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:08:50.280" endtime="20230815 08:08:50.532"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:08:50.532" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20230815 08:08:50.532" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:50.532" endtime="20230815 08:08:50.532"/>
</kw>
<msg timestamp="20230815 08:08:50.532" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:48.939" endtime="20230815 08:08:50.532"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230815 08:08:48.553" endtime="20230815 08:08:50.532"/>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Continue to Extras and Select Join for Free" line="23">
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:08:50.534" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:50.534" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:08:50.535" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:58.287" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:58.287" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:50.534" endtime="20230815 08:08:58.287"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:08:58.287" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:08:58.288" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:08:59.594" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20230815 08:08:59.594" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:58.288" endtime="20230815 08:08:59.594"/>
</kw>
<msg timestamp="20230815 08:08:59.594" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:58.287" endtime="20230815 08:08:59.594"/>
</kw>
<msg timestamp="20230815 08:08:59.594" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:50.534" endtime="20230815 08:08:59.594"/>
</kw>
<kw name="Continue to Payment" library="booking">
<msg timestamp="20230815 08:08:59.595" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:08:59.595" level="TRACE">Arguments: [ "(//button[normalize-space()='Continue to payment'])[1]" ]</msg>
<msg timestamp="20230815 08:08:59.596" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:08:59.661" level="DEBUG">Clicked element: '(//button[normalize-space()='Continue to payment'])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:08:59.661" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:59.595" endtime="20230815 08:08:59.661"/>
</kw>
<msg timestamp="20230815 08:08:59.661" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:59.595" endtime="20230815 08:08:59.661"/>
</kw>
<kw name="Select Join for Free" library="booking">
<msg timestamp="20230815 08:08:59.662" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//input[@value='memberRate' and @checked='']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:08:59.662" level="TRACE">Arguments: [ ${element}="//input[@value='memberRate' and @checked='']" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:08:59.662" level="TRACE">Arguments: [ "//input[@value='memberRate' and @checked='']" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:00.965" level="INFO">Waited for Element with selector //input[@value='memberRate' and @checked=''] at state visible</msg>
<msg timestamp="20230815 08:09:00.965" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:59.662" endtime="20230815 08:09:00.965"/>
</kw>
<msg timestamp="20230815 08:09:00.966" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:59.662" endtime="20230815 08:09:00.966"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:09:00.966" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:00.967" level="TRACE">Arguments: [ "//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:00.975" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:09:00.975" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:00.966" endtime="20230815 08:09:00.975"/>
</kw>
<msg timestamp="20230815 08:09:00.976" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:00.966" endtime="20230815 08:09:00.976"/>
</kw>
<msg timestamp="20230815 08:09:00.976" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:08:59.661" endtime="20230815 08:09:00.976"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230815 08:08:50.534" endtime="20230815 08:09:00.976"/>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Fill in Booker Contact Information" line="28">
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20230815 08:09:00.979" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='040123942' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20230815 08:09:00.979" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230815 08:09:00.980" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:09:02.059" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x104f7a580&gt;
{'created_at': datetime.datetime(2023, 8, 15, 5, 9, 1, 801000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '74183722-3696-4c5f-8b26-fe50bbb53229',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x104f7a460&gt;</msg>
<msg timestamp="20230815 08:09:02.059" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 9, 1, 801000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '74183722-3696-4c5f-8b26-fe50bbb53229',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:09:02.060" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 9, 1, 801000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com',
 'expi...</msg>
<status status="PASS" starttime="20230815 08:09:00.980" endtime="20230815 08:09:02.060"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:09:02.061" level="TRACE">Arguments: [ '74183722-3696-4c5f-8b26-fe50bbb53229' ]</msg>
<msg timestamp="20230815 08:09:02.062" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.060" endtime="20230815 08:09:02.062"/>
</kw>
<msg timestamp="20230815 08:09:02.062" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 9, 1, 801000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '74183722-3696-4c5f-8b26-fe50bbb53229',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:09:02.062" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 9, 1, 801000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com',
 'expi...</msg>
<status status="PASS" starttime="20230815 08:09:00.979" endtime="20230815 08:09:02.062"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:09:02.063" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.063" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:09:02.064" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:02.121" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:02.122" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.063" endtime="20230815 08:09:02.122"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.122" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:09:02.122" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:09:02.151" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:09:02.151" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.122" endtime="20230815 08:09:02.151"/>
</kw>
<msg timestamp="20230815 08:09:02.152" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.062" endtime="20230815 08:09:02.152"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:09:02.152" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.152" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20230815 08:09:02.152" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:02.231" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:02.231" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.152" endtime="20230815 08:09:02.231"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.232" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:09:02.232" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:09:02.255" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:09:02.256" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.232" endtime="20230815 08:09:02.256"/>
</kw>
<msg timestamp="20230815 08:09:02.256" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.152" endtime="20230815 08:09:02.256"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:09:02.256" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.257" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:09:02.257" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:02.333" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:02.333" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.257" endtime="20230815 08:09:02.334"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.334" level="TRACE">Arguments: [ 'id=email' | '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com' ]</msg>
<msg timestamp="20230815 08:09:02.334" level="INFO">Fills the text '74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com' in the given field.</msg>
<msg timestamp="20230815 08:09:02.355" level="DEBUG">Fill text 74183722-3696-4c5f-8b26-fe50bbb53229@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20230815 08:09:02.355" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.334" endtime="20230815 08:09:02.355"/>
</kw>
<msg timestamp="20230815 08:09:02.356" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.256" endtime="20230815 08:09:02.356"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:09:02.356" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:09:02.357" level="DEBUG">https://test4.omenahotels.com/en/booking/#/payment</msg>
<msg timestamp="20230815 08:09:02.357" level="TRACE">Return: 'https://test4.omenahotels.com/en/booking/#/payment'</msg>
<msg timestamp="20230815 08:09:02.357" level="INFO">${u} = https://test4.omenahotels.com/en/booking/#/payment</msg>
<status status="PASS" starttime="20230815 08:09:02.356" endtime="20230815 08:09:02.357"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<msg timestamp="20230815 08:09:02.357" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en/booking/#/payment' ]</msg>
<msg timestamp="20230815 08:09:02.357" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:09:02.357" level="INFO">${e} = test-omena</msg>
<status status="PASS" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.357"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.357"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.357"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:09:02.358" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='040123942' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.358" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20230815 08:09:02.358" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:02.447" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:02.447" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.358" endtime="20230815 08:09:02.447"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.447" level="TRACE">Arguments: [ 'id=phoneNumber' | '040123942' ]</msg>
<msg timestamp="20230815 08:09:02.447" level="INFO">Fills the text '040123942' in the given field.</msg>
<msg timestamp="20230815 08:09:02.460" level="DEBUG">Fill text 040123942 on id=phoneNumber with force: false</msg>
<msg timestamp="20230815 08:09:02.460" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.447" endtime="20230815 08:09:02.460"/>
</kw>
<msg timestamp="20230815 08:09:02.461" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.461"/>
</kw>
<status status="PASS" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.461"/>
</branch>
<status status="PASS" starttime="20230815 08:09:02.357" endtime="20230815 08:09:02.461"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:09:02.461" level="TRACE">Arguments: [ '74183722-3696-4c5f-8b26-fe50bbb53229' ]</msg>
<msg timestamp="20230815 08:09:02.461" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.461" endtime="20230815 08:09:02.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 08:09:02.462" level="TRACE">Arguments: [ '$ID' | '${inbox.id}' ]</msg>
<msg timestamp="20230815 08:09:02.462" level="INFO">${ID} = 74183722-3696-4c5f-8b26-fe50bbb53229</msg>
<msg timestamp="20230815 08:09:02.462" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.462" endtime="20230815 08:09:02.462"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230815 08:09:02.462" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20230815 08:09:02.465" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:09:02.465" level="INFO">${passwordVisible} = 0</msg>
<status status="PASS" starttime="20230815 08:09:02.462" endtime="20230815 08:09:02.465"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:09:02.466" endtime="20230815 08:09:02.466"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:09:02.466" endtime="20230815 08:09:02.466"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:09:02.466" level="TRACE">Arguments: [ 'No password filled' ]</msg>
<msg timestamp="20230815 08:09:02.466" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.466" endtime="20230815 08:09:02.466"/>
</kw>
<status status="PASS" starttime="20230815 08:09:02.466" endtime="20230815 08:09:02.466"/>
</branch>
<status status="PASS" starttime="20230815 08:09:02.465" endtime="20230815 08:09:02.466"/>
</if>
<msg timestamp="20230815 08:09:02.466" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:00.979" endtime="20230815 08:09:02.466"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20230815 08:09:02.466" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:02.466" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20230815 08:09:02.467" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:12.063" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:12.063" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.466" endtime="20230815 08:09:12.063"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:12.063" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20230815 08:09:12.064" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:12.138" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:12.138" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:12.063" endtime="20230815 08:09:12.138"/>
</kw>
<msg timestamp="20230815 08:09:12.139" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:02.466" endtime="20230815 08:09:12.139"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230815 08:09:00.978" endtime="20230815 08:09:12.139"/>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Pay using Web Bank and Nordea" line="32">
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20230815 08:09:12.141" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:12.141" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20230815 08:09:12.141" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:12.200" level="DEBUG">Clicked element: '//div[contains(text(), "Web bank payment")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:12.201" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:12.141" endtime="20230815 08:09:12.201"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:12.201" level="TRACE">Arguments: [ "//p[contains(text(), 'Nordea')]" ]</msg>
<msg timestamp="20230815 08:09:12.201" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:12.275" level="DEBUG">Clicked element: '//p[contains(text(), 'Nordea')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:12.275" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:12.201" endtime="20230815 08:09:12.275"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:12.276" level="TRACE">Arguments: [ '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' ]</msg>
<msg timestamp="20230815 08:09:12.276" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:14.326" level="DEBUG">Clicked element: '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:14.326" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:12.275" endtime="20230815 08:09:14.326"/>
</kw>
<msg timestamp="20230815 08:09:14.326" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:12.140" endtime="20230815 08:09:14.326"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<msg timestamp="20230815 08:09:14.326" level="TRACE">Arguments: [  ]</msg>
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<msg timestamp="20230815 08:09:14.327" level="TRACE">Arguments: [ ${which}='success' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:14.327" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:31.619" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<msg timestamp="20230815 08:09:31.619" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:14.327" endtime="20230815 08:09:31.619"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:31.620" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" ]</msg>
<msg timestamp="20230815 08:09:31.620" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:34.671" level="DEBUG">Clicked element: '//a[contains(text(), 'Simulate success to merchant')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:34.672" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:31.619" endtime="20230815 08:09:34.672"/>
</kw>
<msg timestamp="20230815 08:09:34.672" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:14.326" endtime="20230815 08:09:34.672"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<msg timestamp="20230815 08:09:34.673" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:09:34.673" level="TRACE">Arguments: [ ${element}="//p[contains(text(), 'Payment was successful')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:34.674" level="TRACE">Arguments: [ "//p[contains(text(), 'Payment was successful')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:36.031" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<msg timestamp="20230815 08:09:36.031" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:34.674" endtime="20230815 08:09:36.031"/>
</kw>
<msg timestamp="20230815 08:09:36.031" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:34.673" endtime="20230815 08:09:36.031"/>
</kw>
<kw name="Close Dialog" library="booking">
<msg timestamp="20230815 08:09:36.032" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:09:36.032" level="TRACE">Arguments: [ ${element}='//button[contains(text(), "Ok")]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:36.033" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:36.038" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<msg timestamp="20230815 08:09:36.038" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.032" endtime="20230815 08:09:36.038"/>
</kw>
<msg timestamp="20230815 08:09:36.038" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.032" endtime="20230815 08:09:36.038"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:36.038" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' ]</msg>
<msg timestamp="20230815 08:09:36.039" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:36.105" level="DEBUG">Clicked element: '//button[contains(text(), "Ok")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:36.105" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.038" endtime="20230815 08:09:36.105"/>
</kw>
<msg timestamp="20230815 08:09:36.105" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.032" endtime="20230815 08:09:36.105"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<msg timestamp="20230815 08:09:36.105" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:36.106" level="TRACE">Arguments: [ "//p[contains(text(),'Booking number')]" ]</msg>
<msg timestamp="20230815 08:09:36.126" level="DEBUG">Text received successfully.</msg>
<msg timestamp="20230815 08:09:36.126" level="INFO">Text: 'Booking number: 276941435'</msg>
<msg timestamp="20230815 08:09:36.126" level="TRACE">Return: 'Booking number: 276941435'</msg>
<msg timestamp="20230815 08:09:36.126" level="INFO">${str} = Booking number: 276941435</msg>
<status status="PASS" starttime="20230815 08:09:36.106" endtime="20230815 08:09:36.126"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:09:36.126" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:09:36.126" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.126" endtime="20230815 08:09:36.126"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230815 08:09:36.126" level="TRACE">Arguments: [ 'Booking number: 276941435' | 'Booking code ' ]</msg>
<msg timestamp="20230815 08:09:36.126" level="TRACE">Return: 'Booking number: 276941435'</msg>
<msg timestamp="20230815 08:09:36.126" level="INFO">${str} = Booking number: 276941435</msg>
<status status="PASS" starttime="20230815 08:09:36.126" endtime="20230815 08:09:36.126"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230815 08:09:36.127" level="TRACE">Arguments: [ 'Booking number: 276941435' ]</msg>
<msg timestamp="20230815 08:09:36.127" level="TRACE">Return: 'Booking number: 276941435'</msg>
<msg timestamp="20230815 08:09:36.127" level="INFO">${str} = Booking number: 276941435</msg>
<status status="PASS" starttime="20230815 08:09:36.127" endtime="20230815 08:09:36.127"/>
</kw>
<msg timestamp="20230815 08:09:36.127" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.105" endtime="20230815 08:09:36.127"/>
</kw>
<msg timestamp="20230815 08:09:36.127" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:34.673" endtime="20230815 08:09:36.127"/>
</kw>
<msg timestamp="20230815 08:09:36.127" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:14.326" endtime="20230815 08:09:36.127"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230815 08:09:12.140" endtime="20230815 08:09:36.127"/>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Check In Online" line="36">
<kw name="Click Check In Button" library="booking">
<msg timestamp="20230815 08:09:36.129" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:09:36.129" level="TRACE">Arguments: [ ${element}='(//button[text()="Check in"])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:36.129" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:36.132" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<msg timestamp="20230815 08:09:36.132" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.129" endtime="20230815 08:09:36.132"/>
</kw>
<msg timestamp="20230815 08:09:36.132" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.129" endtime="20230815 08:09:36.132"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:36.132" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' ]</msg>
<msg timestamp="20230815 08:09:36.132" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:36.249" level="DEBUG">Clicked element: '(//button[text()="Check in"])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:36.249" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.132" endtime="20230815 08:09:36.249"/>
</kw>
<msg timestamp="20230815 08:09:36.249" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.129" endtime="20230815 08:09:36.249"/>
</kw>
<kw name="Fill Check in Slide" library="booking">
<msg timestamp="20230815 08:09:36.249" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//div[contains(@class, "chakra-offset-slide")])[2]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:09:36.250" level="TRACE">Arguments: [ ${element}='(//div[contains(@class, "chakra-offset-slide")])[2]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:09:36.250" level="TRACE">Arguments: [ '(//div[contains(@class, "chakra-offset-slide")])[2]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:09:36.253" level="INFO">Waited for Element with selector (//div[contains(@class, "chakra-offset-slide")])[2] at state visible</msg>
<msg timestamp="20230815 08:09:36.253" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.250" endtime="20230815 08:09:36.253"/>
</kw>
<msg timestamp="20230815 08:09:36.253" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.250" endtime="20230815 08:09:36.253"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:36.254" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:09:36.254" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:09:37.056" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:09:37.056" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.254" endtime="20230815 08:09:37.056"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.056" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:09:37.056" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:09:37.086" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:09:37.086" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.056" endtime="20230815 08:09:37.086"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=ssn</arg>
<arg>${ssn}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.086" level="TRACE">Arguments: [ 'id=ssn' | '170479-371J' ]</msg>
<msg timestamp="20230815 08:09:37.086" level="INFO">Fills the text '170479-371J' in the given field.</msg>
<msg timestamp="20230815 08:09:37.111" level="DEBUG">Fill text 170479-371J on id=ssn with force: false</msg>
<msg timestamp="20230815 08:09:37.111" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.086" endtime="20230815 08:09:37.111"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=address</arg>
<arg>Susitie 5</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.111" level="TRACE">Arguments: [ 'id=address' | 'Susitie 5' ]</msg>
<msg timestamp="20230815 08:09:37.111" level="INFO">Fills the text 'Susitie 5' in the given field.</msg>
<msg timestamp="20230815 08:09:37.142" level="DEBUG">Fill text Susitie 5 on id=address with force: false</msg>
<msg timestamp="20230815 08:09:37.142" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.111" endtime="20230815 08:09:37.142"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=city</arg>
<arg>Paimio</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.143" level="TRACE">Arguments: [ 'id=city' | 'Paimio' ]</msg>
<msg timestamp="20230815 08:09:37.143" level="INFO">Fills the text 'Paimio' in the given field.</msg>
<msg timestamp="20230815 08:09:37.178" level="DEBUG">Fill text Paimio on id=city with force: false</msg>
<msg timestamp="20230815 08:09:37.178" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.142" endtime="20230815 08:09:37.178"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=postalCode</arg>
<arg>21530</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.179" level="TRACE">Arguments: [ 'id=postalCode' | '21530' ]</msg>
<msg timestamp="20230815 08:09:37.179" level="INFO">Fills the text '21530' in the given field.</msg>
<msg timestamp="20230815 08:09:37.210" level="DEBUG">Fill text 21530 on id=postalCode with force: false</msg>
<msg timestamp="20230815 08:09:37.210" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.178" endtime="20230815 08:09:37.210"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), "Travelling for work")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.210" level="TRACE">Arguments: [ '//span[contains(text(), "Travelling for work")]' ]</msg>
<msg timestamp="20230815 08:09:37.210" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:09:37.284" level="DEBUG">Clicked element: '//span[contains(text(), "Travelling for work")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:09:37.285" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:37.210" endtime="20230815 08:09:37.285"/>
</kw>
<msg timestamp="20230815 08:09:37.285" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:09:36.249" endtime="20230815 08:09:37.285"/>
</kw>
<kw name="Click Save and Sign Button and Sign if Required" library="booking">
<msg timestamp="20230815 08:09:37.285" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Item Enabled" library="common">
<var>${forceSignature}</var>
<doc>Checks if an item is true/false in config, by default checks for forceSSN</doc>
<msg timestamp="20230815 08:09:37.285" level="TRACE">Arguments: [ ${item}='forceSSN' ]</msg>
<kw name="Get Config Item" library="Helpers">
<var>${isItem}</var>
<arg>${url}</arg>
<arg>${item}</arg>
<msg timestamp="20230815 08:09:37.286" level="TRACE">Arguments: [ 'https://test4.omenahotels.com/en' | 'forceSSN' ]</msg>
<msg timestamp="20230815 08:09:37.563" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:09:37.563" level="INFO">${isItem} = True</msg>
<status status="PASS" starttime="20230815 08:09:37.285" endtime="20230815 08:09:37.563"/>
</kw>
<msg timestamp="20230815 08:09:37.564" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:09:37.564" level="INFO">${forceSignature} = True</msg>
<status status="PASS" starttime="20230815 08:09:37.285" endtime="20230815 08:09:37.564"/>
</kw>
<if>
<branch type="IF" condition="'${forceSignature}' == 'True'">
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Save and Sign")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:09:37.564" level="TRACE">Arguments: [ '//button[contains(text(), "Save and Sign")]' ]</msg>
<msg timestamp="20230815 08:09:37.565" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:10:59.236" level="DEBUG">Unknown error received: Execution terminated by signal</msg>
<msg timestamp="20230815 08:10:59.241" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:10:59.242" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:10:59.243" level="FAIL">Execution terminated by signal</msg>
<msg timestamp="20230815 08:10:59.251" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1028, in __call__
    state, call, = self._blocking(request, timeout, metadata, credentials,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1017, in _blocking
    event = call.next_event()
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 338, in grpc._cython.cygrpc.SegregatedCall.next_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 169, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 163, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 78, in grpc._cython.cygrpc._latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 62, in grpc._cython.cygrpc._internal_latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 58, in grpc._cython.cygrpc._interpret_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/tag.pyx.pxi", line 71, in grpc._cython.cygrpc._BatchOperationTag.event
  File "src/python/grpcio/grpc/_cython/_cygrpc/operation.pyx.pxi", line 209, in grpc._cython.cygrpc.ReceiveStatusOnClientOperation.un_c
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 69, in grpc._cython.cygrpc._metadata
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 70, in genexpr
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 64, in grpc._cython.cygrpc._metadatum
  File "&lt;string&gt;", line 1, in &lt;lambda&gt;
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robot/running/signalhandler.py", line 40, in __call__
    self._stop_execution_gracefully()
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robot/running/signalhandler.py", line 43, in _stop_execution_gracefully
    raise ExecutionFailed('Execution terminated by signal', exit=True)
robot.errors.ExecutionFailed: Execution terminated by signal

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 165, in grpc_channel
    raise AssertionError(str(error))
AssertionError: Execution terminated by signal</msg>
<status status="FAIL" starttime="20230815 08:09:37.564" endtime="20230815 08:10:59.251"/>
</kw>
<kw name="Sign" library="booking">
<status status="NOT RUN" starttime="20230815 08:10:59.252" endtime="20230815 08:10:59.252"/>
</kw>
<status status="FAIL" starttime="20230815 08:09:37.564" endtime="20230815 08:10:59.252"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Save")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.252" endtime="20230815 08:10:59.253"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:10:59.252" endtime="20230815 08:10:59.253"/>
</branch>
<status status="FAIL" starttime="20230815 08:09:37.564" endtime="20230815 08:10:59.253"/>
</if>
<status status="FAIL" starttime="20230815 08:09:37.285" endtime="20230815 08:10:59.253"/>
</kw>
<kw name="Complete Check in" library="booking">
<status status="NOT RUN" starttime="20230815 08:10:59.254" endtime="20230815 08:10:59.254"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:09:36.128" endtime="20230815 08:10:59.254">Execution terminated by signal</status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Wait for Door Code and Verify Page" line="42">
<kw name="Wait Until Door Code is Available" library="checkin">
<msg timestamp="20230815 08:10:59.258" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>5 minutes</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:10:59.258" level="TRACE">Arguments: [ datetime.timedelta(seconds=300) ]</msg>
<status status="FAIL" starttime="20230815 08:10:59.258" endtime="20230815 08:10:59.258"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.258" endtime="20230815 08:10:59.258"/>
</kw>
<while condition="${availableInFound}">
<iter>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</kw>
<kw name="Reload" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Reloads current active page.</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</iter>
<status status="NOT RUN" starttime="20230815 08:10:59.258" endtime="20230815 08:10:59.259"/>
</while>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</kw>
<kw name="Check for Payment Ok Modal" library="checkin">
<doc>Workaround to closing modal until it is fixed</doc>
<status status="NOT RUN" starttime="20230815 08:10:59.259" endtime="20230815 08:10:59.259"/>
</kw>
<status status="FAIL" starttime="20230815 08:10:59.257" endtime="20230815 08:10:59.259"/>
</kw>
<kw name="Check Door Code and verify it is not empty" library="checkin">
<status status="NOT RUN" starttime="20230815 08:10:59.260" endtime="20230815 08:10:59.260"/>
</kw>
<kw name="Verify Page Elements after Check-in" library="checkin">
<status status="NOT RUN" starttime="20230815 08:10:59.260" endtime="20230815 08:10:59.260"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:10:59.257" endtime="20230815 08:10:59.261">Execution terminated by signal</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:10:59.274" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:10:59.314" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:10:59.314" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:10:59.314" level="TRACE">Return: None</msg>
<msg timestamp="20230815 08:10:59.314" level="FAIL">Error: browserContext.close: Target page, context or browser has been closed</msg>
<msg timestamp="20230815 08:10:59.315" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 146, in close_browser
    response = stub.CloseBrowser(Request.Empty())
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: browserContext.close: Target page, context or browser has been closed"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:10:59.27682+03:00", grpc_status:8, grpc_message:"Error: browserContext.close: Target page, context or browser has been closed"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 150, in close_browser
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: browserContext.close: Target page, context or browser has been closed</msg>
<status status="FAIL" starttime="20230815 08:10:59.274" endtime="20230815 08:10:59.315">Error: browserContext.close: Target page, context or browser has been closed</status>
</kw>
<doc>This is a test suite for booking a room and checking in online</doc>
<status status="FAIL" starttime="20230815 08:08:44.241" endtime="20230815 08:10:59.315">Suite teardown failed:
Error: browserContext.close: Target page, context or browser has been closed</status>
</suite>
<suite id="s1-s1-s1-s1-s2" name="BUI2-557" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s1-s2-t1" name="Create a new Booking" line="11">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.319" endtime="20230815 08:10:59.319">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-s2-t2" name="Add Someone Else as the Main Guest" line="25">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.319" endtime="20230815 08:10:59.319">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-s2-t3" name="Validation shows msg for fields marked" line="40">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.319" endtime="20230815 08:10:59.320">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-s2-t4" name="Showing imported passport when the National is not Finland" line="63">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.320" endtime="20230815 08:10:59.320">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" starttime="20230815 08:10:59.318" endtime="20230815 08:10:59.320"/>
</suite>
<status status="FAIL" starttime="20230815 08:08:44.240" endtime="20230815 08:10:59.320"/>
</suite>
<status status="FAIL" starttime="20230815 08:08:44.240" endtime="20230815 08:10:59.321"/>
</suite>
<suite id="s1-s1-s2" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression">
<suite id="s1-s1-s2-s1" name="Create Booking" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/create_booking.robot">
<test id="s1-s1-s2-s1-t1" name="Create A New Booking as" line="12">
<doc>A new booker opens the page and does a successful booking</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20230815 08:10:59.322" endtime="20230815 08:10:59.322">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s2-s1-t2" name="Confirm Email and Open Link" line="26">
<doc>A new booker receives an email with a link to modify the booking</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20230815 08:10:59.323" endtime="20230815 08:10:59.323">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:10:59.322" endtime="20230815 08:10:59.323"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.322" endtime="20230815 08:10:59.323"/>
</suite>
<status status="FAIL" starttime="20230815 08:08:44.239" endtime="20230815 08:10:59.324"/>
</suite>
<suite id="s1-s2" name="Customer Specific" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific">
<suite id="s1-s2-s1" name="Kensington Stay" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay">
<suite id="s1-s2-s1-s1" name="Confirm Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/confirm_bdc_booking.robot">
<test id="s1-s2-s1-s1-t1" name="Create A New Booking on Booking.com for a later date and verify Emails" line="15">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.325" endtime="20230815 08:10:59.325">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s1-t2" name="Open Booking in MUI" line="18">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.325" endtime="20230815 08:10:59.326">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s1-t3" name="Cancel Booking in MUI" line="26">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.326" endtime="20230815 08:10:59.326">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:10:59.325" endtime="20230815 08:10:59.326"/>
</suite>
<suite id="s1-s2-s1-s2" name="Create Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bdc_booking.robot">
<test id="s1-s2-s1-s2-t1" name="Open BDC and Check for Availability" line="56">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.327" endtime="20230815 08:10:59.327">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t2" name="Create Reservation in BDC" line="60">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.327" endtime="20230815 08:10:59.327">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t3" name="Fill Contact Information and Payment Details" line="65">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.327" endtime="20230815 08:10:59.328">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t4" name="Verify Emails and Get Booking No" line="71">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.328" endtime="20230815 08:10:59.328">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:10:59.326" endtime="20230815 08:10:59.328"/>
</suite>
<suite id="s1-s2-s1-s3" name="Create Bui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bui_booking.robot">
<test id="s1-s2-s1-s3-t1" name="Open Kensington Stay Home Page" line="13">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.329" endtime="20230815 08:10:59.329">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t2" name="Open Menu and Click Book a Room" line="19">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.329" endtime="20230815 08:10:59.329">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t3" name="Verify Booking Page Elements" line="25">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.329" endtime="20230815 08:10:59.330">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t4" name="Create New Booking in KS" line="28">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.330" endtime="20230815 08:10:59.330">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t5" name="Verify Booking Complete" line="35">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.330" endtime="20230815 08:10:59.330">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying the Kensington Stay Home Page</doc>
<status status="FAIL" starttime="20230815 08:10:59.329" endtime="20230815 08:10:59.331"/>
</suite>
<suite id="s1-s2-s1-s4" name="Create Mui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_mui_booking.robot">
<test id="s1-s2-s1-s4-t1" name="Start Creating a new Booking in MUI" line="13">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.331" endtime="20230815 08:10:59.331">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:10:59.331" endtime="20230815 08:10:59.332"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.325" endtime="20230815 08:10:59.332"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.324" endtime="20230815 08:10:59.333"/>
</suite>
<suite id="s1-s3" name="MUI" source="/Users/sara/code/nelson-test-automation/testsuites/MUI">
<suite id="s1-s3-s1" name="Feature" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/feature">
<suite id="s1-s3-s1-s1" name="MUI-430" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/feature/MUI-430.robot">
<test id="s1-s3-s1-s1-t1" name="Filter all reservations with Check-in incomplete" line="11">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled on</doc>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.334" endtime="20230815 08:10:59.334">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s1-t2" name="Remove filter and find a reservation with Check-in complete" line="22">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled off</doc>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.334" endtime="20230815 08:10:59.334">Test execution stopped due to a fatal error.</status>
</test>
<doc>This file contains test cases for testing MUI-430.robot</doc>
<status status="FAIL" starttime="20230815 08:10:59.333" endtime="20230815 08:10:59.335"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.333" endtime="20230815 08:10:59.335"/>
</suite>
<suite id="s1-s3-s2" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression">
<suite id="s1-s3-s2-s1" name="Smoke" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/smoke.robot">
<test id="s1-s3-s2-s1-t1" name="Try Logging in without Password" line="10">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.336" endtime="20230815 08:10:59.336">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t2" name="Try Logging in without Username" line="14">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.336" endtime="20230815 08:10:59.336">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t3" name="Try Logging in with incorrect Password/Username combination" line="18">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.336" endtime="20230815 08:10:59.337">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t4" name="Log in with correct Username and Password" line="22">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.337" endtime="20230815 08:10:59.337">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t5" name="Verify Users Page" line="28">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.337" endtime="20230815 08:10:59.337">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t6" name="Verify User Profile" line="31">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.337" endtime="20230815 08:10:59.337">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s2-s1-t7" name="Log Out" line="34">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230815 08:10:59.337" endtime="20230815 08:10:59.338">Test execution stopped due to a fatal error.</status>
</test>
<doc>This file contains smoke tests for MUI</doc>
<status status="FAIL" starttime="20230815 08:10:59.335" endtime="20230815 08:10:59.338"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.335" endtime="20230815 08:10:59.338"/>
</suite>
<status status="FAIL" starttime="20230815 08:10:59.333" endtime="20230815 08:10:59.339"/>
</suite>
<doc>Argument file for running tests on Omena test4 environment (test4)</doc>
<status status="FAIL" starttime="20230815 08:08:44.231" endtime="20230815 08:10:59.339"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="35" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="7" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="13" skip="0">kensington_stay</stat>
<stat pass="0" fail="2" skip="0">smoke</stat>
<stat pass="0" fail="7" skip="0">smoke, booking, BUI2-556, online-checkin</stat>
</tag>
<suite>
<stat pass="0" fail="35" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="0" fail="13" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="0" fail="11" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="0" fail="11" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-556">Testsuites.BUI.Feature.Online Check In.BUI2-556</stat>
<stat pass="0" fail="4" skip="0" id="s1-s1-s1-s1-s2" name="BUI2-557">Testsuites.BUI.Feature.Online Check In.BUI2-557</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s2" name="Regression">Testsuites.BUI.Regression</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s2-s1" name="Create Booking">Testsuites.BUI.Regression.Create Booking</stat>
<stat pass="0" fail="13" skip="0" id="s1-s2" name="Customer Specific">Testsuites.Customer Specific</stat>
<stat pass="0" fail="13" skip="0" id="s1-s2-s1" name="Kensington Stay">Testsuites.Customer Specific.Kensington Stay</stat>
<stat pass="0" fail="3" skip="0" id="s1-s2-s1-s1" name="Confirm Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Confirm Bdc Booking</stat>
<stat pass="0" fail="4" skip="0" id="s1-s2-s1-s2" name="Create Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Create Bdc Booking</stat>
<stat pass="0" fail="5" skip="0" id="s1-s2-s1-s3" name="Create Bui Booking">Testsuites.Customer Specific.Kensington Stay.Create Bui Booking</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s1-s4" name="Create Mui Booking">Testsuites.Customer Specific.Kensington Stay.Create Mui Booking</stat>
<stat pass="0" fail="9" skip="0" id="s1-s3" name="MUI">Testsuites.MUI</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s1" name="Feature">Testsuites.MUI.Feature</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s1-s1" name="MUI-430">Testsuites.MUI.Feature.MUI-430</stat>
<stat pass="0" fail="7" skip="0" id="s1-s3-s2" name="Regression">Testsuites.MUI.Regression</stat>
<stat pass="0" fail="7" skip="0" id="s1-s3-s2-s1" name="Smoke">Testsuites.MUI.Regression.Smoke</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230815 08:08:44.501" level="WARN">Python-dotenv could not parse statement starting at line 17</msg>
<msg timestamp="20230815 08:08:44.501" level="WARN">Python-dotenv could not parse statement starting at line 19</msg>
<msg timestamp="20230815 08:08:44.501" level="WARN">Python-dotenv could not parse statement starting at line 20</msg>
</errors>
</robot>
