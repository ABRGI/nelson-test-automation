<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.12 on linux)" generated="20230709 07:05:31.725" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-556" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-556.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:05:32.750" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/758a07e2-c7a4-44dd-aa15-d552c994488d"}</msg>
<msg timestamp="20230709 07:05:33.318" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/758a07e2-c7a4-44dd-aa15-d552c994488d"}</msg>
<status status="PASS" starttime="20230709 07:05:32.750" endtime="20230709 07:05:33.319"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:05:33.322" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:05:33.319" endtime="20230709 07:05:33.322"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:05:33.323" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:05:33.375" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:05:33.375" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:05:33.323" endtime="20230709 07:05:33.375"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:05:37.372" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:05:33.376" endtime="20230709 07:05:37.372"/>
</kw>
<status status="PASS" starttime="20230709 07:05:32.749" endtime="20230709 07:05:37.373"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:05:37.373" endtime="20230709 07:05:37.382"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:05:37.390" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:05:37.383" endtime="20230709 07:05:37.390"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:05:37.457" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:05:37.457" level="INFO">${els} = ['element=d61f71a6-8d4d-4710-931c-90572d82e2e6']</msg>
<status status="PASS" starttime="20230709 07:05:37.391" endtime="20230709 07:05:37.457"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:05:37.458" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:05:37.458" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:05:37.458" endtime="20230709 07:05:37.458"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:05:37.459" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:05:37.459" endtime="20230709 07:05:37.459"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.458" endtime="20230709 07:05:37.459"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:05:37.459" endtime="20230709 07:05:37.459"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:05:37.459" endtime="20230709 07:05:37.459"/>
</branch>
<status status="PASS" starttime="20230709 07:05:37.458" endtime="20230709 07:05:37.459"/>
</if>
<status status="PASS" starttime="20230709 07:05:37.391" endtime="20230709 07:05:37.460"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:05:37.460" endtime="20230709 07:05:37.460"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:05:37.460" endtime="20230709 07:05:37.460"/>
</branch>
<status status="PASS" starttime="20230709 07:05:37.390" endtime="20230709 07:05:37.460"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:05:37.464" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:05:37.460" endtime="20230709 07:05:37.464"/>
</kw>
<msg timestamp="20230709 07:05:37.465" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:05:37.383" endtime="20230709 07:05:37.465"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:05:37.465" endtime="20230709 07:05:37.575"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.465" endtime="20230709 07:05:37.575"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:05:37.576" endtime="20230709 07:05:37.576"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:05:37.576" endtime="20230709 07:05:37.576"/>
</branch>
<status status="PASS" starttime="20230709 07:05:37.465" endtime="20230709 07:05:37.576"/>
</if>
<status status="PASS" starttime="20230709 07:05:37.383" endtime="20230709 07:05:37.576"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:05:37.579" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:05:37.577" endtime="20230709 07:05:37.579"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:05:37.580" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:05:37.579" endtime="20230709 07:05:37.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:05:37.580" endtime="20230709 07:05:37.580"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.576" endtime="20230709 07:05:37.581"/>
</kw>
<status status="PASS" starttime="20230709 07:05:32.748" endtime="20230709 07:05:37.582"/>
</kw>
<test id="s1-s1-s1-s1-s1-t1" name="Select Hotel, Dates and Guests" line="14">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:05:37.584" endtime="20230709 07:05:37.584"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:05:37.584" endtime="20230709 07:05:37.584"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:05:37.585" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230709 07:05:37.584" endtime="20230709 07:05:37.585"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:05:37.585" endtime="20230709 07:05:37.721"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:05:37.731" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230709 07:05:37.722" endtime="20230709 07:05:37.731"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.721" endtime="20230709 07:05:37.731"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:05:37.731" endtime="20230709 07:05:37.908"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:05:37.922" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230709 07:05:37.908" endtime="20230709 07:05:37.922"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.584" endtime="20230709 07:05:37.922"/>
</branch>
<status status="PASS" starttime="20230709 07:05:37.584" endtime="20230709 07:05:37.922"/>
</if>
<status status="PASS" starttime="20230709 07:05:37.583" endtime="20230709 07:05:37.922"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:05:37.924" level="INFO"/>
<status status="PASS" starttime="20230709 07:05:37.923" endtime="20230709 07:05:37.924"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.923" endtime="20230709 07:05:37.924"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:05:37.925" endtime="20230709 07:05:37.926"/>
</kw>
<status status="PASS" starttime="20230709 07:05:37.924" endtime="20230709 07:05:37.926"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="PASS" starttime="20230709 07:05:37.582" endtime="20230709 07:05:37.926"/>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Check Available Rooms and Select a Standard Room" line="19">
<kw name="Click Book Button">
<msg timestamp="20230709 07:05:37.939" level="FAIL">No keyword with name 'Click Book Button' found. Did you try using keyword 'Browser.Click' and forgot to use enough whitespace between keyword and arguments?</msg>
<status status="FAIL" starttime="20230709 07:05:37.939" endtime="20230709 07:05:37.939"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<status status="NOT RUN" starttime="20230709 07:05:37.940" endtime="20230709 07:05:37.940"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:05:37.930" endtime="20230709 07:05:37.940">No keyword with name 'Click Book Button' found. Did you try using keyword 'Browser.Click' and forgot to use enough whitespace between keyword and arguments?</status>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Continue to Extras and Select Join for Free" line="23">
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230709 07:07:08.129" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230709 07:07:08.129" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:07:08.129" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230709 07:05:37.944" endtime="20230709 07:07:08.154"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.154" endtime="20230709 07:07:08.154"/>
</kw>
<status status="FAIL" starttime="20230709 07:05:37.943" endtime="20230709 07:07:08.155"/>
</kw>
<kw name="Continue to Payment" library="booking">
<status status="NOT RUN" starttime="20230709 07:07:08.155" endtime="20230709 07:07:08.155"/>
</kw>
<kw name="Select Join for Free" library="booking">
<status status="NOT RUN" starttime="20230709 07:07:08.156" endtime="20230709 07:07:08.156"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:05:37.943" endtime="20230709 07:07:08.156">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Fill in Booker Contact Information" line="28">
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230709 07:07:08.554" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230709 07:07:08.163" endtime="20230709 07:07:08.588"/>
</kw>
<status status="FAIL" starttime="20230709 07:07:08.163" endtime="20230709 07:07:08.588"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.589" endtime="20230709 07:07:08.589"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.589" endtime="20230709 07:07:08.589"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.589" endtime="20230709 07:07:08.589"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.590" endtime="20230709 07:07:08.590"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.590" endtime="20230709 07:07:08.590"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.590" endtime="20230709 07:07:08.590"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.590" endtime="20230709 07:07:08.590"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.591" endtime="20230709 07:07:08.591"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:07:08.591" endtime="20230709 07:07:08.591"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:07:08.591" endtime="20230709 07:07:08.591"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:07:08.591" endtime="20230709 07:07:08.591"/>
</branch>
<status status="NOT RUN" starttime="20230709 07:07:08.590" endtime="20230709 07:07:08.591"/>
</if>
<status status="FAIL" starttime="20230709 07:07:08.163" endtime="20230709 07:07:08.592"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230709 07:07:08.592" endtime="20230709 07:07:08.592"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:07:08.162" endtime="20230709 07:07:08.592">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Pay using Web Bank and Nordea" line="32">
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230709 07:08:38.752" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230709 07:08:38.752" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:08:38.752" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230709 07:07:08.597" endtime="20230709 07:08:38.753"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:08:38.753" endtime="20230709 07:08:38.753"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:08:38.754" endtime="20230709 07:08:38.754"/>
</kw>
<status status="FAIL" starttime="20230709 07:07:08.596" endtime="20230709 07:08:38.754"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230709 07:08:38.755" endtime="20230709 07:08:38.755"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:07:08.596" endtime="20230709 07:08:38.755">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Check In Online" line="36">
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:10:08.919" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230709 07:10:08.919" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:10:08.919" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230709 07:08:38.760" endtime="20230709 07:10:08.920"/>
</kw>
<status status="FAIL" starttime="20230709 07:08:38.759" endtime="20230709 07:10:08.921"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:10:08.921" endtime="20230709 07:10:08.921"/>
</kw>
<status status="FAIL" starttime="20230709 07:08:38.759" endtime="20230709 07:10:08.922"/>
</kw>
<kw name="Fill Check in Slide" library="booking">
<status status="NOT RUN" starttime="20230709 07:10:08.922" endtime="20230709 07:10:08.922"/>
</kw>
<kw name="Click Save and Sign Button and Sign if Required" library="booking">
<status status="NOT RUN" starttime="20230709 07:10:08.922" endtime="20230709 07:10:08.922"/>
</kw>
<kw name="Complete Check in" library="booking">
<status status="NOT RUN" starttime="20230709 07:10:08.922" endtime="20230709 07:10:08.922"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:08:38.758" endtime="20230709 07:10:08.923">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Wait for Door Code and Verify Page" line="42">
<kw name="Wait Until Door Code is Available" library="checkin">
<kw name="Set Browser Timeout" library="Browser">
<arg>5 minutes</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:10:08.929" level="INFO">Set timeout to: 300000</msg>
<status status="PASS" starttime="20230709 07:10:08.927" endtime="20230709 07:10:08.929"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:10:08.934" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:10:08.932" endtime="20230709 07:10:08.935"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:10:18.940" level="INFO">Found 0 Locators successfully.</msg>
<msg timestamp="20230709 07:10:18.941" level="INFO">${els} = []</msg>
<status status="PASS" starttime="20230709 07:10:08.935" endtime="20230709 07:10:18.941"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:10:18.941" level="INFO">Length is 0</msg>
<msg timestamp="20230709 07:10:18.941" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230709 07:10:18.941" endtime="20230709 07:10:18.941"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:10:18.942" endtime="20230709 07:10:18.942"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:10:18.942" endtime="20230709 07:10:18.942"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:10:18.943" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230709 07:10:18.942" endtime="20230709 07:10:18.943"/>
</kw>
<status status="PASS" starttime="20230709 07:10:18.942" endtime="20230709 07:10:18.943"/>
</branch>
<status status="PASS" starttime="20230709 07:10:18.942" endtime="20230709 07:10:18.943"/>
</if>
<status status="PASS" starttime="20230709 07:10:08.935" endtime="20230709 07:10:18.943"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:10:18.943" endtime="20230709 07:10:18.943"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:10:18.943" endtime="20230709 07:10:18.943"/>
</branch>
<status status="PASS" starttime="20230709 07:10:08.935" endtime="20230709 07:10:18.943"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:10:18.946" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:10:18.944" endtime="20230709 07:10:18.946"/>
</kw>
<msg timestamp="20230709 07:10:18.947" level="INFO">${availableInFound} = False</msg>
<status status="PASS" starttime="20230709 07:10:08.929" endtime="20230709 07:10:18.947"/>
</kw>
<while condition="${availableInFound}">
<iter>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230709 07:10:18.947" endtime="20230709 07:10:18.947"/>
</kw>
<kw name="Reload" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Reloads current active page.</doc>
<status status="NOT RUN" starttime="20230709 07:10:18.947" endtime="20230709 07:10:18.947"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230709 07:10:18.948" endtime="20230709 07:10:18.948"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:10:18.947" endtime="20230709 07:10:18.948"/>
</iter>
<status status="NOT RUN" starttime="20230709 07:10:18.947" endtime="20230709 07:10:18.948"/>
</while>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:10:18.948" endtime="20230709 07:10:18.948"/>
</kw>
<kw name="Check for Payment Ok Modal" library="checkin">
<doc>Workaround to closing modal until it is fixed</doc>
<kw name="Is Element Visible" library="common">
<var>${modalIsVisible}</var>
<arg>//section[contains(@class, 'chakra')]</arg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230709 07:10:19.202" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230709 07:10:18.949" endtime="20230709 07:10:19.202"/>
</kw>
<msg timestamp="20230709 07:10:19.202" level="INFO">${modalIsVisible} = False</msg>
<status status="PASS" starttime="20230709 07:10:18.949" endtime="20230709 07:10:19.202"/>
</kw>
<if>
<branch type="IF" condition="${modalIsVisible}">
<kw name="Click" library="Browser">
<arg>//button[contains(text(),'Ok')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:10:19.203" endtime="20230709 07:10:19.203"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:10:19.203" endtime="20230709 07:10:19.203"/>
</branch>
<status status="PASS" starttime="20230709 07:10:19.202" endtime="20230709 07:10:19.203"/>
</if>
<status status="PASS" starttime="20230709 07:10:18.949" endtime="20230709 07:10:19.203"/>
</kw>
<status status="PASS" starttime="20230709 07:10:08.926" endtime="20230709 07:10:19.203"/>
</kw>
<kw name="Check Door Code and verify it is not empty" library="checkin">
<kw name="Get Text" library="Browser">
<var>${doorCode}</var>
<arg>//*[contains(text(), "Door code")]/following-sibling::*</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230709 07:11:49.361" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230709 07:11:49.361" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:11:49.362" level="FAIL">TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230709 07:10:19.204" endtime="20230709 07:11:49.362"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230709 07:11:49.363" endtime="20230709 07:11:49.363"/>
</kw>
<if>
<branch type="IF" condition="${availableInFound} != 'True'">
<kw name="Should Be String" library="String">
<arg>${doorCode}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="NOT RUN" starttime="20230709 07:11:49.363" endtime="20230709 07:11:49.363"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:49.363" endtime="20230709 07:11:49.363"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Door code is not visible</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230709 07:11:49.364" endtime="20230709 07:11:49.364"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:49.363" endtime="20230709 07:11:49.364"/>
</branch>
<status status="NOT RUN" starttime="20230709 07:11:49.363" endtime="20230709 07:11:49.364"/>
</if>
<status status="FAIL" starttime="20230709 07:10:19.204" endtime="20230709 07:11:49.364"/>
</kw>
<kw name="Verify Page Elements after Check-in" library="checkin">
<status status="NOT RUN" starttime="20230709 07:11:49.365" endtime="20230709 07:11:49.365"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230709 07:10:08.926" endtime="20230709 07:11:49.365">TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:11:49.587" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:11:49.372" endtime="20230709 07:11:49.587"/>
</kw>
<doc>This is a test suite for booking a room and checking in online</doc>
<status status="FAIL" starttime="20230709 07:05:31.750" endtime="20230709 07:11:49.587"/>
</suite>
<suite id="s1-s1-s1-s1-s2" name="BUI2-557" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s1-s2-t1" name="Create a new Booking" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:11:49.611" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6d5f3f14-f2f6-4dca-844c-614c0f08873e"}</msg>
<msg timestamp="20230709 07:11:50.139" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/6d5f3f14-f2f6-4dca-844c-614c0f08873e"}</msg>
<status status="PASS" starttime="20230709 07:11:49.610" endtime="20230709 07:11:50.139"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:11:50.143" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:11:50.140" endtime="20230709 07:11:50.143"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:11:50.144" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:11:50.207" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:11:50.207" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:11:50.143" endtime="20230709 07:11:50.208"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:11:52.960" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:11:50.208" endtime="20230709 07:11:52.960"/>
</kw>
<status status="PASS" starttime="20230709 07:11:49.610" endtime="20230709 07:11:52.960"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:11:52.961" endtime="20230709 07:11:53.688"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:11:53.691" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:11:53.689" endtime="20230709 07:11:53.691"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:11:53.733" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:11:53.734" level="INFO">${els} = ['element=1653e93b-e7d0-46c8-9887-d18683966b03']</msg>
<status status="PASS" starttime="20230709 07:11:53.692" endtime="20230709 07:11:53.734"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:11:53.734" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:11:53.734" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:11:53.734" endtime="20230709 07:11:53.734"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:11:53.735" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:11:53.735" endtime="20230709 07:11:53.735"/>
</kw>
<status status="PASS" starttime="20230709 07:11:53.735" endtime="20230709 07:11:53.735"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:11:53.735" endtime="20230709 07:11:53.735"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:53.735" endtime="20230709 07:11:53.736"/>
</branch>
<status status="PASS" starttime="20230709 07:11:53.734" endtime="20230709 07:11:53.736"/>
</if>
<status status="PASS" starttime="20230709 07:11:53.692" endtime="20230709 07:11:53.736"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:11:53.736" endtime="20230709 07:11:53.736"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:53.736" endtime="20230709 07:11:53.736"/>
</branch>
<status status="PASS" starttime="20230709 07:11:53.691" endtime="20230709 07:11:53.736"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:11:53.739" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:11:53.736" endtime="20230709 07:11:53.739"/>
</kw>
<msg timestamp="20230709 07:11:53.739" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:11:53.689" endtime="20230709 07:11:53.739"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:11:53.740" endtime="20230709 07:11:53.812"/>
</kw>
<status status="PASS" starttime="20230709 07:11:53.739" endtime="20230709 07:11:53.812"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:11:53.813" endtime="20230709 07:11:53.813"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:53.812" endtime="20230709 07:11:53.813"/>
</branch>
<status status="PASS" starttime="20230709 07:11:53.739" endtime="20230709 07:11:53.813"/>
</if>
<status status="PASS" starttime="20230709 07:11:53.688" endtime="20230709 07:11:53.813"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:11:53.816" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:11:53.814" endtime="20230709 07:11:53.816"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:11:53.817" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:11:53.817" endtime="20230709 07:11:53.818"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:11:53.818" endtime="20230709 07:11:53.819"/>
</kw>
<status status="PASS" starttime="20230709 07:11:53.813" endtime="20230709 07:11:53.819"/>
</kw>
<status status="PASS" starttime="20230709 07:11:49.609" endtime="20230709 07:11:53.819"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:11:53.820" endtime="20230709 07:11:53.820"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:53.820" endtime="20230709 07:11:53.820"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:11:53.820" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230709 07:11:53.820" endtime="20230709 07:11:53.820"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:11:53.821" endtime="20230709 07:11:53.914"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:11:53.922" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230709 07:11:53.915" endtime="20230709 07:11:53.923"/>
</kw>
<status status="PASS" starttime="20230709 07:11:53.915" endtime="20230709 07:11:53.923"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:11:53.923" endtime="20230709 07:11:54.209"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:11:54.240" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230709 07:11:54.209" endtime="20230709 07:11:54.241"/>
</kw>
<status status="PASS" starttime="20230709 07:11:53.820" endtime="20230709 07:11:54.241"/>
</branch>
<status status="PASS" starttime="20230709 07:11:53.819" endtime="20230709 07:11:54.241"/>
</if>
<status status="PASS" starttime="20230709 07:11:53.819" endtime="20230709 07:11:54.241"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:11:54.244" level="INFO"/>
<status status="PASS" starttime="20230709 07:11:54.242" endtime="20230709 07:11:54.244"/>
</kw>
<status status="PASS" starttime="20230709 07:11:54.241" endtime="20230709 07:11:54.244"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:11:54.245" endtime="20230709 07:11:54.246"/>
</kw>
<status status="PASS" starttime="20230709 07:11:54.244" endtime="20230709 07:11:54.246"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:11:54.251" level="INFO">${url} = https://test4.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230709 07:11:54.248" endtime="20230709 07:11:54.251"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230709 07:11:54.252" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230709 07:11:54.252" endtime="20230709 07:11:54.252"/>
</kw>
<msg timestamp="20230709 07:11:54.252" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230709 07:11:54.251" endtime="20230709 07:11:54.252"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:11:54.253" endtime="20230709 07:11:54.253"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:11:54.253" endtime="20230709 07:11:54.253"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:11:54.254" endtime="20230709 07:11:54.730"/>
</kw>
<status status="PASS" starttime="20230709 07:11:54.253" endtime="20230709 07:11:54.730"/>
</branch>
<status status="PASS" starttime="20230709 07:11:54.252" endtime="20230709 07:11:54.730"/>
</if>
<status status="PASS" starttime="20230709 07:11:54.246" endtime="20230709 07:11:54.730"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:11:57.955" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230709 07:11:54.731" endtime="20230709 07:11:57.955"/>
</kw>
<status status="PASS" starttime="20230709 07:11:54.731" endtime="20230709 07:11:57.956"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230709 07:11:58.208" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230709 07:11:57.956" endtime="20230709 07:11:58.208"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230709 07:11:58.209" endtime="20230709 07:11:58.209"/>
</kw>
<status status="PASS" starttime="20230709 07:11:54.730" endtime="20230709 07:11:58.209"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:11:58.210" endtime="20230709 07:12:03.688"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:05.045" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:03.689" endtime="20230709 07:12:05.045"/>
</kw>
<status status="PASS" starttime="20230709 07:12:03.688" endtime="20230709 07:12:05.045"/>
</kw>
<status status="PASS" starttime="20230709 07:11:58.209" endtime="20230709 07:12:05.046"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:12:05.055" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:12:05.055" level="INFO">${elements} = ['element=aa0ce4ea-d396-4942-9fcd-acf686651741']</msg>
<status status="PASS" starttime="20230709 07:12:05.047" endtime="20230709 07:12:05.055"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:12:05.056" level="INFO">${first_element} = element=aa0ce4ea-d396-4942-9fcd-acf686651741</msg>
<status status="PASS" starttime="20230709 07:12:05.056" endtime="20230709 07:12:05.056"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:05.056" endtime="20230709 07:12:05.180"/>
</kw>
<status status="PASS" starttime="20230709 07:12:05.046" endtime="20230709 07:12:05.181"/>
</kw>
<status status="PASS" starttime="20230709 07:12:05.046" endtime="20230709 07:12:05.181"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:05.182" endtime="20230709 07:12:06.643"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:06.768" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:06.644" endtime="20230709 07:12:06.768"/>
</kw>
<status status="PASS" starttime="20230709 07:12:06.644" endtime="20230709 07:12:06.769"/>
</kw>
<status status="PASS" starttime="20230709 07:12:05.182" endtime="20230709 07:12:06.769"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:06.770" endtime="20230709 07:12:07.026"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:07.039" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:07.026" endtime="20230709 07:12:07.039"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.026" endtime="20230709 07:12:07.039"/>
</kw>
<status status="PASS" starttime="20230709 07:12:06.769" endtime="20230709 07:12:07.039"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:07.040" endtime="20230709 07:12:07.259"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:07.308" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:07.259" endtime="20230709 07:12:07.309"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.259" endtime="20230709 07:12:07.309"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.040" endtime="20230709 07:12:07.309"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:07.310" endtime="20230709 07:12:07.541"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:07.761" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:07.542" endtime="20230709 07:12:07.761"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.541" endtime="20230709 07:12:07.762"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.309" endtime="20230709 07:12:07.762"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:07.763" endtime="20230709 07:12:07.935"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:12:07.958" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:12:07.936" endtime="20230709 07:12:07.958"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.935" endtime="20230709 07:12:07.959"/>
</kw>
<status status="PASS" starttime="20230709 07:12:07.762" endtime="20230709 07:12:07.959"/>
</kw>
<status status="PASS" starttime="20230709 07:12:05.181" endtime="20230709 07:12:07.959"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230709 07:12:08.353" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230709 07:12:07.960" endtime="20230709 07:12:08.354"/>
</kw>
<status status="FAIL" starttime="20230709 07:12:07.960" endtime="20230709 07:12:08.355"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.355" endtime="20230709 07:12:08.355"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.355" endtime="20230709 07:12:08.355"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.355" endtime="20230709 07:12:08.356"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.356" endtime="20230709 07:12:08.356"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.356" endtime="20230709 07:12:08.356"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.356" endtime="20230709 07:12:08.356"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.356" endtime="20230709 07:12:08.356"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.357" endtime="20230709 07:12:08.357"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:12:08.357" endtime="20230709 07:12:08.357"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:12:08.357" endtime="20230709 07:12:08.357"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:12:08.357" endtime="20230709 07:12:08.357"/>
</branch>
<status status="NOT RUN" starttime="20230709 07:12:08.357" endtime="20230709 07:12:08.357"/>
</if>
<status status="FAIL" starttime="20230709 07:12:07.959" endtime="20230709 07:12:08.358"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230709 07:12:08.358" endtime="20230709 07:12:08.358"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230709 07:12:08.358" endtime="20230709 07:12:08.358"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230709 07:12:08.359" endtime="20230709 07:12:08.359"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:12:08.906" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:12:08.359" endtime="20230709 07:12:08.906"/>
</kw>
<status status="FAIL" starttime="20230709 07:11:49.609" endtime="20230709 07:12:08.906">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s2-t2" name="Add Someone Else as the Main Guest" line="25">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:12:08.911" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/26611365-ef37-490c-ab3f-3beb9d68bb88"}</msg>
<msg timestamp="20230709 07:12:09.447" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/26611365-ef37-490c-ab3f-3beb9d68bb88"}</msg>
<status status="PASS" starttime="20230709 07:12:08.911" endtime="20230709 07:12:09.447"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:12:09.447" endtime="20230709 07:12:09.448"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:12:09.448" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:12:09.500" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:12:09.500" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:12:09.448" endtime="20230709 07:12:09.500"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:12:11.883" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:12:09.501" endtime="20230709 07:12:11.883"/>
</kw>
<status status="PASS" starttime="20230709 07:12:08.910" endtime="20230709 07:12:11.884"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:12:11.884" endtime="20230709 07:12:13.170"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:12:13.174" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:12:13.172" endtime="20230709 07:12:13.174"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:12:13.217" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:12:13.217" level="INFO">${els} = ['element=a54393ad-fea5-4499-b368-3f69855b6a9a']</msg>
<status status="PASS" starttime="20230709 07:12:13.174" endtime="20230709 07:12:13.217"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:12:13.218" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:12:13.218" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:12:13.218" endtime="20230709 07:12:13.218"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:12:13.219" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:12:13.219" endtime="20230709 07:12:13.219"/>
</kw>
<status status="PASS" starttime="20230709 07:12:13.218" endtime="20230709 07:12:13.219"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:12:13.219" endtime="20230709 07:12:13.219"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:12:13.219" endtime="20230709 07:12:13.219"/>
</branch>
<status status="PASS" starttime="20230709 07:12:13.218" endtime="20230709 07:12:13.219"/>
</if>
<status status="PASS" starttime="20230709 07:12:13.174" endtime="20230709 07:12:13.219"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:12:13.220" endtime="20230709 07:12:13.220"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:12:13.220" endtime="20230709 07:12:13.220"/>
</branch>
<status status="PASS" starttime="20230709 07:12:13.174" endtime="20230709 07:12:13.220"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:12:13.222" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:12:13.220" endtime="20230709 07:12:13.222"/>
</kw>
<msg timestamp="20230709 07:12:13.223" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:12:13.171" endtime="20230709 07:12:13.223"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:12:13.223" endtime="20230709 07:12:13.297"/>
</kw>
<status status="PASS" starttime="20230709 07:12:13.223" endtime="20230709 07:12:13.298"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:12:13.298" endtime="20230709 07:12:13.298"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:12:13.298" endtime="20230709 07:12:13.298"/>
</branch>
<status status="PASS" starttime="20230709 07:12:13.223" endtime="20230709 07:12:13.298"/>
</if>
<status status="PASS" starttime="20230709 07:12:13.171" endtime="20230709 07:12:13.298"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:12:13.301" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:12:13.299" endtime="20230709 07:12:13.301"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:12:13.301" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:12:13.301" endtime="20230709 07:12:13.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:12:13.302" endtime="20230709 07:12:13.302"/>
</kw>
<status status="PASS" starttime="20230709 07:12:13.299" endtime="20230709 07:12:13.302"/>
</kw>
<status status="PASS" starttime="20230709 07:12:08.910" endtime="20230709 07:12:13.302"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:13:43.493" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230709 07:13:43.493" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:13:43.493" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230709 07:12:13.303" endtime="20230709 07:13:43.494"/>
</kw>
<status status="FAIL" starttime="20230709 07:12:13.303" endtime="20230709 07:13:43.495"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:13:43.495" endtime="20230709 07:13:43.495"/>
</kw>
<status status="FAIL" starttime="20230709 07:12:13.302" endtime="20230709 07:13:43.496"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.496" endtime="20230709 07:13:43.496"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.496" endtime="20230709 07:13:43.496"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.496" endtime="20230709 07:13:43.496"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230709 07:13:43.496" endtime="20230709 07:13:43.496"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.497" endtime="20230709 07:13:43.497"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${False}</arg>
<status status="NOT RUN" starttime="20230709 07:13:43.497" endtime="20230709 07:13:43.497"/>
</kw>
<kw name="Open Edit booker info" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.497" endtime="20230709 07:13:43.497"/>
</kw>
<kw name="Verify All information is disbled" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.497" endtime="20230709 07:13:43.497"/>
</kw>
<kw name="Check Add organization check box" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.497" endtime="20230709 07:13:43.497"/>
</kw>
<kw name="Fill organization info" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.498" endtime="20230709 07:13:43.498"/>
</kw>
<kw name="Verify all information are save" library="booking">
<status status="NOT RUN" starttime="20230709 07:13:43.498" endtime="20230709 07:13:43.498"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:13:44.004" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:13:43.498" endtime="20230709 07:13:44.005"/>
</kw>
<status status="FAIL" starttime="20230709 07:12:08.909" endtime="20230709 07:13:44.005">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s2-t3" name="Validation shows msg for fields marked" line="39">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:13:44.010" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/2aff9850-b1be-477e-bea2-bd713e039ceb"}</msg>
<msg timestamp="20230709 07:13:44.567" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/2aff9850-b1be-477e-bea2-bd713e039ceb"}</msg>
<status status="PASS" starttime="20230709 07:13:44.009" endtime="20230709 07:13:44.567"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:13:44.568" endtime="20230709 07:13:44.568"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:13:44.569" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:13:44.599" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:13:44.599" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:13:44.568" endtime="20230709 07:13:44.599"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:13:46.957" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:13:44.600" endtime="20230709 07:13:46.957"/>
</kw>
<status status="PASS" starttime="20230709 07:13:44.009" endtime="20230709 07:13:46.958"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:13:46.958" endtime="20230709 07:13:48.548"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:13:48.551" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:13:48.549" endtime="20230709 07:13:48.551"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:13:48.605" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:13:48.606" level="INFO">${els} = ['element=c1602b9b-cb0f-4caa-8a83-c54799ec4b25']</msg>
<status status="PASS" starttime="20230709 07:13:48.551" endtime="20230709 07:13:48.606"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:13:48.606" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:13:48.606" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:13:48.606" endtime="20230709 07:13:48.606"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:13:48.607" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:13:48.607" endtime="20230709 07:13:48.607"/>
</kw>
<status status="PASS" starttime="20230709 07:13:48.607" endtime="20230709 07:13:48.607"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:13:48.607" endtime="20230709 07:13:48.607"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:13:48.607" endtime="20230709 07:13:48.607"/>
</branch>
<status status="PASS" starttime="20230709 07:13:48.606" endtime="20230709 07:13:48.608"/>
</if>
<status status="PASS" starttime="20230709 07:13:48.551" endtime="20230709 07:13:48.608"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:13:48.608" endtime="20230709 07:13:48.608"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:13:48.608" endtime="20230709 07:13:48.608"/>
</branch>
<status status="PASS" starttime="20230709 07:13:48.551" endtime="20230709 07:13:48.608"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:13:48.612" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:13:48.608" endtime="20230709 07:13:48.612"/>
</kw>
<msg timestamp="20230709 07:13:48.612" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:13:48.548" endtime="20230709 07:13:48.612"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:48.613" endtime="20230709 07:13:48.700"/>
</kw>
<status status="PASS" starttime="20230709 07:13:48.612" endtime="20230709 07:13:48.701"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:13:48.701" endtime="20230709 07:13:48.701"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:13:48.701" endtime="20230709 07:13:48.701"/>
</branch>
<status status="PASS" starttime="20230709 07:13:48.612" endtime="20230709 07:13:48.701"/>
</if>
<status status="PASS" starttime="20230709 07:13:48.548" endtime="20230709 07:13:48.701"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:13:48.704" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:13:48.702" endtime="20230709 07:13:48.704"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:13:48.705" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:13:48.704" endtime="20230709 07:13:48.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:13:48.705" endtime="20230709 07:13:48.705"/>
</kw>
<status status="PASS" starttime="20230709 07:13:48.702" endtime="20230709 07:13:48.705"/>
</kw>
<status status="PASS" starttime="20230709 07:13:44.008" endtime="20230709 07:13:48.705"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:13:48.706" endtime="20230709 07:13:48.706"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:13:48.706" endtime="20230709 07:13:48.706"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:13:48.707" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230709 07:13:48.707" endtime="20230709 07:13:48.707"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:48.707" endtime="20230709 07:13:48.799"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:13:48.807" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230709 07:13:48.799" endtime="20230709 07:13:48.807"/>
</kw>
<status status="PASS" starttime="20230709 07:13:48.799" endtime="20230709 07:13:48.808"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:48.808" endtime="20230709 07:13:49.082"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:13:49.139" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230709 07:13:49.082" endtime="20230709 07:13:49.139"/>
</kw>
<status status="PASS" starttime="20230709 07:13:48.707" endtime="20230709 07:13:49.139"/>
</branch>
<status status="PASS" starttime="20230709 07:13:48.706" endtime="20230709 07:13:49.139"/>
</if>
<status status="PASS" starttime="20230709 07:13:48.706" endtime="20230709 07:13:49.140"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:13:49.141" level="INFO"/>
<status status="PASS" starttime="20230709 07:13:49.140" endtime="20230709 07:13:49.141"/>
</kw>
<status status="PASS" starttime="20230709 07:13:49.140" endtime="20230709 07:13:49.142"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:13:49.142" endtime="20230709 07:13:49.144"/>
</kw>
<status status="PASS" starttime="20230709 07:13:49.142" endtime="20230709 07:13:49.144"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:13:49.149" level="INFO">${url} = https://test4.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230709 07:13:49.145" endtime="20230709 07:13:49.149"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230709 07:13:49.151" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230709 07:13:49.151" endtime="20230709 07:13:49.151"/>
</kw>
<msg timestamp="20230709 07:13:49.151" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230709 07:13:49.149" endtime="20230709 07:13:49.152"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:13:49.152" endtime="20230709 07:13:49.152"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:13:49.152" endtime="20230709 07:13:49.152"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:49.152" endtime="20230709 07:13:49.524"/>
</kw>
<status status="PASS" starttime="20230709 07:13:49.152" endtime="20230709 07:13:49.524"/>
</branch>
<status status="PASS" starttime="20230709 07:13:49.152" endtime="20230709 07:13:49.524"/>
</if>
<status status="PASS" starttime="20230709 07:13:49.145" endtime="20230709 07:13:49.525"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:13:52.454" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230709 07:13:49.526" endtime="20230709 07:13:52.455"/>
</kw>
<status status="PASS" starttime="20230709 07:13:49.525" endtime="20230709 07:13:52.455"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230709 07:13:52.708" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230709 07:13:52.455" endtime="20230709 07:13:52.708"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230709 07:13:52.709" endtime="20230709 07:13:52.709"/>
</kw>
<status status="PASS" starttime="20230709 07:13:49.525" endtime="20230709 07:13:52.709"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:52.710" endtime="20230709 07:13:58.184"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:13:59.538" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230709 07:13:58.185" endtime="20230709 07:13:59.538"/>
</kw>
<status status="PASS" starttime="20230709 07:13:58.184" endtime="20230709 07:13:59.538"/>
</kw>
<status status="PASS" starttime="20230709 07:13:52.710" endtime="20230709 07:13:59.538"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:13:59.557" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:13:59.558" level="INFO">${elements} = ['element=f00387dc-ce08-46f1-b7a2-0ee246e93cb7']</msg>
<status status="PASS" starttime="20230709 07:13:59.539" endtime="20230709 07:13:59.558"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:13:59.558" level="INFO">${first_element} = element=f00387dc-ce08-46f1-b7a2-0ee246e93cb7</msg>
<status status="PASS" starttime="20230709 07:13:59.558" endtime="20230709 07:13:59.558"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:59.558" endtime="20230709 07:13:59.680"/>
</kw>
<status status="PASS" starttime="20230709 07:13:59.539" endtime="20230709 07:13:59.680"/>
</kw>
<status status="PASS" starttime="20230709 07:13:59.539" endtime="20230709 07:13:59.680"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:13:59.681" endtime="20230709 07:14:01.646"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:01.844" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:01.647" endtime="20230709 07:14:01.845"/>
</kw>
<status status="PASS" starttime="20230709 07:14:01.646" endtime="20230709 07:14:01.845"/>
</kw>
<status status="PASS" starttime="20230709 07:13:59.681" endtime="20230709 07:14:01.845"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:01.846" endtime="20230709 07:14:02.049"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:02.063" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:02.050" endtime="20230709 07:14:02.063"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.049" endtime="20230709 07:14:02.064"/>
</kw>
<status status="PASS" starttime="20230709 07:14:01.845" endtime="20230709 07:14:02.064"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:02.064" endtime="20230709 07:14:02.225"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:02.237" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:02.226" endtime="20230709 07:14:02.237"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.225" endtime="20230709 07:14:02.238"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.064" endtime="20230709 07:14:02.238"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:02.239" endtime="20230709 07:14:02.400"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:02.513" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:02.401" endtime="20230709 07:14:02.513"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.401" endtime="20230709 07:14:02.514"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.238" endtime="20230709 07:14:02.514"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:02.514" endtime="20230709 07:14:02.688"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:02.746" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:02.689" endtime="20230709 07:14:02.747"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.688" endtime="20230709 07:14:02.747"/>
</kw>
<status status="PASS" starttime="20230709 07:14:02.514" endtime="20230709 07:14:02.747"/>
</kw>
<status status="PASS" starttime="20230709 07:13:59.680" endtime="20230709 07:14:02.747"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230709 07:14:03.145" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230709 07:14:02.748" endtime="20230709 07:14:03.146"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:02.748" endtime="20230709 07:14:03.146"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.147" endtime="20230709 07:14:03.147"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.147" endtime="20230709 07:14:03.147"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.147" endtime="20230709 07:14:03.147"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.148" endtime="20230709 07:14:03.148"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.148" endtime="20230709 07:14:03.148"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.148" endtime="20230709 07:14:03.148"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.148" endtime="20230709 07:14:03.148"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.149" endtime="20230709 07:14:03.149"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:03.149" endtime="20230709 07:14:03.149"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230709 07:14:03.149" endtime="20230709 07:14:03.149"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:03.149" endtime="20230709 07:14:03.149"/>
</branch>
<status status="NOT RUN" starttime="20230709 07:14:03.148" endtime="20230709 07:14:03.149"/>
</if>
<status status="FAIL" starttime="20230709 07:14:02.748" endtime="20230709 07:14:03.150"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.150" endtime="20230709 07:14:03.150"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.150" endtime="20230709 07:14:03.150"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.150" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.151" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.151" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.151" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Verify msg The field is required" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.151" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Fill invalid phone format" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.151" endtime="20230709 07:14:03.151"/>
</kw>
<kw name="Verify msg &quot;Invalid phone number!&quot;" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.152" endtime="20230709 07:14:03.152"/>
</kw>
<kw name="Fill invalid SSN" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.152" endtime="20230709 07:14:03.152"/>
</kw>
<kw name="Verify msg &quot;Please check! This is not a Finnish social security number&quot;" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:03.152" endtime="20230709 07:14:03.152"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:14:03.686" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:14:03.152" endtime="20230709 07:14:03.686"/>
</kw>
<status status="FAIL" starttime="20230709 07:13:44.008" endtime="20230709 07:14:03.686">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s1-s1-s1-s2-t4" name="Showing imported passport when the National is not Finland" line="62">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:03.691" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/a25f3013-5a09-466a-b5ae-698cb80ab3db"}</msg>
<msg timestamp="20230709 07:14:04.228" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/a25f3013-5a09-466a-b5ae-698cb80ab3db"}</msg>
<status status="PASS" starttime="20230709 07:14:03.690" endtime="20230709 07:14:04.228"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:14:04.229" endtime="20230709 07:14:04.229"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:04.230" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:04.298" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:04.299" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:04.229" endtime="20230709 07:14:04.299"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:06.541" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:14:04.299" endtime="20230709 07:14:06.541"/>
</kw>
<status status="PASS" starttime="20230709 07:14:03.690" endtime="20230709 07:14:06.541"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:14:06.542" endtime="20230709 07:14:07.849"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:07.853" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:14:07.851" endtime="20230709 07:14:07.853"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:14:07.894" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:14:07.894" level="INFO">${els} = ['element=bbcdd64e-63b9-4d50-8c59-ab1b2a3d1d16']</msg>
<status status="PASS" starttime="20230709 07:14:07.853" endtime="20230709 07:14:07.894"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:14:07.894" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:14:07.894" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:14:07.894" endtime="20230709 07:14:07.894"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:14:07.895" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:14:07.895" endtime="20230709 07:14:07.895"/>
</kw>
<status status="PASS" starttime="20230709 07:14:07.895" endtime="20230709 07:14:07.895"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:14:07.896" endtime="20230709 07:14:07.896"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:07.895" endtime="20230709 07:14:07.896"/>
</branch>
<status status="PASS" starttime="20230709 07:14:07.895" endtime="20230709 07:14:07.896"/>
</if>
<status status="PASS" starttime="20230709 07:14:07.853" endtime="20230709 07:14:07.896"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:14:07.896" endtime="20230709 07:14:07.896"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:07.896" endtime="20230709 07:14:07.896"/>
</branch>
<status status="PASS" starttime="20230709 07:14:07.853" endtime="20230709 07:14:07.896"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:07.898" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:14:07.896" endtime="20230709 07:14:07.899"/>
</kw>
<msg timestamp="20230709 07:14:07.899" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:14:07.850" endtime="20230709 07:14:07.899"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:07.899" endtime="20230709 07:14:07.983"/>
</kw>
<status status="PASS" starttime="20230709 07:14:07.899" endtime="20230709 07:14:07.983"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:14:07.984" endtime="20230709 07:14:07.984"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:07.983" endtime="20230709 07:14:07.984"/>
</branch>
<status status="PASS" starttime="20230709 07:14:07.899" endtime="20230709 07:14:07.984"/>
</if>
<status status="PASS" starttime="20230709 07:14:07.850" endtime="20230709 07:14:07.984"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:14:07.987" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:14:07.985" endtime="20230709 07:14:07.987"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:14:07.987" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:14:07.987" endtime="20230709 07:14:07.987"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:14:07.987" endtime="20230709 07:14:07.988"/>
</kw>
<status status="PASS" starttime="20230709 07:14:07.984" endtime="20230709 07:14:07.988"/>
</kw>
<status status="PASS" starttime="20230709 07:14:03.690" endtime="20230709 07:14:07.988"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:14:07.989" endtime="20230709 07:14:07.989"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:07.989" endtime="20230709 07:14:07.989"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:14:07.989" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230709 07:14:07.989" endtime="20230709 07:14:07.989"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:07.990" endtime="20230709 07:14:08.085"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:08.093" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:08.086" endtime="20230709 07:14:08.094"/>
</kw>
<status status="PASS" starttime="20230709 07:14:08.085" endtime="20230709 07:14:08.094"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:08.094" endtime="20230709 07:14:08.348"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:08.410" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230709 07:14:08.348" endtime="20230709 07:14:08.410"/>
</kw>
<status status="PASS" starttime="20230709 07:14:07.989" endtime="20230709 07:14:08.410"/>
</branch>
<status status="PASS" starttime="20230709 07:14:07.988" endtime="20230709 07:14:08.410"/>
</if>
<status status="PASS" starttime="20230709 07:14:07.988" endtime="20230709 07:14:08.411"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:14:08.412" level="INFO"/>
<status status="PASS" starttime="20230709 07:14:08.411" endtime="20230709 07:14:08.412"/>
</kw>
<status status="PASS" starttime="20230709 07:14:08.411" endtime="20230709 07:14:08.413"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:08.413" endtime="20230709 07:14:08.418"/>
</kw>
<status status="PASS" starttime="20230709 07:14:08.413" endtime="20230709 07:14:08.418"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:14:08.428" level="INFO">${url} = https://test4.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230709 07:14:08.419" endtime="20230709 07:14:08.428"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230709 07:14:08.434" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230709 07:14:08.433" endtime="20230709 07:14:08.434"/>
</kw>
<msg timestamp="20230709 07:14:08.434" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230709 07:14:08.428" endtime="20230709 07:14:08.434"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:08.435" endtime="20230709 07:14:08.435"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:08.435" endtime="20230709 07:14:08.435"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230709 07:14:09.167" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Playwright process has been terminated with code 1</msg>
<msg timestamp="20230709 07:14:09.167" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:09.167" level="FAIL">Socket closed</msg>
<status status="FAIL" starttime="20230709 07:14:08.435" endtime="20230709 07:14:09.168"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:08.435" endtime="20230709 07:14:09.168"/>
</branch>
<status status="FAIL" starttime="20230709 07:14:08.434" endtime="20230709 07:14:09.168"/>
</if>
<status status="FAIL" starttime="20230709 07:14:08.418" endtime="20230709 07:14:09.169"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.169" endtime="20230709 07:14:09.169"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<status status="NOT RUN" starttime="20230709 07:14:09.169" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.170" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.170" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Fill contact info with the National not Finland" library="booking">
<doc>TBD: Use test data instead of hardcoded values</doc>
<status status="NOT RUN" starttime="20230709 07:14:09.170" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.170" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.170" endtime="20230709 07:14:09.170"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.171" endtime="20230709 07:14:09.171"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.171" endtime="20230709 07:14:09.171"/>
</kw>
<kw name="Fill Booker Info with the national is not Finland" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.171" endtime="20230709 07:14:09.171"/>
</kw>
<kw name="Click Save and Sign Button" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.171" endtime="20230709 07:14:09.171"/>
</kw>
<kw name="Verify booker information with national" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:09.171" endtime="20230709 07:14:09.171"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:14:09.172" level="FAIL">ConnectionError: Playwright process has been terminated with code 1</msg>
<status status="FAIL" starttime="20230709 07:14:09.172" endtime="20230709 07:14:09.173">ConnectionError: Playwright process has been terminated with code 1</status>
</kw>
<status status="FAIL" starttime="20230709 07:14:03.689" endtime="20230709 07:14:09.173">Socket closed

Also teardown failed:
ConnectionError: Playwright process has been terminated with code 1</status>
</test>
<status status="FAIL" starttime="20230709 07:11:49.593" endtime="20230709 07:14:09.174"/>
</suite>
<status status="FAIL" starttime="20230709 07:05:31.749" endtime="20230709 07:14:09.176"/>
</suite>
<status status="FAIL" starttime="20230709 07:05:31.747" endtime="20230709 07:14:09.178"/>
</suite>
<suite id="s1-s1-s2" name="Regression" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/regression">
<suite id="s1-s1-s2-s1" name="New Booking" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/regression/new_booking.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="Open New Browser To URL" library="common">
<arg>${url}</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:09.618" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/2977effa-cf73-49e0-b7a4-beaa7b4d2537"}</msg>
<msg timestamp="20230709 07:14:10.157" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/2977effa-cf73-49e0-b7a4-beaa7b4d2537"}</msg>
<status status="PASS" starttime="20230709 07:14:09.617" endtime="20230709 07:14:10.157"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:10.160" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:14:10.157" endtime="20230709 07:14:10.160"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:10.161" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:10.221" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:10.221" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:10.161" endtime="20230709 07:14:10.222"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:12.226" level="INFO">Successfully initialized new page object and opened url: https://test4.omenahotels.com/</msg>
<status status="PASS" starttime="20230709 07:14:10.222" endtime="20230709 07:14:12.226"/>
</kw>
<status status="PASS" starttime="20230709 07:14:09.617" endtime="20230709 07:14:12.227"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:14:12.227" endtime="20230709 07:14:12.873"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:12.876" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230709 07:14:12.874" endtime="20230709 07:14:12.877"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230709 07:14:12.927" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230709 07:14:12.927" level="INFO">${els} = ['element=3e9abda1-7e36-4b95-b702-051054b7c0bf']</msg>
<status status="PASS" starttime="20230709 07:14:12.877" endtime="20230709 07:14:12.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230709 07:14:12.928" level="INFO">Length is 1</msg>
<msg timestamp="20230709 07:14:12.928" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230709 07:14:12.927" endtime="20230709 07:14:12.928"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230709 07:14:12.929" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230709 07:14:12.928" endtime="20230709 07:14:12.929"/>
</kw>
<status status="PASS" starttime="20230709 07:14:12.928" endtime="20230709 07:14:12.929"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:14:12.929" endtime="20230709 07:14:12.929"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:12.929" endtime="20230709 07:14:12.929"/>
</branch>
<status status="PASS" starttime="20230709 07:14:12.928" endtime="20230709 07:14:12.929"/>
</if>
<status status="PASS" starttime="20230709 07:14:12.877" endtime="20230709 07:14:12.929"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230709 07:14:12.929" endtime="20230709 07:14:12.930"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:12.929" endtime="20230709 07:14:12.930"/>
</branch>
<status status="PASS" starttime="20230709 07:14:12.877" endtime="20230709 07:14:12.930"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:12.933" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230709 07:14:12.930" endtime="20230709 07:14:12.933"/>
</kw>
<msg timestamp="20230709 07:14:12.933" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230709 07:14:12.873" endtime="20230709 07:14:12.933"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:12.934" endtime="20230709 07:14:13.019"/>
</kw>
<status status="PASS" starttime="20230709 07:14:12.934" endtime="20230709 07:14:13.019"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:14:13.019" endtime="20230709 07:14:13.019"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:13.019" endtime="20230709 07:14:13.020"/>
</branch>
<status status="PASS" starttime="20230709 07:14:12.933" endtime="20230709 07:14:13.020"/>
</if>
<status status="PASS" starttime="20230709 07:14:12.873" endtime="20230709 07:14:13.020"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230709 07:14:13.023" level="INFO">${currentUrl} = https://test4.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230709 07:14:13.020" endtime="20230709 07:14:13.023"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230709 07:14:13.024" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230709 07:14:13.023" endtime="20230709 07:14:13.024"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230709 07:14:13.024" endtime="20230709 07:14:13.024"/>
</kw>
<status status="PASS" starttime="20230709 07:14:13.020" endtime="20230709 07:14:13.024"/>
</kw>
<status status="PASS" starttime="20230709 07:14:09.616" endtime="20230709 07:14:13.024"/>
</kw>
<test id="s1-s1-s2-s1-t1" name="Create A New Booking" line="12">
<kw name="Select Hotel" library="booking">
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:14:13.031" endtime="20230709 07:14:13.031"/>
</kw>
<status status="NOT RUN" starttime="20230709 07:14:13.031" endtime="20230709 07:14:13.031"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:14:13.032" level="INFO">Selecting Hotel: Lönnrotin</msg>
<status status="PASS" starttime="20230709 07:14:13.031" endtime="20230709 07:14:13.032"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:13.032" endtime="20230709 07:14:13.186"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:13.209" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:13.187" endtime="20230709 07:14:13.209"/>
</kw>
<status status="PASS" starttime="20230709 07:14:13.186" endtime="20230709 07:14:13.209"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:13.210" endtime="20230709 07:14:13.410"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:13.448" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state hidden</msg>
<status status="PASS" starttime="20230709 07:14:13.410" endtime="20230709 07:14:13.448"/>
</kw>
<status status="PASS" starttime="20230709 07:14:13.031" endtime="20230709 07:14:13.448"/>
</branch>
<status status="PASS" starttime="20230709 07:14:13.031" endtime="20230709 07:14:13.449"/>
</if>
<status status="PASS" starttime="20230709 07:14:13.030" endtime="20230709 07:14:13.449"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230709 07:14:13.451" level="INFO"/>
<status status="PASS" starttime="20230709 07:14:13.450" endtime="20230709 07:14:13.451"/>
</kw>
<status status="PASS" starttime="20230709 07:14:13.449" endtime="20230709 07:14:13.452"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:13.452" endtime="20230709 07:14:13.454"/>
</kw>
<status status="PASS" starttime="20230709 07:14:13.452" endtime="20230709 07:14:13.454"/>
</kw>
<kw name="Click Book Button">
<msg timestamp="20230709 07:14:13.474" level="FAIL">No keyword with name 'Click Book Button' found. Did you try using keyword 'Browser.Click' and forgot to use enough whitespace between keyword and arguments?</msg>
<status status="FAIL" starttime="20230709 07:14:13.473" endtime="20230709 07:14:13.474"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.474" endtime="20230709 07:14:13.474"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<status status="NOT RUN" starttime="20230709 07:14:13.474" endtime="20230709 07:14:13.474"/>
</kw>
<kw name="Continue to Payment" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.474" endtime="20230709 07:14:13.475"/>
</kw>
<kw name="Select Join for Free" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.475" endtime="20230709 07:14:13.475"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<status status="NOT RUN" starttime="20230709 07:14:13.475" endtime="20230709 07:14:13.475"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.475" endtime="20230709 07:14:13.475"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.475" endtime="20230709 07:14:13.477"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230709 07:14:13.477" endtime="20230709 07:14:13.477"/>
</kw>
<doc>A new booker opens the page and does a successful booking</doc>
<status status="FAIL" starttime="20230709 07:14:13.025" endtime="20230709 07:14:13.480">No keyword with name 'Click Book Button' found. Did you try using keyword 'Browser.Click' and forgot to use enough whitespace between keyword and arguments?</status>
</test>
<test id="s1-s1-s2-s1-t2" name="Confirm Email and Open Link" line="27">
<kw name="Get Variable Value" library="BuiltIn">
<var>${id}</var>
<arg>$ID</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230709 07:14:13.507" level="INFO">${id} = None</msg>
<status status="PASS" starttime="20230709 07:14:13.505" endtime="20230709 07:14:13.507"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${modify_link}</var>
<arg>${id}</arg>
<msg timestamp="20230709 07:14:13.507" level="FAIL">ApiValueError: Missing the required parameter `inbox_id` when calling `wait_for_matching_emails`</msg>
<status status="FAIL" starttime="20230709 07:14:13.507" endtime="20230709 07:14:13.508"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${modify_link}</arg>
<status status="NOT RUN" starttime="20230709 07:14:13.508" endtime="20230709 07:14:13.508"/>
</kw>
<doc>A new booker receives an email with a link to modify the booking</doc>
<status status="FAIL" starttime="20230709 07:14:13.496" endtime="20230709 07:14:13.508">ApiValueError: Missing the required parameter `inbox_id` when calling `wait_for_matching_emails`</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:14:14.077" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:14:13.524" endtime="20230709 07:14:14.077"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230709 07:14:09.181" endtime="20230709 07:14:14.077"/>
</suite>
<status status="FAIL" starttime="20230709 07:14:09.179" endtime="20230709 07:14:14.084"/>
</suite>
<status status="FAIL" starttime="20230709 07:05:31.746" endtime="20230709 07:14:14.086"/>
</suite>
<suite id="s1-s2" name="MUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI">
<suite id="s1-s2-s1" name="EC" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC">
<suite id="s1-s2-s1-s1" name="Example" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC/example.robot">
<test id="s1-s2-s1-s1-t1" name="Open MUI" line="15">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:14.110" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/faee9bfc-a1e3-4293-a0b3-0d51908355ab"}</msg>
<msg timestamp="20230709 07:14:14.640" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/faee9bfc-a1e3-4293-a0b3-0d51908355ab"}</msg>
<status status="PASS" starttime="20230709 07:14:14.109" endtime="20230709 07:14:14.640"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:14.643" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:14:14.641" endtime="20230709 07:14:14.643"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:14.644" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:14.687" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:14.687" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:14.643" endtime="20230709 07:14:14.687"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:15.318" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:15.319" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:15.319" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230709 07:14:14.687" endtime="20230709 07:14:15.319"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:14.109" endtime="20230709 07:14:15.320"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:15.321" endtime="20230709 07:14:15.321"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230709 07:14:15.321" endtime="20230709 07:14:15.321"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:14.109" endtime="20230709 07:14:15.322"/>
</kw>
<tag>exhibition_court</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20230709 07:14:14.107" endtime="20230709 07:14:15.322">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:14:17.584" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:14:15.389" endtime="20230709 07:14:17.584"/>
</kw>
<doc>This file contains keywords that are related to the booking process.</doc>
<status status="FAIL" starttime="20230709 07:14:14.091" endtime="20230709 07:14:17.584"/>
</suite>
<suite id="s1-s2-s1-s2" name="New Booking" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/EC/new_booking.robot">
<test id="s1-s2-s1-s2-t1" name="Create A New Booking on Booking.com for today and verify Emails" line="31">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:17.608" endtime="20230709 07:14:17.608"/>
</kw>
<msg timestamp="20230709 07:14:17.608" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230709 07:14:17.607" endtime="20230709 07:14:17.608"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:17.610" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/88210dbc-e357-4075-a7b5-c4ebc9a1b3ff"}</msg>
<msg timestamp="20230709 07:14:18.182" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/88210dbc-e357-4075-a7b5-c4ebc9a1b3ff"}</msg>
<status status="PASS" starttime="20230709 07:14:17.609" endtime="20230709 07:14:18.182"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:18.187" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:14:18.183" endtime="20230709 07:14:18.187"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:18.187" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:18.239" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:18.239" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:18.187" endtime="20230709 07:14:18.239"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:21.414" level="INFO">Successfully initialized new page object and opened url: https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1</msg>
<status status="PASS" starttime="20230709 07:14:18.240" endtime="20230709 07:14:21.415"/>
</kw>
<status status="PASS" starttime="20230709 07:14:17.608" endtime="20230709 07:14:21.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:21.415" endtime="20230709 07:14:21.416"/>
</kw>
<kw name="Get Selectors For Far Date" library="Helpers">
<var>${day}</var>
<var>${month}</var>
<msg timestamp="20230709 07:14:21.416" level="INFO">${day} = 7</msg>
<msg timestamp="20230709 07:14:21.416" level="INFO">${month} = 9</msg>
<status status="PASS" starttime="20230709 07:14:21.416" endtime="20230709 07:14:21.416"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-monthday</arg>
<arg>value</arg>
<arg>${day}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:21.417" endtime="20230709 07:14:21.560"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-yearmonth</arg>
<arg>value</arg>
<arg>2023-${month}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:21.560" endtime="20230709 07:14:21.949"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Check availability')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:21.950" endtime="20230709 07:14:24.038"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230709 07:14:24.038" endtime="20230709 07:14:27.307"/>
</kw>
<kw name="Is Element Visible" library="common">
<var>${reserveButton}</var>
<arg>//button[@name='book']</arg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230709 07:14:27.388" level="INFO">${isVisible} = True</msg>
<status status="PASS" starttime="20230709 07:14:27.308" endtime="20230709 07:14:27.388"/>
</kw>
<msg timestamp="20230709 07:14:27.388" level="INFO">${reserveButton} = True</msg>
<status status="PASS" starttime="20230709 07:14:27.307" endtime="20230709 07:14:27.388"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[contains(@id, 'unit')]</arg>
<arg>value</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:27.388" endtime="20230709 07:14:27.419"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'reserve')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:27.419" endtime="20230709 07:14:31.001"/>
</kw>
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:31.002" endtime="20230709 07:14:31.002"/>
</kw>
<msg timestamp="20230709 07:14:31.003" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230709 07:14:31.001" endtime="20230709 07:14:31.003"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstname</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:31.003" endtime="20230709 07:14:31.440"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:31.440" level="INFO">Fills the text 'Mos' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:31.440" endtime="20230709 07:14:31.507"/>
</kw>
<status status="PASS" starttime="20230709 07:14:31.003" endtime="20230709 07:14:31.507"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastname</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:31.508" endtime="20230709 07:14:31.654"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:31.655" level="INFO">Fills the text 'Def' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:31.655" endtime="20230709 07:14:31.809"/>
</kw>
<status status="PASS" starttime="20230709 07:14:31.507" endtime="20230709 07:14:31.809"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${id}@mailslurp.com</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:31.810" endtime="20230709 07:14:32.411"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:32.412" level="INFO">Fills the text '492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:32.411" endtime="20230709 07:14:32.519"/>
</kw>
<status status="PASS" starttime="20230709 07:14:31.809" endtime="20230709 07:14:32.519"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:32.519" endtime="20230709 07:14:32.520"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230709 07:14:32.520" level="INFO">${ID} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230709 07:14:32.520" endtime="20230709 07:14:32.520"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=remarks</arg>
<arg>testRemark</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:32.521" endtime="20230709 07:14:32.650"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:32.650" level="INFO">Fills the text 'testRemark' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:32.650" endtime="20230709 07:14:32.679"/>
</kw>
<status status="PASS" starttime="20230709 07:14:32.521" endtime="20230709 07:14:32.679"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[contains(@class, 'guest-name-input')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:32.679" endtime="20230709 07:14:32.816"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=firstname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:32.816" endtime="20230709 07:14:32.881"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=lastname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:32.881" endtime="20230709 07:14:33.029"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=email</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:33.030" endtime="20230709 07:14:33.136"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=bp-control-group__label--notstayer</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:33.136" endtime="20230709 07:14:33.217"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Final details')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:33.218" endtime="20230709 07:14:37.050"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//select[@data-phone-country]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:37.422" level="INFO">Waited for Element with selector //select[@data-phone-country] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:37.050" endtime="20230709 07:14:37.423"/>
</kw>
<status status="PASS" starttime="20230709 07:14:37.050" endtime="20230709 07:14:37.423"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[@data-phone-country]</arg>
<arg>value</arg>
<arg>FI</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:37.423" endtime="20230709 07:14:37.575"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=phone</arg>
<arg>${phone}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:37.576" level="INFO">Fills the text '0401234567' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:37.576" endtime="20230709 07:14:37.645"/>
</kw>
<kw name="Fill in Card Details">
<kw name="Click and Fill" library="common">
<arg>id=cc_name</arg>
<arg>Card Holder</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:37.646" endtime="20230709 07:14:37.897"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:37.898" level="INFO">Fills the text 'Card Holder' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:37.897" endtime="20230709 07:14:37.941"/>
</kw>
<status status="PASS" starttime="20230709 07:14:37.646" endtime="20230709 07:14:37.941"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_type</arg>
<arg>value</arg>
<arg>Visa</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:37.942" endtime="20230709 07:14:38.044"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_number</arg>
<arg>4153013999700321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:38.044" endtime="20230709 07:14:38.203"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:38.204" level="INFO">Fills the text '4153013999700321' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:38.204" endtime="20230709 07:14:38.232"/>
</kw>
<status status="PASS" starttime="20230709 07:14:38.044" endtime="20230709 07:14:38.232"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_month</arg>
<arg>value</arg>
<arg>11</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:38.233" endtime="20230709 07:14:38.308"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=ccYear</arg>
<arg>value</arg>
<arg>2023</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:38.309" endtime="20230709 07:14:38.366"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_cvc</arg>
<arg>321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:38.367" endtime="20230709 07:14:38.425"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230709 07:14:38.426" level="INFO">Fills the text '321' in the given field.</msg>
<status status="PASS" starttime="20230709 07:14:38.425" endtime="20230709 07:14:38.450"/>
</kw>
<status status="PASS" starttime="20230709 07:14:38.366" endtime="20230709 07:14:38.450"/>
</kw>
<status status="PASS" starttime="20230709 07:14:37.645" endtime="20230709 07:14:38.450"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[@name='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230709 07:14:38.450" endtime="20230709 07:14:38.548"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${longer}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:14:38.549" endtime="20230709 07:14:38.549"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(@class, 'bui-modal__close')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230709 07:14:53.827" level="INFO">Waited for Element with selector //button[contains(@class, 'bui-modal__close')] at state visible</msg>
<status status="PASS" starttime="20230709 07:14:38.550" endtime="20230709 07:14:53.827"/>
</kw>
<status status="PASS" starttime="20230709 07:14:38.549" endtime="20230709 07:14:53.828"/>
</kw>
<tag>exhibition_court</tag>
<status status="PASS" starttime="20230709 07:14:17.605" endtime="20230709 07:14:53.828"/>
</test>
<test id="s1-s2-s1-s2-t2" name="Verify Emails and Get Booking No" line="66">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230709 07:14:53.932" endtime="20230709 07:14:53.932"/>
</kw>
<msg timestamp="20230709 07:14:53.932" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230709 07:14:53.931" endtime="20230709 07:14:53.932"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${confirmationEmail}</var>
<arg>${id}</arg>
<arg>is confirmed</arg>
<msg timestamp="20230709 07:14:54.273" level="FAIL">TypeError: expected string or bytes-like object</msg>
<status status="FAIL" starttime="20230709 07:14:53.932" endtime="20230709 07:14:54.274"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${welcomeEmail}</var>
<arg>${id}</arg>
<arg>Welcome to Exhibition Court Hotel</arg>
<status status="NOT RUN" starttime="20230709 07:14:54.274" endtime="20230709 07:14:54.274"/>
</kw>
<kw name="Get Confirmation Number from Email" library="MailSlurp">
<var>${bookingNo}</var>
<arg>${welcomeEmail}</arg>
<status status="NOT RUN" starttime="20230709 07:14:54.274" endtime="20230709 07:14:54.274"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BDCNo}</arg>
<arg>${bookingNo}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230709 07:14:54.275" endtime="20230709 07:14:54.275"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230709 07:14:53.929" endtime="20230709 07:14:54.275">TypeError: expected string or bytes-like object</status>
</test>
<test id="s1-s2-s1-s2-t3" name="Create A New Booking on Booking.com for a later date and verify Emails" line="73">
<kw name="Pass Execution" library="BuiltIn">
<arg>TBD</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230709 07:14:54.282" level="INFO">Execution passed with message:
TBD</msg>
<status status="PASS" starttime="20230709 07:14:54.282" endtime="20230709 07:14:54.283"/>
</kw>
<tag>exhibition_court</tag>
<status status="PASS" starttime="20230709 07:14:54.280" endtime="20230709 07:14:54.283">TBD</status>
</test>
<test id="s1-s2-s1-s2-t4" name="Cancel Booking via BDC" line="76">
<kw name="Pass Execution" library="BuiltIn">
<arg>Can't cancel if done upon the next 24 hours</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230709 07:14:54.289" level="INFO">Execution passed with message:
Can't cancel if done upon the next 24 hours</msg>
<status status="PASS" starttime="20230709 07:14:54.288" endtime="20230709 07:14:54.289"/>
</kw>
<tag>exhibition_court</tag>
<status status="PASS" starttime="20230709 07:14:54.287" endtime="20230709 07:14:54.289">Can't cancel if done upon the next 24 hours</status>
</test>
<test id="s1-s2-s1-s2-t5" name="Open Booking in MUI" line="79">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:54.296" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/78d1afc5-6d08-45ca-a6b3-0f7879a69ea6"}</msg>
<msg timestamp="20230709 07:14:54.853" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/78d1afc5-6d08-45ca-a6b3-0f7879a69ea6"}</msg>
<status status="PASS" starttime="20230709 07:14:54.295" endtime="20230709 07:14:54.853"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:14:54.854" endtime="20230709 07:14:54.854"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:54.855" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:54.906" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:54.906" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:54.854" endtime="20230709 07:14:54.906"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:55.496" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.497" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:55.497" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230709 07:14:54.906" endtime="20230709 07:14:55.497"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:54.295" endtime="20230709 07:14:55.498"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:55.499" endtime="20230709 07:14:55.499"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230709 07:14:55.499" endtime="20230709 07:14:55.499"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:54.294" endtime="20230709 07:14:55.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>In Nelson, looking for booking: ${BDCNo}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.500" endtime="20230709 07:14:55.500"/>
</kw>
<kw name="Search with String" library="mui">
<arg>${BDCNo}</arg>
<status status="NOT RUN" starttime="20230709 07:14:55.500" endtime="20230709 07:14:55.500"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.500" endtime="20230709 07:14:55.500"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(text(), '${BDCNo}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.501" endtime="20230709 07:14:55.501"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.501" endtime="20230709 07:14:55.501"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230709 07:14:54.292" endtime="20230709 07:14:55.503">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s2-s1-s2-t6" name="Cancel Booking in MUI" line="87">
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Cancel')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230709 07:14:55.605" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.606" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:55.606" level="FAIL">Error: Could not find active page</msg>
<status status="FAIL" starttime="20230709 07:14:55.601" endtime="20230709 07:14:55.606"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Yes')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.606" endtime="20230709 07:14:55.607"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.607" endtime="20230709 07:14:55.607"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${status}</var>
<arg>//span[contains(@class, 'status')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.607" endtime="20230709 07:14:55.607"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>Cancelled</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.607" endtime="20230709 07:14:55.607"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230709 07:14:55.599" endtime="20230709 07:14:55.608">Error: Could not find active page</status>
</test>
<test id="s1-s2-s1-s2-t7" name="Start Creating a new Booking in MUI" line="94">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="mui">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:55.625" level="INFO">Switching browser to browser=44769c0c-3fdb-48d0-ae27-791f94fa53d8</msg>
<msg timestamp="20230709 07:14:55.627" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230709 07:14:55.627" level="INFO">Reusing existing browser with id: browser=44769c0c-3fdb-48d0-ae27-791f94fa53d8</msg>
<status status="PASS" starttime="20230709 07:14:55.625" endtime="20230709 07:14:55.627"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230709 07:14:55.628" endtime="20230709 07:14:55.628"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:55.629" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:55.696" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:55.696" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:55.628" endtime="20230709 07:14:55.696"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:55.916" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.917" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:55.918" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230709 07:14:55.697" endtime="20230709 07:14:55.918"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:55.624" endtime="20230709 07:14:55.919"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:55.920" endtime="20230709 07:14:55.920"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Exhibition</arg>
<status status="NOT RUN" starttime="20230709 07:14:55.920" endtime="20230709 07:14:55.921"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:55.623" endtime="20230709 07:14:55.924"/>
</kw>
<kw name="Open Reservations Page" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:55.924" endtime="20230709 07:14:55.924"/>
</kw>
<kw name="Click New Reservation Button" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:55.925" endtime="20230709 07:14:55.925"/>
</kw>
<kw name="Select Normal Reservation" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:55.925" endtime="20230709 07:14:55.925"/>
</kw>
<kw name="Switch Page" library="Browser">
<var>${previous}</var>
<arg>NEW</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.926" endtime="20230709 07:14:55.926"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="NOT RUN" starttime="20230709 07:14:55.926" endtime="20230709 07:14:55.926"/>
</kw>
<kw name="Create a successful booking and return UUID" library="booking">
<var>${uuid}</var>
<arg>True</arg>
<status status="NOT RUN" starttime="20230709 07:14:55.926" endtime="20230709 07:14:55.927"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230709 07:14:55.619" endtime="20230709 07:14:55.927">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:14:57.804" level="INFO">Closed all browsers</msg>
<status status="PASS" starttime="20230709 07:14:55.956" endtime="20230709 07:14:57.805"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230709 07:14:17.590" endtime="20230709 07:14:57.805"/>
</suite>
<status status="FAIL" starttime="20230709 07:14:14.089" endtime="20230709 07:14:57.810"/>
</suite>
<suite id="s1-s2-s2" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/feature">
<suite id="s1-s2-s2-s1" name="MUI-430" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/MUI/feature/MUI-430.robot">
<kw name="Open Browser to Nelson Portal and Login" library="mui" type="SETUP">
<kw name="Open Browser to Nelson Portal" library="mui">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230709 07:14:57.829" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/eb7879e5-07e3-4d95-9d07-a91369420046"}</msg>
<msg timestamp="20230709 07:14:58.357" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/browser/traces/eb7879e5-07e3-4d95-9d07-a91369420046"}</msg>
<status status="PASS" starttime="20230709 07:14:57.828" endtime="20230709 07:14:58.358"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230709 07:14:58.362" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230709 07:14:58.358" endtime="20230709 07:14:58.362"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230709 07:14:58.362" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230709 07:14:58.431" level="INFO">Successfully created context. </msg>
<msg timestamp="20230709 07:14:58.432" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230709 07:14:58.362" endtime="20230709 07:14:58.432"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230709 07:14:59.089" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:59.090" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test4/playwright-log.txt for additional details.</msg>
<msg timestamp="20230709 07:14:59.090" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230709 07:14:58.432" endtime="20230709 07:14:59.091"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:57.828" endtime="20230709 07:14:59.092"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230709 07:14:59.092" endtime="20230709 07:14:59.092"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>${environment}</arg>
<status status="NOT RUN" starttime="20230709 07:14:59.092" endtime="20230709 07:14:59.092"/>
</kw>
<status status="FAIL" starttime="20230709 07:14:57.828" endtime="20230709 07:14:59.093"/>
</kw>
<test id="s1-s2-s2-s1-t1" name="Filter Check in incomplete and open reservation" line="12">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled on</doc>
<status status="FAIL" starttime="20230709 07:14:59.093" endtime="20230709 07:14:59.096">Parent suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s2-s2-s1-t2" name="Remove filter and open a reservation" line="23">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled off</doc>
<status status="FAIL" starttime="20230709 07:14:59.105" endtime="20230709 07:14:59.107">Parent suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230709 07:15:01.302" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230709 07:14:59.117" endtime="20230709 07:15:01.302"/>
</kw>
<doc>This file contains test cases for testing MUI-430.robot</doc>
<status status="FAIL" starttime="20230709 07:14:57.813" endtime="20230709 07:15:01.303">Suite setup failed:
Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</suite>
<status status="FAIL" starttime="20230709 07:14:57.811" endtime="20230709 07:15:01.308"/>
</suite>
<status status="FAIL" starttime="20230709 07:14:14.088" endtime="20230709 07:15:01.310"/>
</suite>
<doc>Argument file for running tests on Omena test4 environment (test4)</doc>
<status status="FAIL" starttime="20230709 07:05:31.726" endtime="20230709 07:15:01.312"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="19" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="5" skip="0">exhibition_court</stat>
<stat pass="0" fail="1" skip="0">smoke</stat>
<stat pass="1" fail="6" skip="0">smoke, booking, BUI2-556, online-checkin</stat>
</tag>
<suite>
<stat pass="4" fail="19" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="1" fail="12" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="1" fail="10" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="1" fail="10" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="1" fail="6" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-556">Testsuites.BUI.Feature.Online Check In.BUI2-556</stat>
<stat pass="0" fail="4" skip="0" id="s1-s1-s1-s1-s2" name="BUI2-557">Testsuites.BUI.Feature.Online Check In.BUI2-557</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s2" name="Regression">Testsuites.BUI.Regression</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s2-s1" name="New Booking">Testsuites.BUI.Regression.New Booking</stat>
<stat pass="3" fail="7" skip="0" id="s1-s2" name="MUI">Testsuites.MUI</stat>
<stat pass="3" fail="5" skip="0" id="s1-s2-s1" name="EC">Testsuites.MUI.EC</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s1-s1" name="Example">Testsuites.MUI.EC.Example</stat>
<stat pass="3" fail="4" skip="0" id="s1-s2-s1-s2" name="New Booking">Testsuites.MUI.EC.New Booking</stat>
<stat pass="0" fail="2" skip="0" id="s1-s2-s2" name="Feature">Testsuites.MUI.Feature</stat>
<stat pass="0" fail="2" skip="0" id="s1-s2-s2-s1" name="MUI-430">Testsuites.MUI.Feature.MUI-430</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230709 07:14:09.167" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Playwright process has been terminated with code 1</msg>
<msg timestamp="20230709 07:14:09.174" level="ERROR">Calling method '_end_test' of listener 'Browser' failed: ConnectionError: Playwright process has been terminated with code 1</msg>
<msg timestamp="20230709 07:14:09.175" level="ERROR">Calling method '_end_suite' of listener 'Browser' failed: ConnectionError: Playwright process has been terminated with code 1</msg>
<msg timestamp="20230709 07:14:15.318" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.496" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.605" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:55.916" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230709 07:14:59.089" level="WARN">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
</errors>
</robot>
