<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.12 on linux)" generated="20230705 06:30:07.348" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-558" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-558.robot">
<test id="s1-s1-s1-s1-s1-t1" name="Verify Page title when marking someone else as a guest" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:30:08.452" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/498ee2cb-154e-492f-8379-e2c4b95475e2"}</msg>
<msg timestamp="20230705 06:30:09.291" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/498ee2cb-154e-492f-8379-e2c4b95475e2"}</msg>
<status status="PASS" starttime="20230705 06:30:08.451" endtime="20230705 06:30:09.292"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:30:09.296" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230705 06:30:09.292" endtime="20230705 06:30:09.296"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:30:09.297" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:30:09.380" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:30:09.380" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:30:09.296" endtime="20230705 06:30:09.381"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:30:16.650" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:30:09.381" endtime="20230705 06:30:16.650"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:30:16.651" endtime="20230705 06:30:17.866"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:30:17.870" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:30:17.867" endtime="20230705 06:30:17.870"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:30:17.921" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:30:17.922" level="INFO">${els} = ['element=6c101e89-2590-48b3-a843-7ab3157f5c82']</msg>
<status status="PASS" starttime="20230705 06:30:17.871" endtime="20230705 06:30:17.922"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:30:17.922" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:30:17.922" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:30:17.922" endtime="20230705 06:30:17.923"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:30:17.923" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:30:17.923" endtime="20230705 06:30:17.923"/>
</kw>
<status status="PASS" starttime="20230705 06:30:17.923" endtime="20230705 06:30:17.924"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:30:17.924" endtime="20230705 06:30:17.924"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:30:17.924" endtime="20230705 06:30:17.924"/>
</branch>
<status status="PASS" starttime="20230705 06:30:17.923" endtime="20230705 06:30:17.924"/>
</if>
<status status="PASS" starttime="20230705 06:30:17.871" endtime="20230705 06:30:17.925"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:30:17.925" endtime="20230705 06:30:17.925"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:30:17.925" endtime="20230705 06:30:17.925"/>
</branch>
<status status="PASS" starttime="20230705 06:30:17.871" endtime="20230705 06:30:17.925"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:30:17.928" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:30:17.925" endtime="20230705 06:30:17.929"/>
</kw>
<msg timestamp="20230705 06:30:17.929" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:30:17.867" endtime="20230705 06:30:17.929"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:17.930" endtime="20230705 06:30:18.016"/>
</kw>
<status status="PASS" starttime="20230705 06:30:17.929" endtime="20230705 06:30:18.016"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:30:18.017" endtime="20230705 06:30:18.017"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:30:18.016" endtime="20230705 06:30:18.017"/>
</branch>
<status status="PASS" starttime="20230705 06:30:17.929" endtime="20230705 06:30:18.017"/>
</if>
<status status="PASS" starttime="20230705 06:30:17.866" endtime="20230705 06:30:18.017"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:30:18.021" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:30:18.018" endtime="20230705 06:30:18.021"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:30:18.021" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:30:18.021" endtime="20230705 06:30:18.021"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:30:18.022" endtime="20230705 06:30:18.023"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.017" endtime="20230705 06:30:18.023"/>
</kw>
<status status="PASS" starttime="20230705 06:30:08.450" endtime="20230705 06:30:18.023"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:30:18.025" endtime="20230705 06:30:18.025"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:30:18.024" endtime="20230705 06:30:18.025"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:30:18.026" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:30:18.025" endtime="20230705 06:30:18.026"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:18.026" endtime="20230705 06:30:18.123"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:18.134" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:18.124" endtime="20230705 06:30:18.135"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.123" endtime="20230705 06:30:18.135"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:18.135" endtime="20230705 06:30:18.354"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:18.377" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:30:18.354" endtime="20230705 06:30:18.377"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.025" endtime="20230705 06:30:18.377"/>
</branch>
<status status="PASS" starttime="20230705 06:30:18.024" endtime="20230705 06:30:18.378"/>
</if>
<status status="PASS" starttime="20230705 06:30:18.024" endtime="20230705 06:30:18.378"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:30:18.379" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:30:18.379" endtime="20230705 06:30:18.379"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.378" endtime="20230705 06:30:18.379"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:30:18.381" endtime="20230705 06:30:18.381"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.379" endtime="20230705 06:30:18.382"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:18.382" endtime="20230705 06:30:19.356"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.382" endtime="20230705 06:30:19.357"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:24.200" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:19.358" endtime="20230705 06:30:24.200"/>
</kw>
<status status="PASS" starttime="20230705 06:30:19.358" endtime="20230705 06:30:24.201"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:30:24.454" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:30:24.201" endtime="20230705 06:30:24.454"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:24.454" endtime="20230705 06:30:24.455"/>
</kw>
<status status="PASS" starttime="20230705 06:30:19.357" endtime="20230705 06:30:24.455"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:24.456" endtime="20230705 06:30:28.981"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:30.034" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:28.982" endtime="20230705 06:30:30.034"/>
</kw>
<status status="PASS" starttime="20230705 06:30:28.981" endtime="20230705 06:30:30.034"/>
</kw>
<status status="PASS" starttime="20230705 06:30:24.455" endtime="20230705 06:30:30.034"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:30:30.058" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:30:30.059" level="INFO">${elements} = ['element=7003062d-9342-4a62-8a68-cb2a3a28f121']</msg>
<status status="PASS" starttime="20230705 06:30:30.039" endtime="20230705 06:30:30.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:30:30.060" level="INFO">${first_element} = element=7003062d-9342-4a62-8a68-cb2a3a28f121</msg>
<status status="PASS" starttime="20230705 06:30:30.059" endtime="20230705 06:30:30.060"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:30.060" endtime="20230705 06:30:30.324"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.035" endtime="20230705 06:30:30.324"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.035" endtime="20230705 06:30:30.324"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:30.325" endtime="20230705 06:30:32.202"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:32.217" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:32.203" endtime="20230705 06:30:32.217"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.203" endtime="20230705 06:30:32.217"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.325" endtime="20230705 06:30:32.217"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:32.218" endtime="20230705 06:30:32.459"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:32.485" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:32.460" endtime="20230705 06:30:32.485"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.459" endtime="20230705 06:30:32.485"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.218" endtime="20230705 06:30:32.485"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:32.486" endtime="20230705 06:30:32.719"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:32.941" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:32.720" endtime="20230705 06:30:32.941"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.720" endtime="20230705 06:30:32.941"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.486" endtime="20230705 06:30:32.941"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:32.942" endtime="20230705 06:30:33.133"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:33.156" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:33.134" endtime="20230705 06:30:33.157"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.134" endtime="20230705 06:30:33.157"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.942" endtime="20230705 06:30:33.157"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:33.158" endtime="20230705 06:30:33.400"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:33.420" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:33.401" endtime="20230705 06:30:33.420"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.400" endtime="20230705 06:30:33.421"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.158" endtime="20230705 06:30:33.421"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.324" endtime="20230705 06:30:33.421"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:33.422" endtime="20230705 06:30:33.637"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:33.638" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:33.637" endtime="20230705 06:30:33.736"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.422" endtime="20230705 06:30:33.737"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:33.737" endtime="20230705 06:30:34.008"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:34.009" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:34.008" endtime="20230705 06:30:34.090"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.737" endtime="20230705 06:30:34.090"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:34.091" endtime="20230705 06:30:34.333"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:34.334" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:34.334" endtime="20230705 06:30:34.463"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.090" endtime="20230705 06:30:34.463"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:34.464" endtime="20230705 06:30:34.606"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:34.606" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:34.606" endtime="20230705 06:30:34.651"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.463" endtime="20230705 06:30:34.651"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.421" endtime="20230705 06:30:34.651"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:34.652" endtime="20230705 06:30:34.868"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:34.868" endtime="20230705 06:30:35.009"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.652" endtime="20230705 06:30:35.009"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:35.010" endtime="20230705 06:30:35.106"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:35.107" endtime="20230705 06:30:35.257"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:35.257" endtime="20230705 06:30:37.449"/>
</kw>
<status status="PASS" starttime="20230705 06:30:35.009" endtime="20230705 06:30:37.449"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:46.007" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:37.450" endtime="20230705 06:30:46.007"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:46.008" endtime="20230705 06:30:50.189"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.450" endtime="20230705 06:30:50.190"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:53.371" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:50.191" endtime="20230705 06:30:53.371"/>
</kw>
<status status="PASS" starttime="20230705 06:30:50.190" endtime="20230705 06:30:53.372"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:53.391" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:53.373" endtime="20230705 06:30:53.391"/>
</kw>
<status status="PASS" starttime="20230705 06:30:53.373" endtime="20230705 06:30:53.391"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:53.391" endtime="20230705 06:30:53.525"/>
</kw>
<status status="PASS" starttime="20230705 06:30:53.372" endtime="20230705 06:30:53.525"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:30:53.594" level="INFO">Text: 'Booking number: 988977761'</msg>
<msg timestamp="20230705 06:30:53.594" level="INFO">${str} = Booking number: 988977761</msg>
<status status="PASS" starttime="20230705 06:30:53.526" endtime="20230705 06:30:53.594"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:30:53.594" endtime="20230705 06:30:53.595"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:30:53.596" level="INFO">${str} = Booking number: 988977761</msg>
<status status="PASS" starttime="20230705 06:30:53.595" endtime="20230705 06:30:53.596"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:30:53.596" level="INFO">${str} = Booking number: 988977761</msg>
<status status="PASS" starttime="20230705 06:30:53.596" endtime="20230705 06:30:53.596"/>
</kw>
<status status="PASS" starttime="20230705 06:30:53.525" endtime="20230705 06:30:53.597"/>
</kw>
<status status="PASS" starttime="20230705 06:30:50.190" endtime="20230705 06:30:53.597"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.450" endtime="20230705 06:30:53.597"/>
</kw>
<status status="PASS" starttime="20230705 06:30:18.023" endtime="20230705 06:30:53.597"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:53.617" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:53.598" endtime="20230705 06:30:53.618"/>
</kw>
<status status="PASS" starttime="20230705 06:30:53.598" endtime="20230705 06:30:53.618"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:53.618" endtime="20230705 06:30:54.109"/>
</kw>
<status status="PASS" starttime="20230705 06:30:53.597" endtime="20230705 06:30:54.109"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:54.110" endtime="20230705 06:30:54.982"/>
</kw>
<status status="PASS" starttime="20230705 06:30:54.110" endtime="20230705 06:30:54.982"/>
</kw>
<kw name="Edit guest popup change to &quot;Booker information&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[normalize-space()='Booker information' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:01.101" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:31:01.101" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:31:01.102" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[normalize-space()=\'Booker information\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:30:54.985" endtime="20230705 06:31:01.103"/>
</kw>
<msg timestamp="20230705 06:31:01.103" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:30:54.983" endtime="20230705 06:31:01.103"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:31:01.104" endtime="20230705 06:31:01.104"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:31:01.105" endtime="20230705 06:31:01.105"/>
</kw>
<status status="PASS" starttime="20230705 06:31:01.104" endtime="20230705 06:31:01.105"/>
</kw>
<status status="PASS" starttime="20230705 06:30:54.983" endtime="20230705 06:31:01.106"/>
</kw>
<status status="PASS" starttime="20230705 06:30:54.982" endtime="20230705 06:31:01.106"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:31:01.684" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:31:01.106" endtime="20230705 06:31:01.684"/>
</kw>
<status status="PASS" starttime="20230705 06:30:08.449" endtime="20230705 06:31:01.684"/>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Verify notification when marking someone else as a guest" line="17">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:31:01.689" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/034d049d-cf15-4e6d-abd3-492c940598cb"}</msg>
<msg timestamp="20230705 06:31:02.230" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/034d049d-cf15-4e6d-abd3-492c940598cb"}</msg>
<status status="PASS" starttime="20230705 06:31:01.688" endtime="20230705 06:31:02.230"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:31:02.231" endtime="20230705 06:31:02.231"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:31:02.232" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:31:02.294" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:31:02.294" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:31:02.231" endtime="20230705 06:31:02.294"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:31:08.174" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:31:02.295" endtime="20230705 06:31:08.174"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:31:08.174" endtime="20230705 06:31:09.349"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:09.353" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:31:09.351" endtime="20230705 06:31:09.353"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:31:09.397" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:31:09.398" level="INFO">${els} = ['element=0678db74-281b-41c4-ae82-69eafc696537']</msg>
<status status="PASS" starttime="20230705 06:31:09.354" endtime="20230705 06:31:09.398"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:31:09.398" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:31:09.399" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:31:09.398" endtime="20230705 06:31:09.399"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:31:09.400" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:31:09.399" endtime="20230705 06:31:09.400"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.399" endtime="20230705 06:31:09.400"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:09.400" endtime="20230705 06:31:09.400"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:09.400" endtime="20230705 06:31:09.400"/>
</branch>
<status status="PASS" starttime="20230705 06:31:09.399" endtime="20230705 06:31:09.400"/>
</if>
<status status="PASS" starttime="20230705 06:31:09.354" endtime="20230705 06:31:09.401"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:09.401" endtime="20230705 06:31:09.401"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:09.401" endtime="20230705 06:31:09.401"/>
</branch>
<status status="PASS" starttime="20230705 06:31:09.353" endtime="20230705 06:31:09.401"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:09.404" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:31:09.401" endtime="20230705 06:31:09.404"/>
</kw>
<msg timestamp="20230705 06:31:09.404" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:31:09.350" endtime="20230705 06:31:09.404"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:09.405" endtime="20230705 06:31:09.479"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.405" endtime="20230705 06:31:09.479"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:09.479" endtime="20230705 06:31:09.479"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:09.479" endtime="20230705 06:31:09.479"/>
</branch>
<status status="PASS" starttime="20230705 06:31:09.404" endtime="20230705 06:31:09.480"/>
</if>
<status status="PASS" starttime="20230705 06:31:09.350" endtime="20230705 06:31:09.480"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:31:09.484" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:31:09.481" endtime="20230705 06:31:09.484"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:31:09.485" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:31:09.484" endtime="20230705 06:31:09.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:31:09.485" endtime="20230705 06:31:09.485"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.480" endtime="20230705 06:31:09.486"/>
</kw>
<status status="PASS" starttime="20230705 06:31:01.688" endtime="20230705 06:31:09.486"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:09.488" endtime="20230705 06:31:09.488"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:09.488" endtime="20230705 06:31:09.488"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:09.489" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:31:09.489" endtime="20230705 06:31:09.489"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:09.489" endtime="20230705 06:31:09.582"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:09.590" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:09.583" endtime="20230705 06:31:09.590"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.582" endtime="20230705 06:31:09.590"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:09.591" endtime="20230705 06:31:09.820"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:09.853" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:31:09.821" endtime="20230705 06:31:09.854"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.488" endtime="20230705 06:31:09.854"/>
</branch>
<status status="PASS" starttime="20230705 06:31:09.488" endtime="20230705 06:31:09.854"/>
</if>
<status status="PASS" starttime="20230705 06:31:09.487" endtime="20230705 06:31:09.854"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:09.855" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:31:09.855" endtime="20230705 06:31:09.855"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.855" endtime="20230705 06:31:09.856"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:31:09.857" endtime="20230705 06:31:09.857"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.856" endtime="20230705 06:31:09.857"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:09.858" endtime="20230705 06:31:11.972"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.857" endtime="20230705 06:31:11.972"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:17.935" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:11.973" endtime="20230705 06:31:17.936"/>
</kw>
<status status="PASS" starttime="20230705 06:31:11.973" endtime="20230705 06:31:17.936"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:31:18.190" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:31:17.936" endtime="20230705 06:31:18.190"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:31:18.190" endtime="20230705 06:31:18.191"/>
</kw>
<status status="PASS" starttime="20230705 06:31:11.973" endtime="20230705 06:31:18.191"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:18.192" endtime="20230705 06:31:20.888"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:22.212" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:20.889" endtime="20230705 06:31:22.212"/>
</kw>
<status status="PASS" starttime="20230705 06:31:20.888" endtime="20230705 06:31:22.213"/>
</kw>
<status status="PASS" starttime="20230705 06:31:18.191" endtime="20230705 06:31:22.213"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:31:22.265" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:31:22.266" level="INFO">${elements} = ['element=95efa2ce-a91f-4670-b81e-7b6b2dec4327']</msg>
<status status="PASS" starttime="20230705 06:31:22.214" endtime="20230705 06:31:22.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:31:22.267" level="INFO">${first_element} = element=95efa2ce-a91f-4670-b81e-7b6b2dec4327</msg>
<status status="PASS" starttime="20230705 06:31:22.266" endtime="20230705 06:31:22.267"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:22.267" endtime="20230705 06:31:22.624"/>
</kw>
<status status="PASS" starttime="20230705 06:31:22.214" endtime="20230705 06:31:22.624"/>
</kw>
<status status="PASS" starttime="20230705 06:31:22.213" endtime="20230705 06:31:22.624"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:22.626" endtime="20230705 06:31:25.137"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:25.204" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:25.138" endtime="20230705 06:31:25.204"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.137" endtime="20230705 06:31:25.205"/>
</kw>
<status status="PASS" starttime="20230705 06:31:22.625" endtime="20230705 06:31:25.205"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:25.206" endtime="20230705 06:31:25.445"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:25.580" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:25.446" endtime="20230705 06:31:25.581"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.446" endtime="20230705 06:31:25.581"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.205" endtime="20230705 06:31:25.581"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:25.582" endtime="20230705 06:31:25.796"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:25.889" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:25.797" endtime="20230705 06:31:25.889"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.797" endtime="20230705 06:31:25.890"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.581" endtime="20230705 06:31:25.890"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:25.891" endtime="20230705 06:31:26.266"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:26.293" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:26.268" endtime="20230705 06:31:26.293"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.267" endtime="20230705 06:31:26.293"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.890" endtime="20230705 06:31:26.294"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:26.294" endtime="20230705 06:31:26.556"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:26.576" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:26.557" endtime="20230705 06:31:26.577"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.556" endtime="20230705 06:31:26.577"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.294" endtime="20230705 06:31:26.577"/>
</kw>
<status status="PASS" starttime="20230705 06:31:22.625" endtime="20230705 06:31:26.577"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:26.579" endtime="20230705 06:31:26.786"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:26.787" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:26.787" endtime="20230705 06:31:26.870"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.578" endtime="20230705 06:31:26.870"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:26.871" endtime="20230705 06:31:27.118"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:27.119" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:27.118" endtime="20230705 06:31:27.205"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.870" endtime="20230705 06:31:27.206"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:27.207" endtime="20230705 06:31:27.413"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:27.414" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:27.413" endtime="20230705 06:31:27.488"/>
</kw>
<status status="PASS" starttime="20230705 06:31:27.206" endtime="20230705 06:31:27.488"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:27.489" endtime="20230705 06:31:27.709"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:27.710" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:27.709" endtime="20230705 06:31:27.746"/>
</kw>
<status status="PASS" starttime="20230705 06:31:27.489" endtime="20230705 06:31:27.746"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.578" endtime="20230705 06:31:27.746"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:27.747" endtime="20230705 06:31:27.941"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:27.941" endtime="20230705 06:31:28.188"/>
</kw>
<status status="PASS" starttime="20230705 06:31:27.747" endtime="20230705 06:31:28.188"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:28.189" endtime="20230705 06:31:28.318"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:28.318" endtime="20230705 06:31:28.566"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:28.566" endtime="20230705 06:31:30.966"/>
</kw>
<status status="PASS" starttime="20230705 06:31:28.188" endtime="20230705 06:31:30.966"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:36.261" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:30.968" endtime="20230705 06:31:36.262"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:36.262" endtime="20230705 06:31:39.665"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.967" endtime="20230705 06:31:39.666"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:44.214" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:39.667" endtime="20230705 06:31:44.215"/>
</kw>
<status status="PASS" starttime="20230705 06:31:39.667" endtime="20230705 06:31:44.215"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:44.296" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:44.216" endtime="20230705 06:31:44.296"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.216" endtime="20230705 06:31:44.297"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:44.297" endtime="20230705 06:31:44.541"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.215" endtime="20230705 06:31:44.542"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:31:44.625" level="INFO">Text: 'Booking number: 456841539'</msg>
<msg timestamp="20230705 06:31:44.626" level="INFO">${str} = Booking number: 456841539</msg>
<status status="PASS" starttime="20230705 06:31:44.542" endtime="20230705 06:31:44.626"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:31:44.626" endtime="20230705 06:31:44.627"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:31:44.627" level="INFO">${str} = Booking number: 456841539</msg>
<status status="PASS" starttime="20230705 06:31:44.627" endtime="20230705 06:31:44.627"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:31:44.628" level="INFO">${str} = Booking number: 456841539</msg>
<status status="PASS" starttime="20230705 06:31:44.627" endtime="20230705 06:31:44.628"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.542" endtime="20230705 06:31:44.628"/>
</kw>
<status status="PASS" starttime="20230705 06:31:39.666" endtime="20230705 06:31:44.628"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.967" endtime="20230705 06:31:44.628"/>
</kw>
<status status="PASS" starttime="20230705 06:31:09.487" endtime="20230705 06:31:44.629"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:44.649" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:44.631" endtime="20230705 06:31:44.650"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.631" endtime="20230705 06:31:44.651"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:44.652" endtime="20230705 06:31:44.888"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.629" endtime="20230705 06:31:44.888"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:44.889" endtime="20230705 06:31:45.841"/>
</kw>
<status status="PASS" starttime="20230705 06:31:44.889" endtime="20230705 06:31:45.841"/>
</kw>
<kw name="Verify notification &quot;Before iniviting someone else to be the main guest in this room, you must fill in your own information&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[normalize-space()='Before inviting someone else to be the main guest in this room, you must fill in your own information.' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:51.962" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:31:51.963" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:31:51.963" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[normalize-space()=\'Before inviting someone else to be the main guest in this room, you must fill in your own information.\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:31:45.843" endtime="20230705 06:31:51.963"/>
</kw>
<msg timestamp="20230705 06:31:51.964" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:31:45.842" endtime="20230705 06:31:51.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:31:51.964" endtime="20230705 06:31:51.964"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:31:51.965" endtime="20230705 06:31:51.966"/>
</kw>
<status status="PASS" starttime="20230705 06:31:51.965" endtime="20230705 06:31:51.966"/>
</kw>
<status status="PASS" starttime="20230705 06:31:45.842" endtime="20230705 06:31:51.966"/>
</kw>
<status status="PASS" starttime="20230705 06:31:45.841" endtime="20230705 06:31:51.966"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:31:52.540" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:31:51.967" endtime="20230705 06:31:52.541"/>
</kw>
<status status="PASS" starttime="20230705 06:31:01.687" endtime="20230705 06:31:52.541"/>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Verify room name in Edit guest popup when marking someone else as a guest" line="23">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:31:52.546" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/0db58c1b-4b0c-40aa-af66-7853e89e1413"}</msg>
<msg timestamp="20230705 06:31:53.090" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/0db58c1b-4b0c-40aa-af66-7853e89e1413"}</msg>
<status status="PASS" starttime="20230705 06:31:52.545" endtime="20230705 06:31:53.090"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:31:53.091" endtime="20230705 06:31:53.091"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:31:53.092" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:31:53.126" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:31:53.126" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:31:53.092" endtime="20230705 06:31:53.126"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:31:57.395" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:31:53.127" endtime="20230705 06:31:57.395"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:31:57.396" endtime="20230705 06:31:58.526"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:58.530" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:31:58.527" endtime="20230705 06:31:58.530"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:31:58.578" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:31:58.578" level="INFO">${els} = ['element=ce1f62b8-e0dc-4391-bd7d-48d5b1579878']</msg>
<status status="PASS" starttime="20230705 06:31:58.531" endtime="20230705 06:31:58.578"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:31:58.579" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:31:58.579" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:31:58.579" endtime="20230705 06:31:58.579"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:31:58.580" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:31:58.580" endtime="20230705 06:31:58.580"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.579" endtime="20230705 06:31:58.580"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:58.581" endtime="20230705 06:31:58.581"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:58.580" endtime="20230705 06:31:58.581"/>
</branch>
<status status="PASS" starttime="20230705 06:31:58.579" endtime="20230705 06:31:58.581"/>
</if>
<status status="PASS" starttime="20230705 06:31:58.530" endtime="20230705 06:31:58.581"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:58.582" endtime="20230705 06:31:58.582"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:58.581" endtime="20230705 06:31:58.582"/>
</branch>
<status status="PASS" starttime="20230705 06:31:58.530" endtime="20230705 06:31:58.582"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:58.603" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:31:58.582" endtime="20230705 06:31:58.603"/>
</kw>
<msg timestamp="20230705 06:31:58.604" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:31:58.527" endtime="20230705 06:31:58.604"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:58.606" endtime="20230705 06:31:58.691"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.604" endtime="20230705 06:31:58.691"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:58.691" endtime="20230705 06:31:58.691"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:58.691" endtime="20230705 06:31:58.692"/>
</branch>
<status status="PASS" starttime="20230705 06:31:58.604" endtime="20230705 06:31:58.692"/>
</if>
<status status="PASS" starttime="20230705 06:31:58.526" endtime="20230705 06:31:58.692"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:31:58.699" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:31:58.693" endtime="20230705 06:31:58.699"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:31:58.699" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:31:58.699" endtime="20230705 06:31:58.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:31:58.700" endtime="20230705 06:31:58.700"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.692" endtime="20230705 06:31:58.700"/>
</kw>
<status status="PASS" starttime="20230705 06:31:52.544" endtime="20230705 06:31:58.700"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:58.702" endtime="20230705 06:31:58.702"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:58.702" endtime="20230705 06:31:58.702"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:58.703" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:31:58.703" endtime="20230705 06:31:58.703"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:58.703" endtime="20230705 06:31:58.796"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:58.806" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:58.797" endtime="20230705 06:31:58.806"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.797" endtime="20230705 06:31:58.806"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:58.807" endtime="20230705 06:31:59.024"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:59.069" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:31:59.025" endtime="20230705 06:31:59.069"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.702" endtime="20230705 06:31:59.070"/>
</branch>
<status status="PASS" starttime="20230705 06:31:58.702" endtime="20230705 06:31:59.070"/>
</if>
<status status="PASS" starttime="20230705 06:31:58.701" endtime="20230705 06:31:59.070"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:59.071" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:31:59.071" endtime="20230705 06:31:59.071"/>
</kw>
<status status="PASS" starttime="20230705 06:31:59.070" endtime="20230705 06:31:59.071"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:31:59.073" endtime="20230705 06:31:59.073"/>
</kw>
<status status="PASS" starttime="20230705 06:31:59.072" endtime="20230705 06:31:59.073"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:59.074" endtime="20230705 06:31:59.749"/>
</kw>
<status status="PASS" starttime="20230705 06:31:59.074" endtime="20230705 06:31:59.749"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:05.171" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:59.750" endtime="20230705 06:32:05.171"/>
</kw>
<status status="PASS" starttime="20230705 06:31:59.750" endtime="20230705 06:32:05.171"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:32:05.431" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:32:05.172" endtime="20230705 06:32:05.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:05.431" endtime="20230705 06:32:05.432"/>
</kw>
<status status="PASS" starttime="20230705 06:31:59.749" endtime="20230705 06:32:05.432"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:05.432" endtime="20230705 06:32:08.217"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:09.020" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:08.219" endtime="20230705 06:32:09.020"/>
</kw>
<status status="PASS" starttime="20230705 06:32:08.218" endtime="20230705 06:32:09.020"/>
</kw>
<status status="PASS" starttime="20230705 06:32:05.432" endtime="20230705 06:32:09.021"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:32:09.030" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:32:09.030" level="INFO">${elements} = ['element=95cb04ef-108e-405e-bfb8-ed412b2b36fa']</msg>
<status status="PASS" starttime="20230705 06:32:09.022" endtime="20230705 06:32:09.030"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:32:09.031" level="INFO">${first_element} = element=95cb04ef-108e-405e-bfb8-ed412b2b36fa</msg>
<status status="PASS" starttime="20230705 06:32:09.030" endtime="20230705 06:32:09.031"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:09.031" endtime="20230705 06:32:09.126"/>
</kw>
<status status="PASS" starttime="20230705 06:32:09.021" endtime="20230705 06:32:09.126"/>
</kw>
<status status="PASS" starttime="20230705 06:32:09.021" endtime="20230705 06:32:09.127"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:09.128" endtime="20230705 06:32:10.978"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:11.008" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:10.979" endtime="20230705 06:32:11.009"/>
</kw>
<status status="PASS" starttime="20230705 06:32:10.978" endtime="20230705 06:32:11.009"/>
</kw>
<status status="PASS" starttime="20230705 06:32:09.127" endtime="20230705 06:32:11.009"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:11.010" endtime="20230705 06:32:11.315"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:11.343" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:11.316" endtime="20230705 06:32:11.343"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.315" endtime="20230705 06:32:11.343"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.010" endtime="20230705 06:32:11.344"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:11.344" endtime="20230705 06:32:11.642"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:11.652" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:11.643" endtime="20230705 06:32:11.653"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.643" endtime="20230705 06:32:11.653"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.344" endtime="20230705 06:32:11.653"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:11.654" endtime="20230705 06:32:11.878"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:12.039" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:11.879" endtime="20230705 06:32:12.039"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.878" endtime="20230705 06:32:12.040"/>
</kw>
<status status="PASS" starttime="20230705 06:32:11.653" endtime="20230705 06:32:12.040"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.041" endtime="20230705 06:32:12.245"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:12.299" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:12.246" endtime="20230705 06:32:12.300"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.245" endtime="20230705 06:32:12.300"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.040" endtime="20230705 06:32:12.300"/>
</kw>
<status status="PASS" starttime="20230705 06:32:09.127" endtime="20230705 06:32:12.300"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.302" endtime="20230705 06:32:12.371"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:12.372" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:12.372" endtime="20230705 06:32:12.431"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.301" endtime="20230705 06:32:12.431"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.432" endtime="20230705 06:32:12.576"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:12.577" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:12.576" endtime="20230705 06:32:12.644"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.431" endtime="20230705 06:32:12.645"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.646" endtime="20230705 06:32:12.782"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:12.783" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:12.783" endtime="20230705 06:32:12.871"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.645" endtime="20230705 06:32:12.871"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.872" endtime="20230705 06:32:13.033"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:13.033" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:13.033" endtime="20230705 06:32:13.073"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.872" endtime="20230705 06:32:13.073"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.301" endtime="20230705 06:32:13.074"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:13.074" endtime="20230705 06:32:13.264"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:13.265" endtime="20230705 06:32:13.394"/>
</kw>
<status status="PASS" starttime="20230705 06:32:13.074" endtime="20230705 06:32:13.395"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:13.396" endtime="20230705 06:32:13.512"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:13.512" endtime="20230705 06:32:13.668"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:13.669" endtime="20230705 06:32:15.754"/>
</kw>
<status status="PASS" starttime="20230705 06:32:13.395" endtime="20230705 06:32:15.755"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:20.654" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:15.756" endtime="20230705 06:32:20.654"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:20.655" endtime="20230705 06:32:24.096"/>
</kw>
<status status="PASS" starttime="20230705 06:32:15.756" endtime="20230705 06:32:24.097"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:26.836" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:24.098" endtime="20230705 06:32:26.836"/>
</kw>
<status status="PASS" starttime="20230705 06:32:24.097" endtime="20230705 06:32:26.839"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:26.881" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:26.840" endtime="20230705 06:32:26.882"/>
</kw>
<status status="PASS" starttime="20230705 06:32:26.839" endtime="20230705 06:32:26.882"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:26.882" endtime="20230705 06:32:27.116"/>
</kw>
<status status="PASS" starttime="20230705 06:32:26.839" endtime="20230705 06:32:27.117"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:32:27.374" level="INFO">Text: 'Booking number: 298026597'</msg>
<msg timestamp="20230705 06:32:27.374" level="INFO">${str} = Booking number: 298026597</msg>
<status status="PASS" starttime="20230705 06:32:27.118" endtime="20230705 06:32:27.374"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:32:27.375" endtime="20230705 06:32:27.375"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:32:27.376" level="INFO">${str} = Booking number: 298026597</msg>
<status status="PASS" starttime="20230705 06:32:27.375" endtime="20230705 06:32:27.377"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:32:27.378" level="INFO">${str} = Booking number: 298026597</msg>
<status status="PASS" starttime="20230705 06:32:27.378" endtime="20230705 06:32:27.378"/>
</kw>
<status status="PASS" starttime="20230705 06:32:27.117" endtime="20230705 06:32:27.379"/>
</kw>
<status status="PASS" starttime="20230705 06:32:24.097" endtime="20230705 06:32:27.379"/>
</kw>
<status status="PASS" starttime="20230705 06:32:15.755" endtime="20230705 06:32:27.379"/>
</kw>
<status status="PASS" starttime="20230705 06:31:58.701" endtime="20230705 06:32:27.379"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:27.387" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:27.380" endtime="20230705 06:32:27.388"/>
</kw>
<status status="PASS" starttime="20230705 06:32:27.380" endtime="20230705 06:32:27.388"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:27.388" endtime="20230705 06:32:27.539"/>
</kw>
<status status="PASS" starttime="20230705 06:32:27.379" endtime="20230705 06:32:27.539"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:27.540" endtime="20230705 06:32:28.549"/>
</kw>
<status status="PASS" starttime="20230705 06:32:27.539" endtime="20230705 06:32:28.549"/>
</kw>
<kw name="Room name is removed" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[contains(@class,'guest-modal')]//p[normalize-space()='Standard room' ]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:34.720" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:34.720" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:34.721" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@class,\'guest-modal\')]//p[normalize-space()=\'Standard room\' ]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:28.551" endtime="20230705 06:32:34.721"/>
</kw>
<msg timestamp="20230705 06:32:34.721" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:32:28.550" endtime="20230705 06:32:34.721"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:34.722" endtime="20230705 06:32:34.722"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:34.723" endtime="20230705 06:32:34.723"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.722" endtime="20230705 06:32:34.723"/>
</kw>
<status status="PASS" starttime="20230705 06:32:28.550" endtime="20230705 06:32:34.724"/>
</kw>
<status status="PASS" starttime="20230705 06:32:28.549" endtime="20230705 06:32:34.725"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:32:35.687" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:32:34.725" endtime="20230705 06:32:35.687"/>
</kw>
<status status="PASS" starttime="20230705 06:31:52.543" endtime="20230705 06:32:35.688"/>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Verify Purpose of trip checkbox in Edit guest popup when marking someone else as a guest" line="29">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:32:35.694" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/f25bdb0d-38ba-4826-b55a-4ab81c76032c"}</msg>
<msg timestamp="20230705 06:32:36.352" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/f25bdb0d-38ba-4826-b55a-4ab81c76032c"}</msg>
<status status="PASS" starttime="20230705 06:32:35.693" endtime="20230705 06:32:36.352"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:32:36.352" endtime="20230705 06:32:36.353"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:32:36.353" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:32:36.414" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:32:36.414" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:32:36.353" endtime="20230705 06:32:36.414"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:32:40.671" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:32:36.414" endtime="20230705 06:32:40.671"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:32:40.672" endtime="20230705 06:32:42.295"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:32:42.299" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:32:42.296" endtime="20230705 06:32:42.299"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:32:42.352" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:32:42.353" level="INFO">${els} = ['element=7d3cd2ee-393b-4a7a-b00e-316e053f9668']</msg>
<status status="PASS" starttime="20230705 06:32:42.299" endtime="20230705 06:32:42.353"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:32:42.353" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:32:42.354" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:32:42.353" endtime="20230705 06:32:42.354"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:32:42.355" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:32:42.354" endtime="20230705 06:32:42.355"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.354" endtime="20230705 06:32:42.355"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:32:42.355" endtime="20230705 06:32:42.355"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:42.355" endtime="20230705 06:32:42.355"/>
</branch>
<status status="PASS" starttime="20230705 06:32:42.354" endtime="20230705 06:32:42.355"/>
</if>
<status status="PASS" starttime="20230705 06:32:42.299" endtime="20230705 06:32:42.356"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:32:42.356" endtime="20230705 06:32:42.356"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:42.356" endtime="20230705 06:32:42.356"/>
</branch>
<status status="PASS" starttime="20230705 06:32:42.299" endtime="20230705 06:32:42.356"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:32:42.365" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:32:42.357" endtime="20230705 06:32:42.365"/>
</kw>
<msg timestamp="20230705 06:32:42.365" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:32:42.296" endtime="20230705 06:32:42.365"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:42.366" endtime="20230705 06:32:42.454"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.366" endtime="20230705 06:32:42.454"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:32:42.455" endtime="20230705 06:32:42.455"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:42.455" endtime="20230705 06:32:42.455"/>
</branch>
<status status="PASS" starttime="20230705 06:32:42.366" endtime="20230705 06:32:42.455"/>
</if>
<status status="PASS" starttime="20230705 06:32:42.295" endtime="20230705 06:32:42.456"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:32:42.458" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:32:42.456" endtime="20230705 06:32:42.458"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:32:42.460" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:32:42.459" endtime="20230705 06:32:42.460"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:32:42.460" endtime="20230705 06:32:42.460"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.456" endtime="20230705 06:32:42.461"/>
</kw>
<status status="PASS" starttime="20230705 06:32:35.693" endtime="20230705 06:32:42.462"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:32:42.463" endtime="20230705 06:32:42.464"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:42.463" endtime="20230705 06:32:42.464"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:32:42.466" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:32:42.465" endtime="20230705 06:32:42.466"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:42.467" endtime="20230705 06:32:42.574"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:42.647" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:42.575" endtime="20230705 06:32:42.648"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.574" endtime="20230705 06:32:42.648"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:42.648" endtime="20230705 06:32:42.951"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:43.027" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:32:42.951" endtime="20230705 06:32:43.027"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.465" endtime="20230705 06:32:43.028"/>
</branch>
<status status="PASS" starttime="20230705 06:32:42.463" endtime="20230705 06:32:43.028"/>
</if>
<status status="PASS" starttime="20230705 06:32:42.463" endtime="20230705 06:32:43.028"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:32:43.030" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:32:43.029" endtime="20230705 06:32:43.030"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.028" endtime="20230705 06:32:43.030"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:32:43.031" endtime="20230705 06:32:43.031"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.030" endtime="20230705 06:32:43.031"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:43.032" endtime="20230705 06:32:43.521"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.032" endtime="20230705 06:32:43.521"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:47.159" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:43.522" endtime="20230705 06:32:47.160"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.522" endtime="20230705 06:32:47.160"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:32:47.413" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:32:47.160" endtime="20230705 06:32:47.413"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:47.413" endtime="20230705 06:32:47.414"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.521" endtime="20230705 06:32:47.414"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:47.415" endtime="20230705 06:32:49.953"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:51.415" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:49.954" endtime="20230705 06:32:51.416"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.953" endtime="20230705 06:32:51.416"/>
</kw>
<status status="PASS" starttime="20230705 06:32:47.414" endtime="20230705 06:32:51.416"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:32:51.428" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:32:51.428" level="INFO">${elements} = ['element=344dbe1b-6601-4bb1-bf63-5668b81f8b9b']</msg>
<status status="PASS" starttime="20230705 06:32:51.418" endtime="20230705 06:32:51.428"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:32:51.429" level="INFO">${first_element} = element=344dbe1b-6601-4bb1-bf63-5668b81f8b9b</msg>
<status status="PASS" starttime="20230705 06:32:51.429" endtime="20230705 06:32:51.429"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:51.429" endtime="20230705 06:32:51.861"/>
</kw>
<status status="PASS" starttime="20230705 06:32:51.417" endtime="20230705 06:32:51.861"/>
</kw>
<status status="PASS" starttime="20230705 06:32:51.417" endtime="20230705 06:32:51.861"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:51.865" endtime="20230705 06:32:53.358"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:53.369" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:53.359" endtime="20230705 06:32:53.370"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.358" endtime="20230705 06:32:53.370"/>
</kw>
<status status="PASS" starttime="20230705 06:32:51.862" endtime="20230705 06:32:53.370"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:53.371" endtime="20230705 06:32:53.657"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:53.671" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:53.658" endtime="20230705 06:32:53.672"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.657" endtime="20230705 06:32:53.672"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.371" endtime="20230705 06:32:53.672"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:53.673" endtime="20230705 06:32:53.965"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:53.977" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:53.966" endtime="20230705 06:32:53.977"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.966" endtime="20230705 06:32:53.977"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.672" endtime="20230705 06:32:53.977"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:53.978" endtime="20230705 06:32:54.253"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:54.424" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:54.254" endtime="20230705 06:32:54.424"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.253" endtime="20230705 06:32:54.425"/>
</kw>
<status status="PASS" starttime="20230705 06:32:53.978" endtime="20230705 06:32:54.425"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:54.426" endtime="20230705 06:32:54.715"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:54.737" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:54.716" endtime="20230705 06:32:54.737"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.715" endtime="20230705 06:32:54.737"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.425" endtime="20230705 06:32:54.737"/>
</kw>
<status status="PASS" starttime="20230705 06:32:51.861" endtime="20230705 06:32:54.737"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:54.739" endtime="20230705 06:32:54.852"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:54.853" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:54.853" endtime="20230705 06:32:54.930"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.738" endtime="20230705 06:32:54.931"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:54.932" endtime="20230705 06:32:55.087"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:55.088" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:55.087" endtime="20230705 06:32:55.173"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.931" endtime="20230705 06:32:55.173"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.174" endtime="20230705 06:32:55.361"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:55.362" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:55.361" endtime="20230705 06:32:55.465"/>
</kw>
<status status="PASS" starttime="20230705 06:32:55.174" endtime="20230705 06:32:55.466"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.466" endtime="20230705 06:32:55.593"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:55.594" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:55.593" endtime="20230705 06:32:55.623"/>
</kw>
<status status="PASS" starttime="20230705 06:32:55.466" endtime="20230705 06:32:55.624"/>
</kw>
<status status="PASS" starttime="20230705 06:32:54.738" endtime="20230705 06:32:55.624"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.625" endtime="20230705 06:32:55.759"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.760" endtime="20230705 06:32:55.875"/>
</kw>
<status status="PASS" starttime="20230705 06:32:55.624" endtime="20230705 06:32:55.876"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.877" endtime="20230705 06:32:55.973"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:55.974" endtime="20230705 06:32:56.105"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:56.105" endtime="20230705 06:32:58.164"/>
</kw>
<status status="PASS" starttime="20230705 06:32:55.876" endtime="20230705 06:32:58.164"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:03.154" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:58.166" endtime="20230705 06:33:03.154"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:03.154" endtime="20230705 06:33:06.933"/>
</kw>
<status status="PASS" starttime="20230705 06:32:58.165" endtime="20230705 06:33:06.934"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:09.364" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:06.935" endtime="20230705 06:33:09.364"/>
</kw>
<status status="PASS" starttime="20230705 06:33:06.934" endtime="20230705 06:33:09.364"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:09.410" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:09.365" endtime="20230705 06:33:09.410"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.365" endtime="20230705 06:33:09.411"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:09.411" endtime="20230705 06:33:09.691"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.365" endtime="20230705 06:33:09.691"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:33:09.841" level="INFO">Text: 'Booking number: 414752132'</msg>
<msg timestamp="20230705 06:33:09.841" level="INFO">${str} = Booking number: 414752132</msg>
<status status="PASS" starttime="20230705 06:33:09.692" endtime="20230705 06:33:09.841"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:33:09.841" endtime="20230705 06:33:09.842"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:33:09.842" level="INFO">${str} = Booking number: 414752132</msg>
<status status="PASS" starttime="20230705 06:33:09.842" endtime="20230705 06:33:09.842"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:33:09.843" level="INFO">${str} = Booking number: 414752132</msg>
<status status="PASS" starttime="20230705 06:33:09.843" endtime="20230705 06:33:09.843"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.691" endtime="20230705 06:33:09.843"/>
</kw>
<status status="PASS" starttime="20230705 06:33:06.934" endtime="20230705 06:33:09.845"/>
</kw>
<status status="PASS" starttime="20230705 06:32:58.165" endtime="20230705 06:33:09.846"/>
</kw>
<status status="PASS" starttime="20230705 06:32:42.462" endtime="20230705 06:33:09.846"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:09.862" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:09.847" endtime="20230705 06:33:09.862"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.847" endtime="20230705 06:33:09.863"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:09.863" endtime="20230705 06:33:09.998"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.846" endtime="20230705 06:33:09.999"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:09.999" endtime="20230705 06:33:11.160"/>
</kw>
<status status="PASS" starttime="20230705 06:33:09.999" endtime="20230705 06:33:11.160"/>
</kw>
<kw name="The &quot;Purpose of the trip&quot; checkbox is removed" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//span[text()='Travelling for work']</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:17.276" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:33:17.276" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:33:17.277" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//span[text()=\'Travelling for work\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:33:11.162" endtime="20230705 06:33:17.277"/>
</kw>
<msg timestamp="20230705 06:33:17.277" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:33:11.162" endtime="20230705 06:33:17.278"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:33:17.278" endtime="20230705 06:33:17.278"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:33:17.279" endtime="20230705 06:33:17.279"/>
</kw>
<status status="PASS" starttime="20230705 06:33:17.278" endtime="20230705 06:33:17.279"/>
</kw>
<status status="PASS" starttime="20230705 06:33:11.161" endtime="20230705 06:33:17.280"/>
</kw>
<status status="PASS" starttime="20230705 06:33:11.161" endtime="20230705 06:33:17.280"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:33:17.895" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:33:17.280" endtime="20230705 06:33:17.895"/>
</kw>
<status status="PASS" starttime="20230705 06:32:35.692" endtime="20230705 06:33:17.895"/>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Verify Save and invite button when marking someone else as a guest" line="35">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:33:17.900" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/fbcf4a0b-a0d1-4d1c-818c-d7a20d9c75f9"}</msg>
<msg timestamp="20230705 06:33:18.433" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/fbcf4a0b-a0d1-4d1c-818c-d7a20d9c75f9"}</msg>
<status status="PASS" starttime="20230705 06:33:17.900" endtime="20230705 06:33:18.433"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:33:18.433" endtime="20230705 06:33:18.434"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:33:18.435" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:33:18.473" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:33:18.473" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:33:18.434" endtime="20230705 06:33:18.473"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:33:24.113" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:33:18.474" endtime="20230705 06:33:24.114"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:33:24.114" endtime="20230705 06:33:25.532"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:33:25.536" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:33:25.534" endtime="20230705 06:33:25.536"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:33:25.577" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:33:25.577" level="INFO">${els} = ['element=43ac1093-4a75-4325-96dc-29b984b4a6d1']</msg>
<status status="PASS" starttime="20230705 06:33:25.536" endtime="20230705 06:33:25.577"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:33:25.578" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:33:25.578" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:33:25.578" endtime="20230705 06:33:25.578"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:33:25.579" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:33:25.579" endtime="20230705 06:33:25.579"/>
</kw>
<status status="PASS" starttime="20230705 06:33:25.578" endtime="20230705 06:33:25.579"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:33:25.580" endtime="20230705 06:33:25.580"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:33:25.579" endtime="20230705 06:33:25.580"/>
</branch>
<status status="PASS" starttime="20230705 06:33:25.578" endtime="20230705 06:33:25.580"/>
</if>
<status status="PASS" starttime="20230705 06:33:25.536" endtime="20230705 06:33:25.580"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:33:25.580" endtime="20230705 06:33:25.581"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:33:25.580" endtime="20230705 06:33:25.581"/>
</branch>
<status status="PASS" starttime="20230705 06:33:25.536" endtime="20230705 06:33:25.581"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:33:25.583" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:33:25.581" endtime="20230705 06:33:25.583"/>
</kw>
<msg timestamp="20230705 06:33:25.584" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:33:25.533" endtime="20230705 06:33:25.584"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:25.584" endtime="20230705 06:33:25.672"/>
</kw>
<status status="PASS" starttime="20230705 06:33:25.584" endtime="20230705 06:33:25.672"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:33:25.673" endtime="20230705 06:33:25.673"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:33:25.672" endtime="20230705 06:33:25.673"/>
</branch>
<status status="PASS" starttime="20230705 06:33:25.584" endtime="20230705 06:33:25.673"/>
</if>
<status status="PASS" starttime="20230705 06:33:25.533" endtime="20230705 06:33:25.673"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:33:25.676" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:33:25.674" endtime="20230705 06:33:25.676"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:33:25.677" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:33:25.677" endtime="20230705 06:33:25.677"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:33:25.677" endtime="20230705 06:33:25.678"/>
</kw>
<status status="PASS" starttime="20230705 06:33:25.674" endtime="20230705 06:33:25.678"/>
</kw>
<status status="PASS" starttime="20230705 06:33:17.899" endtime="20230705 06:33:25.678"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:33:25.679" endtime="20230705 06:33:25.679"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:33:25.679" endtime="20230705 06:33:25.680"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:33:25.680" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:33:25.680" endtime="20230705 06:33:25.680"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:25.681" endtime="20230705 06:33:25.773"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:25.781" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:25.774" endtime="20230705 06:33:25.781"/>
</kw>
<status status="PASS" starttime="20230705 06:33:25.773" endtime="20230705 06:33:25.781"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:25.782" endtime="20230705 06:33:26.011"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:26.054" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:33:26.012" endtime="20230705 06:33:26.054"/>
</kw>
<status status="PASS" starttime="20230705 06:33:25.680" endtime="20230705 06:33:26.054"/>
</branch>
<status status="PASS" starttime="20230705 06:33:25.679" endtime="20230705 06:33:26.055"/>
</if>
<status status="PASS" starttime="20230705 06:33:25.679" endtime="20230705 06:33:26.055"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:33:26.058" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:33:26.056" endtime="20230705 06:33:26.058"/>
</kw>
<status status="PASS" starttime="20230705 06:33:26.055" endtime="20230705 06:33:26.058"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:33:26.059" endtime="20230705 06:33:26.059"/>
</kw>
<status status="PASS" starttime="20230705 06:33:26.059" endtime="20230705 06:33:26.060"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:26.060" endtime="20230705 06:33:26.911"/>
</kw>
<status status="PASS" starttime="20230705 06:33:26.060" endtime="20230705 06:33:26.912"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:31.679" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:26.913" endtime="20230705 06:33:31.680"/>
</kw>
<status status="PASS" starttime="20230705 06:33:26.912" endtime="20230705 06:33:31.680"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:33:31.933" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:33:31.680" endtime="20230705 06:33:31.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:33:31.934" endtime="20230705 06:33:31.934"/>
</kw>
<status status="PASS" starttime="20230705 06:33:26.912" endtime="20230705 06:33:31.934"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:31.935" endtime="20230705 06:33:35.445"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:33:36.362" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:33:35.446" endtime="20230705 06:33:36.362"/>
</kw>
<status status="PASS" starttime="20230705 06:33:35.446" endtime="20230705 06:33:36.363"/>
</kw>
<status status="PASS" starttime="20230705 06:33:31.935" endtime="20230705 06:33:36.363"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:33:36.376" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:33:36.376" level="INFO">${elements} = ['element=ce70018f-0b9c-4c84-a657-00195bc9f428']</msg>
<status status="PASS" starttime="20230705 06:33:36.364" endtime="20230705 06:33:36.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:33:36.377" level="INFO">${first_element} = element=ce70018f-0b9c-4c84-a657-00195bc9f428</msg>
<status status="PASS" starttime="20230705 06:33:36.377" endtime="20230705 06:33:36.377"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:33:36.377" endtime="20230705 06:33:36.460"/>
</kw>
<status status="PASS" starttime="20230705 06:33:36.364" endtime="20230705 06:33:36.461"/>
</kw>
<status status="PASS" starttime="20230705 06:33:36.363" endtime="20230705 06:33:36.461"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230705 06:35:06.597" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:35:06.597" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:35:06.598" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[contains(text(),\'Continue with regular rate\')]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:33:36.462" endtime="20230705 06:35:06.599"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230705 06:35:06.599" endtime="20230705 06:35:06.599"/>
</kw>
<status status="FAIL" starttime="20230705 06:33:36.462" endtime="20230705 06:35:06.600"/>
</kw>
<kw name="Check Join as Member" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.601" endtime="20230705 06:35:06.601"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.601" endtime="20230705 06:35:06.601"/>
</kw>
<kw name="Check Join as Member" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.601" endtime="20230705 06:35:06.601"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.601" endtime="20230705 06:35:06.602"/>
</kw>
<status status="FAIL" starttime="20230705 06:33:36.461" endtime="20230705 06:35:06.602"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.603" endtime="20230705 06:35:06.603"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.603" endtime="20230705 06:35:06.603"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.603" endtime="20230705 06:35:06.603"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.603" endtime="20230705 06:35:06.604"/>
</kw>
<status status="FAIL" starttime="20230705 06:33:25.678" endtime="20230705 06:35:06.604"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.605" endtime="20230705 06:35:06.605"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.605" endtime="20230705 06:35:06.606"/>
</kw>
<kw name="The &quot;Save and sign&quot; button changes to &quot; Save and invite&quot; button" library="booking">
<status status="NOT RUN" starttime="20230705 06:35:06.606" endtime="20230705 06:35:06.606"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:35:07.214" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:35:06.606" endtime="20230705 06:35:07.214"/>
</kw>
<status status="FAIL" starttime="20230705 06:33:17.898" endtime="20230705 06:35:07.215">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[contains(text(),\'Continue with regular rate\')]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Verify Invite guest popup UI" line="42">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:35:07.219" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/8d5944b9-8018-49d8-ac2e-a3caa5852d45"}</msg>
<msg timestamp="20230705 06:35:07.804" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/8d5944b9-8018-49d8-ac2e-a3caa5852d45"}</msg>
<status status="PASS" starttime="20230705 06:35:07.218" endtime="20230705 06:35:07.806"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:35:07.806" endtime="20230705 06:35:07.808"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:35:07.809" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:35:07.864" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:35:07.864" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:35:07.809" endtime="20230705 06:35:07.864"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:35:11.319" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:35:07.864" endtime="20230705 06:35:11.319"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:35:11.319" endtime="20230705 06:35:12.307"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:35:12.313" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:35:12.309" endtime="20230705 06:35:12.313"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:35:12.368" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:35:12.368" level="INFO">${els} = ['element=1e4484bd-ad22-41f8-bc0d-7abe192e53ac']</msg>
<status status="PASS" starttime="20230705 06:35:12.314" endtime="20230705 06:35:12.368"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:35:12.369" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:35:12.369" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:35:12.369" endtime="20230705 06:35:12.369"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:35:12.370" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:35:12.370" endtime="20230705 06:35:12.370"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.370" endtime="20230705 06:35:12.370"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:35:12.371" endtime="20230705 06:35:12.371"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:12.370" endtime="20230705 06:35:12.371"/>
</branch>
<status status="PASS" starttime="20230705 06:35:12.369" endtime="20230705 06:35:12.372"/>
</if>
<status status="PASS" starttime="20230705 06:35:12.313" endtime="20230705 06:35:12.372"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:35:12.373" endtime="20230705 06:35:12.373"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:12.372" endtime="20230705 06:35:12.373"/>
</branch>
<status status="PASS" starttime="20230705 06:35:12.313" endtime="20230705 06:35:12.373"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:35:12.377" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:35:12.374" endtime="20230705 06:35:12.377"/>
</kw>
<msg timestamp="20230705 06:35:12.377" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:35:12.308" endtime="20230705 06:35:12.377"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:12.378" endtime="20230705 06:35:12.480"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.378" endtime="20230705 06:35:12.480"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:35:12.481" endtime="20230705 06:35:12.481"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:12.480" endtime="20230705 06:35:12.481"/>
</branch>
<status status="PASS" starttime="20230705 06:35:12.377" endtime="20230705 06:35:12.481"/>
</if>
<status status="PASS" starttime="20230705 06:35:12.308" endtime="20230705 06:35:12.481"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:35:12.485" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:35:12.482" endtime="20230705 06:35:12.485"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:35:12.485" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:35:12.485" endtime="20230705 06:35:12.485"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:35:12.486" endtime="20230705 06:35:12.486"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.481" endtime="20230705 06:35:12.487"/>
</kw>
<status status="PASS" starttime="20230705 06:35:07.218" endtime="20230705 06:35:12.487"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:35:12.489" endtime="20230705 06:35:12.489"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:12.489" endtime="20230705 06:35:12.493"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:35:12.494" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:35:12.494" endtime="20230705 06:35:12.494"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:12.495" endtime="20230705 06:35:12.591"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:12.602" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:12.592" endtime="20230705 06:35:12.602"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.592" endtime="20230705 06:35:12.602"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:12.603" endtime="20230705 06:35:12.839"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:12.892" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:35:12.840" endtime="20230705 06:35:12.892"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.494" endtime="20230705 06:35:12.892"/>
</branch>
<status status="PASS" starttime="20230705 06:35:12.489" endtime="20230705 06:35:12.892"/>
</if>
<status status="PASS" starttime="20230705 06:35:12.488" endtime="20230705 06:35:12.893"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:35:12.894" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:35:12.893" endtime="20230705 06:35:12.894"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.893" endtime="20230705 06:35:12.899"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:35:12.900" endtime="20230705 06:35:12.900"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.899" endtime="20230705 06:35:12.901"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:12.901" endtime="20230705 06:35:13.419"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.901" endtime="20230705 06:35:13.419"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:16.960" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:13.421" endtime="20230705 06:35:16.960"/>
</kw>
<status status="PASS" starttime="20230705 06:35:13.420" endtime="20230705 06:35:16.960"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:35:17.213" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:35:16.961" endtime="20230705 06:35:17.213"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:17.214" endtime="20230705 06:35:17.214"/>
</kw>
<status status="PASS" starttime="20230705 06:35:13.420" endtime="20230705 06:35:17.214"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:17.215" endtime="20230705 06:35:19.588"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:20.868" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:19.589" endtime="20230705 06:35:20.868"/>
</kw>
<status status="PASS" starttime="20230705 06:35:19.589" endtime="20230705 06:35:20.868"/>
</kw>
<status status="PASS" starttime="20230705 06:35:17.215" endtime="20230705 06:35:20.869"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:35:20.880" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:35:20.881" level="INFO">${elements} = ['element=2430a1d0-3bde-4212-9be9-5a7cdb54cb58']</msg>
<status status="PASS" starttime="20230705 06:35:20.870" endtime="20230705 06:35:20.881"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:35:20.881" level="INFO">${first_element} = element=2430a1d0-3bde-4212-9be9-5a7cdb54cb58</msg>
<status status="PASS" starttime="20230705 06:35:20.881" endtime="20230705 06:35:20.881"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:20.882" endtime="20230705 06:35:21.024"/>
</kw>
<status status="PASS" starttime="20230705 06:35:20.869" endtime="20230705 06:35:21.025"/>
</kw>
<status status="PASS" starttime="20230705 06:35:20.869" endtime="20230705 06:35:21.025"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:21.026" endtime="20230705 06:35:22.519"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:22.648" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:22.520" endtime="20230705 06:35:22.648"/>
</kw>
<status status="PASS" starttime="20230705 06:35:22.519" endtime="20230705 06:35:22.648"/>
</kw>
<status status="PASS" starttime="20230705 06:35:21.026" endtime="20230705 06:35:22.648"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:22.649" endtime="20230705 06:35:22.765"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:22.878" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:22.766" endtime="20230705 06:35:22.878"/>
</kw>
<status status="PASS" starttime="20230705 06:35:22.765" endtime="20230705 06:35:22.879"/>
</kw>
<status status="PASS" starttime="20230705 06:35:22.649" endtime="20230705 06:35:22.879"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:22.880" endtime="20230705 06:35:23.069"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:23.084" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:23.070" endtime="20230705 06:35:23.084"/>
</kw>
<status status="PASS" starttime="20230705 06:35:23.069" endtime="20230705 06:35:23.084"/>
</kw>
<status status="PASS" starttime="20230705 06:35:22.879" endtime="20230705 06:35:23.084"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:23.085" endtime="20230705 06:35:23.623"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:23.717" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:23.624" endtime="20230705 06:35:23.717"/>
</kw>
<status status="PASS" starttime="20230705 06:35:23.623" endtime="20230705 06:35:23.718"/>
</kw>
<status status="PASS" starttime="20230705 06:35:23.085" endtime="20230705 06:35:23.718"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:23.719" endtime="20230705 06:35:24.001"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:24.013" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:24.002" endtime="20230705 06:35:24.013"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.001" endtime="20230705 06:35:24.013"/>
</kw>
<status status="PASS" starttime="20230705 06:35:23.718" endtime="20230705 06:35:24.014"/>
</kw>
<status status="PASS" starttime="20230705 06:35:21.025" endtime="20230705 06:35:24.014"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:24.015" endtime="20230705 06:35:24.071"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:24.071" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:24.071" endtime="20230705 06:35:24.172"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.015" endtime="20230705 06:35:24.173"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:24.173" endtime="20230705 06:35:24.363"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:24.364" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:24.363" endtime="20230705 06:35:24.435"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.173" endtime="20230705 06:35:24.436"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:24.436" endtime="20230705 06:35:24.637"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:24.637" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:24.637" endtime="20230705 06:35:24.720"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.436" endtime="20230705 06:35:24.720"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:24.721" endtime="20230705 06:35:24.876"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:24.877" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:24.877" endtime="20230705 06:35:24.913"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.721" endtime="20230705 06:35:24.914"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.014" endtime="20230705 06:35:24.914"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:24.915" endtime="20230705 06:35:25.055"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:25.056" endtime="20230705 06:35:25.181"/>
</kw>
<status status="PASS" starttime="20230705 06:35:24.914" endtime="20230705 06:35:25.181"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:25.182" endtime="20230705 06:35:25.268"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:25.269" endtime="20230705 06:35:25.400"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:25.400" endtime="20230705 06:35:25.542"/>
</kw>
<status status="PASS" starttime="20230705 06:35:25.181" endtime="20230705 06:35:25.542"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:30.849" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:25.543" endtime="20230705 06:35:30.849"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:30.850" endtime="20230705 06:35:34.534"/>
</kw>
<status status="PASS" starttime="20230705 06:35:25.543" endtime="20230705 06:35:34.534"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:37.552" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:34.535" endtime="20230705 06:35:37.552"/>
</kw>
<status status="PASS" starttime="20230705 06:35:34.535" endtime="20230705 06:35:37.553"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:37.573" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:37.554" endtime="20230705 06:35:37.573"/>
</kw>
<status status="PASS" starttime="20230705 06:35:37.553" endtime="20230705 06:35:37.574"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:37.574" endtime="20230705 06:35:38.307"/>
</kw>
<status status="PASS" starttime="20230705 06:35:37.553" endtime="20230705 06:35:38.308"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:35:38.455" level="INFO">Text: 'Booking number: 471511477'</msg>
<msg timestamp="20230705 06:35:38.456" level="INFO">${str} = Booking number: 471511477</msg>
<status status="PASS" starttime="20230705 06:35:38.308" endtime="20230705 06:35:38.456"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:35:38.456" endtime="20230705 06:35:38.457"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:35:38.457" level="INFO">${str} = Booking number: 471511477</msg>
<status status="PASS" starttime="20230705 06:35:38.457" endtime="20230705 06:35:38.457"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:35:38.461" level="INFO">${str} = Booking number: 471511477</msg>
<status status="PASS" starttime="20230705 06:35:38.457" endtime="20230705 06:35:38.461"/>
</kw>
<status status="PASS" starttime="20230705 06:35:38.308" endtime="20230705 06:35:38.461"/>
</kw>
<status status="PASS" starttime="20230705 06:35:34.535" endtime="20230705 06:35:38.462"/>
</kw>
<status status="PASS" starttime="20230705 06:35:25.543" endtime="20230705 06:35:38.462"/>
</kw>
<status status="PASS" starttime="20230705 06:35:12.488" endtime="20230705 06:35:38.462"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:38.495" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:38.464" endtime="20230705 06:35:38.496"/>
</kw>
<status status="PASS" starttime="20230705 06:35:38.463" endtime="20230705 06:35:38.496"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:38.496" endtime="20230705 06:35:38.657"/>
</kw>
<status status="PASS" starttime="20230705 06:35:38.462" endtime="20230705 06:35:38.658"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:38.658" endtime="20230705 06:35:39.585"/>
</kw>
<status status="PASS" starttime="20230705 06:35:38.658" endtime="20230705 06:35:39.585"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:39.586" endtime="20230705 06:35:39.668"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:39.676" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:39.669" endtime="20230705 06:35:39.676"/>
</kw>
<status status="PASS" starttime="20230705 06:35:39.669" endtime="20230705 06:35:39.676"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:39.679" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:39.679" endtime="20230705 06:35:40.248"/>
</kw>
<status status="PASS" starttime="20230705 06:35:39.679" endtime="20230705 06:35:40.248"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:40.249" endtime="20230705 06:35:40.370"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:40.382" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:40.371" endtime="20230705 06:35:40.382"/>
</kw>
<status status="PASS" starttime="20230705 06:35:40.371" endtime="20230705 06:35:40.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:40.383" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:40.383" endtime="20230705 06:35:40.615"/>
</kw>
<status status="PASS" starttime="20230705 06:35:40.383" endtime="20230705 06:35:40.616"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:40.616" endtime="20230705 06:35:40.715"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:40.724" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:40.716" endtime="20230705 06:35:40.724"/>
</kw>
<status status="PASS" starttime="20230705 06:35:40.715" endtime="20230705 06:35:40.724"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:40.725" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:40.725" endtime="20230705 06:35:41.218"/>
</kw>
<status status="PASS" starttime="20230705 06:35:40.725" endtime="20230705 06:35:41.218"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:41.218" endtime="20230705 06:35:41.338"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:41.353" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:41.339" endtime="20230705 06:35:41.353"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.338" endtime="20230705 06:35:41.354"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:35:41.355" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230705 06:35:41.354" endtime="20230705 06:35:41.574"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.354" endtime="20230705 06:35:41.574"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:41.582" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:41.575" endtime="20230705 06:35:41.582"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.575" endtime="20230705 06:35:41.582"/>
</kw>
<status status="PASS" starttime="20230705 06:35:39.586" endtime="20230705 06:35:41.583"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:41.583" endtime="20230705 06:35:41.668"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:41.676" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:41.669" endtime="20230705 06:35:41.676"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.669" endtime="20230705 06:35:41.677"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.583" endtime="20230705 06:35:41.677"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.107" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:41.679" endtime="20230705 06:35:44.108"/>
</kw>
<msg timestamp="20230705 06:35:44.108" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:41.678" endtime="20230705 06:35:44.108"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.109" endtime="20230705 06:35:44.109"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.108" endtime="20230705 06:35:44.110"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.110" endtime="20230705 06:35:44.110"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.678" endtime="20230705 06:35:44.110"/>
</kw>
<status status="PASS" starttime="20230705 06:35:41.677" endtime="20230705 06:35:44.111"/>
</kw>
<kw name="Verify the Invite Guest UI" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.118" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.112" endtime="20230705 06:35:44.118"/>
</kw>
<msg timestamp="20230705 06:35:44.118" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.112" endtime="20230705 06:35:44.118"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.119" endtime="20230705 06:35:44.120"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.119" endtime="20230705 06:35:44.120"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.120" endtime="20230705 06:35:44.120"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.111" endtime="20230705 06:35:44.121"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//form/div/p</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.127" level="INFO">Waited for Element with selector //form/div/p at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.122" endtime="20230705 06:35:44.127"/>
</kw>
<msg timestamp="20230705 06:35:44.127" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.121" endtime="20230705 06:35:44.127"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.128" endtime="20230705 06:35:44.129"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.128" endtime="20230705 06:35:44.129"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.129" endtime="20230705 06:35:44.129"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.121" endtime="20230705 06:35:44.129"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='firstName']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.136" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.130" endtime="20230705 06:35:44.136"/>
</kw>
<msg timestamp="20230705 06:35:44.136" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.130" endtime="20230705 06:35:44.136"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.137" endtime="20230705 06:35:44.137"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.136" endtime="20230705 06:35:44.137"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.138" endtime="20230705 06:35:44.138"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.130" endtime="20230705 06:35:44.138"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='lastName']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.144" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.139" endtime="20230705 06:35:44.144"/>
</kw>
<msg timestamp="20230705 06:35:44.144" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.139" endtime="20230705 06:35:44.144"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.145" endtime="20230705 06:35:44.146"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.145" endtime="20230705 06:35:44.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.146" endtime="20230705 06:35:44.146"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.138" endtime="20230705 06:35:44.146"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='email']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.153" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.147" endtime="20230705 06:35:44.153"/>
</kw>
<msg timestamp="20230705 06:35:44.153" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.147" endtime="20230705 06:35:44.153"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.154" endtime="20230705 06:35:44.154"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.153" endtime="20230705 06:35:44.154"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.154" endtime="20230705 06:35:44.155"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.147" endtime="20230705 06:35:44.155"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.161" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.156" endtime="20230705 06:35:44.161"/>
</kw>
<msg timestamp="20230705 06:35:44.162" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.156" endtime="20230705 06:35:44.162"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.162" endtime="20230705 06:35:44.163"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.162" endtime="20230705 06:35:44.163"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.163" endtime="20230705 06:35:44.164"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.155" endtime="20230705 06:35:44.164"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Invite']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.170" level="INFO">Waited for Element with selector //button[normalize-space()='Invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.165" endtime="20230705 06:35:44.170"/>
</kw>
<msg timestamp="20230705 06:35:44.170" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.164" endtime="20230705 06:35:44.170"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.171" endtime="20230705 06:35:44.171"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.170" endtime="20230705 06:35:44.171"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.172" endtime="20230705 06:35:44.172"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.164" endtime="20230705 06:35:44.172"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//div//button//*[name()='svg' and @data-icon='xmark']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:44.180" level="INFO">Waited for Element with selector //div//button//*[name()='svg' and @data-icon='xmark'] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:44.173" endtime="20230705 06:35:44.180"/>
</kw>
<msg timestamp="20230705 06:35:44.180" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:35:44.173" endtime="20230705 06:35:44.180"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:35:44.181" endtime="20230705 06:35:44.181"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.180" endtime="20230705 06:35:44.181"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:35:44.182" endtime="20230705 06:35:44.182"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.172" endtime="20230705 06:35:44.182"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.111" endtime="20230705 06:35:44.183"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:35:44.769" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:35:44.183" endtime="20230705 06:35:44.769"/>
</kw>
<status status="PASS" starttime="20230705 06:35:07.217" endtime="20230705 06:35:44.769"/>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Verify email field validation when inviting guest" line="51">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:35:44.774" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/8215ae73-1bec-44cc-ae9f-980445c0272f"}</msg>
<msg timestamp="20230705 06:35:45.341" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/8215ae73-1bec-44cc-ae9f-980445c0272f"}</msg>
<status status="PASS" starttime="20230705 06:35:44.773" endtime="20230705 06:35:45.341"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:35:45.341" endtime="20230705 06:35:45.342"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:35:45.343" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:35:45.402" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:35:45.403" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:35:45.342" endtime="20230705 06:35:45.403"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:35:51.867" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:35:45.403" endtime="20230705 06:35:51.867"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:35:51.867" endtime="20230705 06:35:53.346"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:35:53.349" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:35:53.347" endtime="20230705 06:35:53.349"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:35:53.397" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:35:53.397" level="INFO">${els} = ['element=2d61b24c-9c35-491f-a65d-33d7000e4c79']</msg>
<status status="PASS" starttime="20230705 06:35:53.350" endtime="20230705 06:35:53.397"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:35:53.398" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:35:53.398" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:35:53.397" endtime="20230705 06:35:53.398"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:35:53.399" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:35:53.398" endtime="20230705 06:35:53.399"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.398" endtime="20230705 06:35:53.399"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:35:53.399" endtime="20230705 06:35:53.399"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:53.399" endtime="20230705 06:35:53.399"/>
</branch>
<status status="PASS" starttime="20230705 06:35:53.398" endtime="20230705 06:35:53.400"/>
</if>
<status status="PASS" starttime="20230705 06:35:53.350" endtime="20230705 06:35:53.400"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:35:53.400" endtime="20230705 06:35:53.400"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:53.400" endtime="20230705 06:35:53.400"/>
</branch>
<status status="PASS" starttime="20230705 06:35:53.350" endtime="20230705 06:35:53.400"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:35:53.403" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:35:53.401" endtime="20230705 06:35:53.403"/>
</kw>
<msg timestamp="20230705 06:35:53.403" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:35:53.347" endtime="20230705 06:35:53.403"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:53.404" endtime="20230705 06:35:53.482"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.404" endtime="20230705 06:35:53.482"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:35:53.482" endtime="20230705 06:35:53.482"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:53.482" endtime="20230705 06:35:53.482"/>
</branch>
<status status="PASS" starttime="20230705 06:35:53.403" endtime="20230705 06:35:53.483"/>
</if>
<status status="PASS" starttime="20230705 06:35:53.346" endtime="20230705 06:35:53.483"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:35:53.486" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:35:53.483" endtime="20230705 06:35:53.486"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:35:53.486" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:35:53.486" endtime="20230705 06:35:53.486"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:35:53.487" endtime="20230705 06:35:53.487"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.483" endtime="20230705 06:35:53.487"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.772" endtime="20230705 06:35:53.488"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:35:53.489" endtime="20230705 06:35:53.489"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:35:53.489" endtime="20230705 06:35:53.489"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:35:53.490" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:35:53.490" endtime="20230705 06:35:53.490"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:53.490" endtime="20230705 06:35:53.582"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:53.589" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:53.583" endtime="20230705 06:35:53.590"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.582" endtime="20230705 06:35:53.590"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:53.590" endtime="20230705 06:35:53.771"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:53.806" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:35:53.772" endtime="20230705 06:35:53.806"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.489" endtime="20230705 06:35:53.806"/>
</branch>
<status status="PASS" starttime="20230705 06:35:53.489" endtime="20230705 06:35:53.807"/>
</if>
<status status="PASS" starttime="20230705 06:35:53.488" endtime="20230705 06:35:53.807"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:35:53.810" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:35:53.808" endtime="20230705 06:35:53.810"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.807" endtime="20230705 06:35:53.810"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:35:53.811" endtime="20230705 06:35:53.811"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.810" endtime="20230705 06:35:53.811"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:35:53.812" endtime="20230705 06:35:54.857"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.811" endtime="20230705 06:35:54.857"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:35:59.922" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:35:54.859" endtime="20230705 06:35:59.922"/>
</kw>
<status status="PASS" starttime="20230705 06:35:54.858" endtime="20230705 06:35:59.923"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:36:00.179" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:35:59.923" endtime="20230705 06:36:00.179"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:36:00.180" endtime="20230705 06:36:00.180"/>
</kw>
<status status="PASS" starttime="20230705 06:35:54.858" endtime="20230705 06:36:00.180"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:00.182" endtime="20230705 06:36:04.379"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:05.580" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:04.381" endtime="20230705 06:36:05.580"/>
</kw>
<status status="PASS" starttime="20230705 06:36:04.380" endtime="20230705 06:36:05.580"/>
</kw>
<status status="PASS" starttime="20230705 06:36:00.181" endtime="20230705 06:36:05.581"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:36:05.599" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:36:05.599" level="INFO">${elements} = ['element=2c334c97-5111-460d-8d59-e37f45a63df1']</msg>
<status status="PASS" starttime="20230705 06:36:05.582" endtime="20230705 06:36:05.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:36:05.600" level="INFO">${first_element} = element=2c334c97-5111-460d-8d59-e37f45a63df1</msg>
<status status="PASS" starttime="20230705 06:36:05.600" endtime="20230705 06:36:05.600"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:05.600" endtime="20230705 06:36:05.787"/>
</kw>
<status status="PASS" starttime="20230705 06:36:05.581" endtime="20230705 06:36:05.788"/>
</kw>
<status status="PASS" starttime="20230705 06:36:05.581" endtime="20230705 06:36:05.788"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:05.789" endtime="20230705 06:36:07.987"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:08.007" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:07.988" endtime="20230705 06:36:08.007"/>
</kw>
<status status="PASS" starttime="20230705 06:36:07.988" endtime="20230705 06:36:08.008"/>
</kw>
<status status="PASS" starttime="20230705 06:36:05.789" endtime="20230705 06:36:08.010"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:08.011" endtime="20230705 06:36:08.185"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:08.201" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:08.186" endtime="20230705 06:36:08.201"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.185" endtime="20230705 06:36:08.201"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.011" endtime="20230705 06:36:08.201"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:08.202" endtime="20230705 06:36:08.633"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:08.697" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:08.634" endtime="20230705 06:36:08.697"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.633" endtime="20230705 06:36:08.697"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.202" endtime="20230705 06:36:08.697"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:08.698" endtime="20230705 06:36:08.837"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:08.852" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:08.838" endtime="20230705 06:36:08.852"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.837" endtime="20230705 06:36:08.852"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.698" endtime="20230705 06:36:08.852"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:08.853" endtime="20230705 06:36:09.150"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:09.166" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:09.151" endtime="20230705 06:36:09.166"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.151" endtime="20230705 06:36:09.166"/>
</kw>
<status status="PASS" starttime="20230705 06:36:08.853" endtime="20230705 06:36:09.166"/>
</kw>
<status status="PASS" starttime="20230705 06:36:05.788" endtime="20230705 06:36:09.167"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:09.168" endtime="20230705 06:36:09.230"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:09.231" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:09.230" endtime="20230705 06:36:09.298"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.167" endtime="20230705 06:36:09.299"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:09.300" endtime="20230705 06:36:09.571"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:09.571" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:09.571" endtime="20230705 06:36:09.642"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.299" endtime="20230705 06:36:09.643"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:09.643" endtime="20230705 06:36:09.814"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:09.815" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:09.814" endtime="20230705 06:36:09.912"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.643" endtime="20230705 06:36:09.912"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:09.913" endtime="20230705 06:36:10.087"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:10.088" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:10.088" endtime="20230705 06:36:10.116"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.913" endtime="20230705 06:36:10.117"/>
</kw>
<status status="PASS" starttime="20230705 06:36:09.167" endtime="20230705 06:36:10.117"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:10.118" endtime="20230705 06:36:10.287"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:10.288" endtime="20230705 06:36:10.442"/>
</kw>
<status status="PASS" starttime="20230705 06:36:10.117" endtime="20230705 06:36:10.442"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:10.443" endtime="20230705 06:36:10.557"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:10.558" endtime="20230705 06:36:10.763"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:10.764" endtime="20230705 06:36:12.865"/>
</kw>
<status status="PASS" starttime="20230705 06:36:10.443" endtime="20230705 06:36:12.865"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:20.120" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:12.867" endtime="20230705 06:36:20.121"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:20.121" endtime="20230705 06:36:23.472"/>
</kw>
<status status="PASS" starttime="20230705 06:36:12.866" endtime="20230705 06:36:23.472"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:26.717" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:23.474" endtime="20230705 06:36:26.717"/>
</kw>
<status status="PASS" starttime="20230705 06:36:23.473" endtime="20230705 06:36:26.717"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:26.727" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:26.719" endtime="20230705 06:36:26.727"/>
</kw>
<status status="PASS" starttime="20230705 06:36:26.718" endtime="20230705 06:36:26.727"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:26.727" endtime="20230705 06:36:26.918"/>
</kw>
<status status="PASS" starttime="20230705 06:36:26.718" endtime="20230705 06:36:26.918"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:36:27.019" level="INFO">Text: 'Booking number: 815380966'</msg>
<msg timestamp="20230705 06:36:27.019" level="INFO">${str} = Booking number: 815380966</msg>
<status status="PASS" starttime="20230705 06:36:26.919" endtime="20230705 06:36:27.019"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:36:27.020" endtime="20230705 06:36:27.020"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:36:27.021" level="INFO">${str} = Booking number: 815380966</msg>
<status status="PASS" starttime="20230705 06:36:27.020" endtime="20230705 06:36:27.021"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:36:27.021" level="INFO">${str} = Booking number: 815380966</msg>
<status status="PASS" starttime="20230705 06:36:27.021" endtime="20230705 06:36:27.021"/>
</kw>
<status status="PASS" starttime="20230705 06:36:26.919" endtime="20230705 06:36:27.022"/>
</kw>
<status status="PASS" starttime="20230705 06:36:23.473" endtime="20230705 06:36:27.022"/>
</kw>
<status status="PASS" starttime="20230705 06:36:12.866" endtime="20230705 06:36:27.022"/>
</kw>
<status status="PASS" starttime="20230705 06:35:53.488" endtime="20230705 06:36:27.022"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:27.042" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:27.023" endtime="20230705 06:36:27.042"/>
</kw>
<status status="PASS" starttime="20230705 06:36:27.023" endtime="20230705 06:36:27.042"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:27.043" endtime="20230705 06:36:27.458"/>
</kw>
<status status="PASS" starttime="20230705 06:36:27.023" endtime="20230705 06:36:27.458"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:27.459" endtime="20230705 06:36:28.390"/>
</kw>
<status status="PASS" starttime="20230705 06:36:27.458" endtime="20230705 06:36:28.391"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:28.392" endtime="20230705 06:36:28.484"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:28.493" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:28.485" endtime="20230705 06:36:28.493"/>
</kw>
<status status="PASS" starttime="20230705 06:36:28.485" endtime="20230705 06:36:28.493"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:28.494" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:28.494" endtime="20230705 06:36:28.935"/>
</kw>
<status status="PASS" starttime="20230705 06:36:28.494" endtime="20230705 06:36:28.936"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:28.936" endtime="20230705 06:36:29.015"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:29.023" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:29.016" endtime="20230705 06:36:29.023"/>
</kw>
<status status="PASS" starttime="20230705 06:36:29.015" endtime="20230705 06:36:29.023"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:29.024" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:29.024" endtime="20230705 06:36:29.214"/>
</kw>
<status status="PASS" starttime="20230705 06:36:29.023" endtime="20230705 06:36:29.214"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:29.214" endtime="20230705 06:36:29.305"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:29.316" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:29.306" endtime="20230705 06:36:29.316"/>
</kw>
<status status="PASS" starttime="20230705 06:36:29.305" endtime="20230705 06:36:29.316"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:29.317" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:29.317" endtime="20230705 06:36:30.048"/>
</kw>
<status status="PASS" starttime="20230705 06:36:29.317" endtime="20230705 06:36:30.048"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:30.049" endtime="20230705 06:36:30.239"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:30.251" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:30.240" endtime="20230705 06:36:30.251"/>
</kw>
<status status="PASS" starttime="20230705 06:36:30.240" endtime="20230705 06:36:30.252"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:30.253" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:30.252" endtime="20230705 06:36:30.772"/>
</kw>
<status status="PASS" starttime="20230705 06:36:30.252" endtime="20230705 06:36:30.772"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:30.807" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:30.773" endtime="20230705 06:36:30.807"/>
</kw>
<status status="PASS" starttime="20230705 06:36:30.772" endtime="20230705 06:36:30.807"/>
</kw>
<status status="PASS" starttime="20230705 06:36:28.391" endtime="20230705 06:36:30.807"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:30.808" endtime="20230705 06:36:31.003"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:31.031" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:31.004" endtime="20230705 06:36:31.032"/>
</kw>
<status status="PASS" starttime="20230705 06:36:31.003" endtime="20230705 06:36:31.032"/>
</kw>
<status status="PASS" starttime="20230705 06:36:30.808" endtime="20230705 06:36:31.032"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:33.548" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:31.034" endtime="20230705 06:36:33.548"/>
</kw>
<msg timestamp="20230705 06:36:33.549" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:36:31.034" endtime="20230705 06:36:33.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:36:33.549" endtime="20230705 06:36:33.550"/>
</kw>
<status status="PASS" starttime="20230705 06:36:33.549" endtime="20230705 06:36:33.550"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:36:33.550" endtime="20230705 06:36:33.551"/>
</kw>
<status status="PASS" starttime="20230705 06:36:31.033" endtime="20230705 06:36:33.551"/>
</kw>
<status status="PASS" starttime="20230705 06:36:31.033" endtime="20230705 06:36:33.551"/>
</kw>
<kw name="Verify email with valid email" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:33.556" endtime="20230705 06:36:33.625"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>example@example.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>example@example.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:33.626" level="INFO">Types the text 'example@example.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:33.626" endtime="20230705 06:36:34.008"/>
</kw>
<status status="PASS" starttime="20230705 06:36:33.626" endtime="20230705 06:36:34.008"/>
</kw>
<status status="PASS" starttime="20230705 06:36:33.551" endtime="20230705 06:36:34.009"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:36:34.967" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:36:34.009" endtime="20230705 06:36:34.968"/>
</kw>
<status status="PASS" starttime="20230705 06:35:44.771" endtime="20230705 06:36:34.968"/>
</test>
<test id="s1-s1-s1-s1-s1-t8" name="Verify invalid email field validation when inviting guest" line="60">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:36:34.973" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/19344b8c-996b-4be6-b709-bc2eee8a785a"}</msg>
<msg timestamp="20230705 06:36:35.838" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/19344b8c-996b-4be6-b709-bc2eee8a785a"}</msg>
<status status="PASS" starttime="20230705 06:36:34.972" endtime="20230705 06:36:35.838"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:36:35.838" endtime="20230705 06:36:35.839"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:36:35.840" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:36:35.912" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:36:35.912" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:36:35.839" endtime="20230705 06:36:35.912"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:36:39.861" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:36:35.912" endtime="20230705 06:36:39.861"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:36:39.862" endtime="20230705 06:36:40.845"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:36:40.849" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:36:40.847" endtime="20230705 06:36:40.849"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:36:40.892" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:36:40.892" level="INFO">${els} = ['element=76bedb5b-b3a1-48eb-b387-2c8d1f69e918']</msg>
<status status="PASS" starttime="20230705 06:36:40.850" endtime="20230705 06:36:40.892"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:36:40.893" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:36:40.893" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:36:40.892" endtime="20230705 06:36:40.893"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:36:40.894" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:36:40.893" endtime="20230705 06:36:40.894"/>
</kw>
<status status="PASS" starttime="20230705 06:36:40.893" endtime="20230705 06:36:40.894"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:36:40.894" endtime="20230705 06:36:40.894"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:36:40.894" endtime="20230705 06:36:40.894"/>
</branch>
<status status="PASS" starttime="20230705 06:36:40.893" endtime="20230705 06:36:40.895"/>
</if>
<status status="PASS" starttime="20230705 06:36:40.849" endtime="20230705 06:36:40.895"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:36:40.895" endtime="20230705 06:36:40.895"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:36:40.895" endtime="20230705 06:36:40.895"/>
</branch>
<status status="PASS" starttime="20230705 06:36:40.849" endtime="20230705 06:36:40.895"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:36:40.898" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:36:40.896" endtime="20230705 06:36:40.898"/>
</kw>
<msg timestamp="20230705 06:36:40.898" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:36:40.846" endtime="20230705 06:36:40.898"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:40.899" endtime="20230705 06:36:40.981"/>
</kw>
<status status="PASS" starttime="20230705 06:36:40.899" endtime="20230705 06:36:40.981"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:36:40.982" endtime="20230705 06:36:40.982"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:36:40.981" endtime="20230705 06:36:40.982"/>
</branch>
<status status="PASS" starttime="20230705 06:36:40.899" endtime="20230705 06:36:40.982"/>
</if>
<status status="PASS" starttime="20230705 06:36:40.846" endtime="20230705 06:36:40.982"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:36:40.985" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:36:40.983" endtime="20230705 06:36:40.985"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:36:40.986" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:36:40.985" endtime="20230705 06:36:40.986"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:36:40.986" endtime="20230705 06:36:40.986"/>
</kw>
<status status="PASS" starttime="20230705 06:36:40.983" endtime="20230705 06:36:40.987"/>
</kw>
<status status="PASS" starttime="20230705 06:36:34.971" endtime="20230705 06:36:40.987"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:36:40.988" endtime="20230705 06:36:40.988"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:36:40.988" endtime="20230705 06:36:40.989"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:36:40.989" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:36:40.989" endtime="20230705 06:36:40.989"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:40.989" endtime="20230705 06:36:41.102"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:41.123" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:41.103" endtime="20230705 06:36:41.123"/>
</kw>
<status status="PASS" starttime="20230705 06:36:41.103" endtime="20230705 06:36:41.124"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:41.124" endtime="20230705 06:36:41.299"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:41.392" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:36:41.300" endtime="20230705 06:36:41.392"/>
</kw>
<status status="PASS" starttime="20230705 06:36:40.989" endtime="20230705 06:36:41.393"/>
</branch>
<status status="PASS" starttime="20230705 06:36:40.988" endtime="20230705 06:36:41.393"/>
</if>
<status status="PASS" starttime="20230705 06:36:40.987" endtime="20230705 06:36:41.393"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:36:41.394" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:36:41.394" endtime="20230705 06:36:41.394"/>
</kw>
<status status="PASS" starttime="20230705 06:36:41.393" endtime="20230705 06:36:41.394"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:36:41.395" endtime="20230705 06:36:41.395"/>
</kw>
<status status="PASS" starttime="20230705 06:36:41.395" endtime="20230705 06:36:41.396"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:41.398" endtime="20230705 06:36:42.991"/>
</kw>
<status status="PASS" starttime="20230705 06:36:41.397" endtime="20230705 06:36:42.991"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:47.520" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:42.993" endtime="20230705 06:36:47.520"/>
</kw>
<status status="PASS" starttime="20230705 06:36:42.992" endtime="20230705 06:36:47.520"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:36:47.773" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:36:47.521" endtime="20230705 06:36:47.773"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:36:47.774" endtime="20230705 06:36:47.774"/>
</kw>
<status status="PASS" starttime="20230705 06:36:42.992" endtime="20230705 06:36:47.774"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:47.775" endtime="20230705 06:36:50.427"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:51.556" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:50.429" endtime="20230705 06:36:51.556"/>
</kw>
<status status="PASS" starttime="20230705 06:36:50.428" endtime="20230705 06:36:51.557"/>
</kw>
<status status="PASS" starttime="20230705 06:36:47.774" endtime="20230705 06:36:51.557"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:36:51.571" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:36:51.571" level="INFO">${elements} = ['element=4d5a0e24-50ed-45c9-a07a-c62d1b258fd6']</msg>
<status status="PASS" starttime="20230705 06:36:51.558" endtime="20230705 06:36:51.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:36:51.572" level="INFO">${first_element} = element=4d5a0e24-50ed-45c9-a07a-c62d1b258fd6</msg>
<status status="PASS" starttime="20230705 06:36:51.572" endtime="20230705 06:36:51.572"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:51.572" endtime="20230705 06:36:51.750"/>
</kw>
<status status="PASS" starttime="20230705 06:36:51.558" endtime="20230705 06:36:51.750"/>
</kw>
<status status="PASS" starttime="20230705 06:36:51.557" endtime="20230705 06:36:51.750"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:51.751" endtime="20230705 06:36:53.274"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:53.415" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:53.275" endtime="20230705 06:36:53.415"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.274" endtime="20230705 06:36:53.416"/>
</kw>
<status status="PASS" starttime="20230705 06:36:51.751" endtime="20230705 06:36:53.416"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:53.417" endtime="20230705 06:36:53.638"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:53.709" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:53.639" endtime="20230705 06:36:53.710"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.638" endtime="20230705 06:36:53.710"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.416" endtime="20230705 06:36:53.710"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:53.711" endtime="20230705 06:36:53.887"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:53.905" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:53.888" endtime="20230705 06:36:53.905"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.888" endtime="20230705 06:36:53.905"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.710" endtime="20230705 06:36:53.906"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:53.906" endtime="20230705 06:36:54.141"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:54.297" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:54.142" endtime="20230705 06:36:54.297"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.142" endtime="20230705 06:36:54.297"/>
</kw>
<status status="PASS" starttime="20230705 06:36:53.906" endtime="20230705 06:36:54.298"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:54.298" endtime="20230705 06:36:54.550"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:36:54.561" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:54.551" endtime="20230705 06:36:54.561"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.550" endtime="20230705 06:36:54.561"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.298" endtime="20230705 06:36:54.562"/>
</kw>
<status status="PASS" starttime="20230705 06:36:51.751" endtime="20230705 06:36:54.562"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:54.563" endtime="20230705 06:36:54.615"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:54.616" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:54.616" endtime="20230705 06:36:54.688"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.563" endtime="20230705 06:36:54.688"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:54.689" endtime="20230705 06:36:54.871"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:54.872" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:54.871" endtime="20230705 06:36:54.962"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.688" endtime="20230705 06:36:54.962"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:54.963" endtime="20230705 06:36:55.147"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:55.148" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:55.147" endtime="20230705 06:36:55.210"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.963" endtime="20230705 06:36:55.210"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:55.211" endtime="20230705 06:36:55.369"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:36:55.370" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:36:55.369" endtime="20230705 06:36:55.401"/>
</kw>
<status status="PASS" starttime="20230705 06:36:55.211" endtime="20230705 06:36:55.402"/>
</kw>
<status status="PASS" starttime="20230705 06:36:54.562" endtime="20230705 06:36:55.402"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:55.403" endtime="20230705 06:36:55.553"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:55.554" endtime="20230705 06:36:55.687"/>
</kw>
<status status="PASS" starttime="20230705 06:36:55.402" endtime="20230705 06:36:55.687"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:55.688" endtime="20230705 06:36:55.874"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:55.874" endtime="20230705 06:36:56.036"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:36:56.036" endtime="20230705 06:36:56.232"/>
</kw>
<status status="PASS" starttime="20230705 06:36:55.687" endtime="20230705 06:36:56.233"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:00.745" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:36:56.234" endtime="20230705 06:37:00.745"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:00.746" endtime="20230705 06:37:07.021"/>
</kw>
<status status="PASS" starttime="20230705 06:36:56.233" endtime="20230705 06:37:07.021"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:10.142" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:07.023" endtime="20230705 06:37:10.142"/>
</kw>
<status status="PASS" starttime="20230705 06:37:07.022" endtime="20230705 06:37:10.143"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:10.286" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:10.144" endtime="20230705 06:37:10.286"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.143" endtime="20230705 06:37:10.286"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:10.287" endtime="20230705 06:37:10.553"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.143" endtime="20230705 06:37:10.553"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:37:10.773" level="INFO">Text: 'Booking number: 607370679'</msg>
<msg timestamp="20230705 06:37:10.773" level="INFO">${str} = Booking number: 607370679</msg>
<status status="PASS" starttime="20230705 06:37:10.554" endtime="20230705 06:37:10.773"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:37:10.774" endtime="20230705 06:37:10.774"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:37:10.775" level="INFO">${str} = Booking number: 607370679</msg>
<status status="PASS" starttime="20230705 06:37:10.774" endtime="20230705 06:37:10.775"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:37:10.776" level="INFO">${str} = Booking number: 607370679</msg>
<status status="PASS" starttime="20230705 06:37:10.776" endtime="20230705 06:37:10.776"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.553" endtime="20230705 06:37:10.777"/>
</kw>
<status status="PASS" starttime="20230705 06:37:07.022" endtime="20230705 06:37:10.777"/>
</kw>
<status status="PASS" starttime="20230705 06:36:56.233" endtime="20230705 06:37:10.777"/>
</kw>
<status status="PASS" starttime="20230705 06:36:40.987" endtime="20230705 06:37:10.778"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:10.796" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:10.779" endtime="20230705 06:37:10.796"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.778" endtime="20230705 06:37:10.796"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:10.797" endtime="20230705 06:37:10.984"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.778" endtime="20230705 06:37:10.984"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:10.985" endtime="20230705 06:37:11.971"/>
</kw>
<status status="PASS" starttime="20230705 06:37:10.984" endtime="20230705 06:37:11.971"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:11.972" endtime="20230705 06:37:12.061"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:12.075" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:12.062" endtime="20230705 06:37:12.076"/>
</kw>
<status status="PASS" starttime="20230705 06:37:12.061" endtime="20230705 06:37:12.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:37:12.078" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230705 06:37:12.077" endtime="20230705 06:37:12.633"/>
</kw>
<status status="PASS" starttime="20230705 06:37:12.077" endtime="20230705 06:37:12.633"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:12.633" endtime="20230705 06:37:12.758"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:12.770" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:12.759" endtime="20230705 06:37:12.770"/>
</kw>
<status status="PASS" starttime="20230705 06:37:12.759" endtime="20230705 06:37:12.770"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:37:12.771" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230705 06:37:12.771" endtime="20230705 06:37:13.001"/>
</kw>
<status status="PASS" starttime="20230705 06:37:12.770" endtime="20230705 06:37:13.001"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:13.001" endtime="20230705 06:37:13.086"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:13.099" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:13.087" endtime="20230705 06:37:13.100"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.087" endtime="20230705 06:37:13.100"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:37:13.101" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230705 06:37:13.101" endtime="20230705 06:37:13.518"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.100" endtime="20230705 06:37:13.519"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:13.519" endtime="20230705 06:37:13.639"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:13.669" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:13.640" endtime="20230705 06:37:13.669"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.639" endtime="20230705 06:37:13.670"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:37:13.671" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230705 06:37:13.670" endtime="20230705 06:37:13.900"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.670" endtime="20230705 06:37:13.900"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:13.909" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:13.901" endtime="20230705 06:37:13.909"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.901" endtime="20230705 06:37:13.910"/>
</kw>
<status status="PASS" starttime="20230705 06:37:11.971" endtime="20230705 06:37:13.910"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:13.911" endtime="20230705 06:37:14.004"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:14.014" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:14.005" endtime="20230705 06:37:14.014"/>
</kw>
<status status="PASS" starttime="20230705 06:37:14.004" endtime="20230705 06:37:14.014"/>
</kw>
<status status="PASS" starttime="20230705 06:37:13.910" endtime="20230705 06:37:14.014"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:17.490" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:14.016" endtime="20230705 06:37:17.490"/>
</kw>
<msg timestamp="20230705 06:37:17.490" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:37:14.016" endtime="20230705 06:37:17.490"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:37:17.491" endtime="20230705 06:37:17.492"/>
</kw>
<status status="PASS" starttime="20230705 06:37:17.491" endtime="20230705 06:37:17.492"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:37:17.492" endtime="20230705 06:37:17.492"/>
</kw>
<status status="PASS" starttime="20230705 06:37:14.015" endtime="20230705 06:37:17.493"/>
</kw>
<status status="PASS" starttime="20230705 06:37:14.015" endtime="20230705 06:37:17.493"/>
</kw>
<kw name="Verify email with invalid email" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:17.494" endtime="20230705 06:37:17.605"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>example21423example.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>example21423example.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:37:17.606" level="INFO">Types the text 'example21423example.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:37:17.606" endtime="20230705 06:37:18.122"/>
</kw>
<status status="PASS" starttime="20230705 06:37:17.605" endtime="20230705 06:37:18.122"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='email')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:24.246" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:37:24.246" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:37:24.247" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'email\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:37:18.123" endtime="20230705 06:37:24.247"/>
</kw>
<msg timestamp="20230705 06:37:24.247" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:37:18.123" endtime="20230705 06:37:24.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:37:24.248" endtime="20230705 06:37:24.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:37:24.249" endtime="20230705 06:37:24.249"/>
</kw>
<status status="PASS" starttime="20230705 06:37:24.248" endtime="20230705 06:37:24.249"/>
</kw>
<status status="PASS" starttime="20230705 06:37:18.122" endtime="20230705 06:37:24.250"/>
</kw>
<status status="PASS" starttime="20230705 06:37:17.493" endtime="20230705 06:37:24.250"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:37:24.956" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:37:24.250" endtime="20230705 06:37:24.956"/>
</kw>
<status status="PASS" starttime="20230705 06:36:34.971" endtime="20230705 06:37:24.957"/>
</test>
<test id="s1-s1-s1-s1-s1-t9" name="Verify Warning popup when inviting blocked guest" line="69">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:37:24.962" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/3aa7b96e-aca5-4602-b7dc-31fbb3c729d8"}</msg>
<msg timestamp="20230705 06:37:25.580" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/3aa7b96e-aca5-4602-b7dc-31fbb3c729d8"}</msg>
<status status="PASS" starttime="20230705 06:37:24.961" endtime="20230705 06:37:25.581"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:37:25.581" endtime="20230705 06:37:25.581"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:37:25.582" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:37:25.635" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:37:25.636" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:37:25.582" endtime="20230705 06:37:25.636"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:37:29.118" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:37:25.636" endtime="20230705 06:37:29.118"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:37:29.118" endtime="20230705 06:37:29.964"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:37:29.968" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:37:29.966" endtime="20230705 06:37:29.968"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:37:30.010" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:37:30.011" level="INFO">${els} = ['element=7e4b3538-3a39-48d8-9d9e-1e41a75b7e1c']</msg>
<status status="PASS" starttime="20230705 06:37:29.969" endtime="20230705 06:37:30.011"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:37:30.011" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:37:30.011" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:37:30.011" endtime="20230705 06:37:30.012"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:37:30.012" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:37:30.012" endtime="20230705 06:37:30.012"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.012" endtime="20230705 06:37:30.013"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:37:30.013" endtime="20230705 06:37:30.013"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:37:30.013" endtime="20230705 06:37:30.013"/>
</branch>
<status status="PASS" starttime="20230705 06:37:30.012" endtime="20230705 06:37:30.013"/>
</if>
<status status="PASS" starttime="20230705 06:37:29.968" endtime="20230705 06:37:30.013"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:37:30.014" endtime="20230705 06:37:30.014"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:37:30.014" endtime="20230705 06:37:30.014"/>
</branch>
<status status="PASS" starttime="20230705 06:37:29.968" endtime="20230705 06:37:30.014"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:37:30.017" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:37:30.014" endtime="20230705 06:37:30.017"/>
</kw>
<msg timestamp="20230705 06:37:30.017" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:37:29.965" endtime="20230705 06:37:30.017"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:30.018" endtime="20230705 06:37:30.102"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.018" endtime="20230705 06:37:30.103"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:37:30.103" endtime="20230705 06:37:30.103"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:37:30.103" endtime="20230705 06:37:30.103"/>
</branch>
<status status="PASS" starttime="20230705 06:37:30.017" endtime="20230705 06:37:30.103"/>
</if>
<status status="PASS" starttime="20230705 06:37:29.965" endtime="20230705 06:37:30.104"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:37:30.107" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:37:30.105" endtime="20230705 06:37:30.107"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:37:30.108" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:37:30.107" endtime="20230705 06:37:30.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:37:30.108" endtime="20230705 06:37:30.108"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.104" endtime="20230705 06:37:30.109"/>
</kw>
<status status="PASS" starttime="20230705 06:37:24.961" endtime="20230705 06:37:30.109"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:37:30.110" endtime="20230705 06:37:30.110"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:37:30.110" endtime="20230705 06:37:30.110"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:37:30.111" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:37:30.111" endtime="20230705 06:37:30.111"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:30.111" endtime="20230705 06:37:30.211"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:30.231" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:30.212" endtime="20230705 06:37:30.231"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.212" endtime="20230705 06:37:30.232"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:30.232" endtime="20230705 06:37:30.381"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:30.405" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:37:30.381" endtime="20230705 06:37:30.405"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.111" endtime="20230705 06:37:30.405"/>
</branch>
<status status="PASS" starttime="20230705 06:37:30.110" endtime="20230705 06:37:30.405"/>
</if>
<status status="PASS" starttime="20230705 06:37:30.109" endtime="20230705 06:37:30.406"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:37:30.407" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:37:30.406" endtime="20230705 06:37:30.407"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.406" endtime="20230705 06:37:30.407"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:37:30.408" endtime="20230705 06:37:30.409"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.407" endtime="20230705 06:37:30.409"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:30.410" endtime="20230705 06:37:30.937"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.409" endtime="20230705 06:37:30.937"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:34.219" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:30.938" endtime="20230705 06:37:34.220"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.938" endtime="20230705 06:37:34.220"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:37:34.473" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:37:34.220" endtime="20230705 06:37:34.473"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:37:34.474" endtime="20230705 06:37:34.474"/>
</kw>
<status status="PASS" starttime="20230705 06:37:30.937" endtime="20230705 06:37:34.474"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:37:34.475" endtime="20230705 06:37:37.798"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:37:38.917" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:37:37.799" endtime="20230705 06:37:38.917"/>
</kw>
<status status="PASS" starttime="20230705 06:37:37.798" endtime="20230705 06:37:38.917"/>
</kw>
<status status="PASS" starttime="20230705 06:37:34.474" endtime="20230705 06:37:38.917"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:37:38.936" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:37:38.936" level="INFO">${elements} = ['element=700fe87c-7d81-4706-b5fb-4e8b39e15481']</msg>
<status status="PASS" starttime="20230705 06:37:38.919" endtime="20230705 06:37:38.936"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:37:38.937" level="INFO">${first_element} = element=700fe87c-7d81-4706-b5fb-4e8b39e15481</msg>
<status status="PASS" starttime="20230705 06:37:38.937" endtime="20230705 06:37:38.937"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230705 06:39:09.155" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:39:09.156" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:39:09.156" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
element was detached from the DOM, retrying
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #6
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #7
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #8
  waiting 500ms
  waiting for
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:37:38.937" endtime="20230705 06:39:09.157"/>
</kw>
<status status="FAIL" starttime="20230705 06:37:38.918" endtime="20230705 06:39:09.158"/>
</kw>
<status status="FAIL" starttime="20230705 06:37:38.918" endtime="20230705 06:39:09.159"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.159" endtime="20230705 06:39:09.160"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.160" endtime="20230705 06:39:09.160"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.160" endtime="20230705 06:39:09.160"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.160" endtime="20230705 06:39:09.160"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.161" endtime="20230705 06:39:09.161"/>
</kw>
<status status="FAIL" starttime="20230705 06:37:30.109" endtime="20230705 06:39:09.161"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.162" endtime="20230705 06:39:09.162"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.162" endtime="20230705 06:39:09.162"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.162" endtime="20230705 06:39:09.162"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.162" endtime="20230705 06:39:09.163"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.163" endtime="20230705 06:39:09.163"/>
</kw>
<kw name="Fill invite guest info with block guest email" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.163" endtime="20230705 06:39:09.163"/>
</kw>
<kw name="Verify Warning Popup is displayed with blocker email" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.163" endtime="20230705 06:39:09.163"/>
</kw>
<kw name="Close Warning popup" library="booking">
<status status="NOT RUN" starttime="20230705 06:39:09.164" endtime="20230705 06:39:09.165"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:39:09.842" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:39:09.165" endtime="20230705 06:39:09.842"/>
</kw>
<status status="FAIL" starttime="20230705 06:37:24.960" endtime="20230705 06:39:09.843">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
    [ Message content over the limit has been removed. ]
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #7
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #8
  waiting 500ms
  waiting for
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t10" name="Verify invite guest with guest email same as booker email" line="80">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:39:09.847" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/73f3a360-a0e8-452b-aee9-4e0d9784c434"}</msg>
<msg timestamp="20230705 06:39:10.468" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/73f3a360-a0e8-452b-aee9-4e0d9784c434"}</msg>
<status status="PASS" starttime="20230705 06:39:09.846" endtime="20230705 06:39:10.468"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:39:10.469" endtime="20230705 06:39:10.469"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:39:10.470" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:39:10.529" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:39:10.529" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:39:10.469" endtime="20230705 06:39:10.529"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:39:16.869" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:39:10.529" endtime="20230705 06:39:16.869"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:39:16.870" endtime="20230705 06:39:18.543"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:39:18.546" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:39:18.544" endtime="20230705 06:39:18.546"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:39:18.623" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:39:18.624" level="INFO">${els} = ['element=436aea1c-4160-4212-a0c4-3bc37139a0b4']</msg>
<status status="PASS" starttime="20230705 06:39:18.547" endtime="20230705 06:39:18.624"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:39:18.624" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:39:18.624" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:39:18.624" endtime="20230705 06:39:18.624"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:39:18.625" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:39:18.625" endtime="20230705 06:39:18.625"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.625" endtime="20230705 06:39:18.625"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:39:18.626" endtime="20230705 06:39:18.626"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:39:18.626" endtime="20230705 06:39:18.626"/>
</branch>
<status status="PASS" starttime="20230705 06:39:18.625" endtime="20230705 06:39:18.626"/>
</if>
<status status="PASS" starttime="20230705 06:39:18.547" endtime="20230705 06:39:18.626"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:39:18.627" endtime="20230705 06:39:18.627"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:39:18.627" endtime="20230705 06:39:18.627"/>
</branch>
<status status="PASS" starttime="20230705 06:39:18.547" endtime="20230705 06:39:18.627"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:39:18.630" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:39:18.627" endtime="20230705 06:39:18.630"/>
</kw>
<msg timestamp="20230705 06:39:18.630" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:39:18.544" endtime="20230705 06:39:18.630"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:18.631" endtime="20230705 06:39:18.714"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.631" endtime="20230705 06:39:18.714"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:39:18.715" endtime="20230705 06:39:18.715"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:39:18.715" endtime="20230705 06:39:18.715"/>
</branch>
<status status="PASS" starttime="20230705 06:39:18.631" endtime="20230705 06:39:18.715"/>
</if>
<status status="PASS" starttime="20230705 06:39:18.543" endtime="20230705 06:39:18.716"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:39:18.718" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:39:18.716" endtime="20230705 06:39:18.718"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:39:18.720" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:39:18.719" endtime="20230705 06:39:18.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:39:18.720" endtime="20230705 06:39:18.721"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.716" endtime="20230705 06:39:18.721"/>
</kw>
<status status="PASS" starttime="20230705 06:39:09.846" endtime="20230705 06:39:18.721"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:39:18.723" endtime="20230705 06:39:18.723"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:39:18.722" endtime="20230705 06:39:18.723"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:39:18.723" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:39:18.723" endtime="20230705 06:39:18.723"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:18.724" endtime="20230705 06:39:18.842"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:18.960" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:18.843" endtime="20230705 06:39:18.960"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.842" endtime="20230705 06:39:18.960"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:18.961" endtime="20230705 06:39:19.306"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:19.416" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:39:19.307" endtime="20230705 06:39:19.417"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.723" endtime="20230705 06:39:19.417"/>
</branch>
<status status="PASS" starttime="20230705 06:39:18.722" endtime="20230705 06:39:19.417"/>
</if>
<status status="PASS" starttime="20230705 06:39:18.722" endtime="20230705 06:39:19.417"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:39:19.418" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:39:19.418" endtime="20230705 06:39:19.418"/>
</kw>
<status status="PASS" starttime="20230705 06:39:19.418" endtime="20230705 06:39:19.419"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:39:19.419" endtime="20230705 06:39:19.419"/>
</kw>
<status status="PASS" starttime="20230705 06:39:19.419" endtime="20230705 06:39:19.421"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:19.422" endtime="20230705 06:39:20.572"/>
</kw>
<status status="PASS" starttime="20230705 06:39:19.421" endtime="20230705 06:39:20.572"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:25.608" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:20.573" endtime="20230705 06:39:25.608"/>
</kw>
<status status="PASS" starttime="20230705 06:39:20.573" endtime="20230705 06:39:25.609"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:39:25.862" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:39:25.609" endtime="20230705 06:39:25.862"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:39:25.863" endtime="20230705 06:39:25.863"/>
</kw>
<status status="PASS" starttime="20230705 06:39:20.572" endtime="20230705 06:39:25.863"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:25.865" endtime="20230705 06:39:29.951"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:31.068" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:29.952" endtime="20230705 06:39:31.068"/>
</kw>
<status status="PASS" starttime="20230705 06:39:29.952" endtime="20230705 06:39:31.068"/>
</kw>
<status status="PASS" starttime="20230705 06:39:25.864" endtime="20230705 06:39:31.069"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:39:31.082" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:39:31.083" level="INFO">${elements} = ['element=208f387b-5f86-4385-8071-b3cf448721a8']</msg>
<status status="PASS" starttime="20230705 06:39:31.070" endtime="20230705 06:39:31.083"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:39:31.084" level="INFO">${first_element} = element=208f387b-5f86-4385-8071-b3cf448721a8</msg>
<status status="PASS" starttime="20230705 06:39:31.083" endtime="20230705 06:39:31.084"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:31.084" endtime="20230705 06:39:31.213"/>
</kw>
<status status="PASS" starttime="20230705 06:39:31.069" endtime="20230705 06:39:31.213"/>
</kw>
<status status="PASS" starttime="20230705 06:39:31.069" endtime="20230705 06:39:31.213"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:31.214" endtime="20230705 06:39:33.197"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:33.211" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:33.198" endtime="20230705 06:39:33.212"/>
</kw>
<status status="PASS" starttime="20230705 06:39:33.197" endtime="20230705 06:39:33.213"/>
</kw>
<status status="PASS" starttime="20230705 06:39:31.214" endtime="20230705 06:39:33.213"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:33.214" endtime="20230705 06:39:33.407"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:33.441" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:33.408" endtime="20230705 06:39:33.441"/>
</kw>
<status status="PASS" starttime="20230705 06:39:33.408" endtime="20230705 06:39:33.442"/>
</kw>
<status status="PASS" starttime="20230705 06:39:33.214" endtime="20230705 06:39:33.442"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:33.443" endtime="20230705 06:39:33.706"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:34.164" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:33.707" endtime="20230705 06:39:34.165"/>
</kw>
<status status="PASS" starttime="20230705 06:39:33.706" endtime="20230705 06:39:34.165"/>
</kw>
<status status="PASS" starttime="20230705 06:39:33.442" endtime="20230705 06:39:34.165"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:34.166" endtime="20230705 06:39:34.466"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:34.487" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:34.467" endtime="20230705 06:39:34.487"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.466" endtime="20230705 06:39:34.487"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.165" endtime="20230705 06:39:34.488"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:34.488" endtime="20230705 06:39:34.657"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:34.673" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:34.658" endtime="20230705 06:39:34.673"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.657" endtime="20230705 06:39:34.673"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.488" endtime="20230705 06:39:34.673"/>
</kw>
<status status="PASS" starttime="20230705 06:39:31.214" endtime="20230705 06:39:34.674"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:34.675" endtime="20230705 06:39:34.780"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:34.781" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:34.780" endtime="20230705 06:39:34.879"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.674" endtime="20230705 06:39:34.880"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:34.881" endtime="20230705 06:39:35.188"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:35.189" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:35.189" endtime="20230705 06:39:35.273"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.880" endtime="20230705 06:39:35.273"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:35.274" endtime="20230705 06:39:35.403"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:35.404" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:35.404" endtime="20230705 06:39:35.485"/>
</kw>
<status status="PASS" starttime="20230705 06:39:35.273" endtime="20230705 06:39:35.486"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:35.486" endtime="20230705 06:39:35.665"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:35.666" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:35.666" endtime="20230705 06:39:35.695"/>
</kw>
<status status="PASS" starttime="20230705 06:39:35.486" endtime="20230705 06:39:35.696"/>
</kw>
<status status="PASS" starttime="20230705 06:39:34.674" endtime="20230705 06:39:35.696"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:35.697" endtime="20230705 06:39:35.858"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:35.858" endtime="20230705 06:39:36.005"/>
</kw>
<status status="PASS" starttime="20230705 06:39:35.696" endtime="20230705 06:39:36.005"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:36.006" endtime="20230705 06:39:36.106"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:36.106" endtime="20230705 06:39:36.285"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:36.285" endtime="20230705 06:39:38.465"/>
</kw>
<status status="PASS" starttime="20230705 06:39:36.006" endtime="20230705 06:39:38.465"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:45.716" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:38.466" endtime="20230705 06:39:45.716"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:45.717" endtime="20230705 06:39:50.948"/>
</kw>
<status status="PASS" starttime="20230705 06:39:38.466" endtime="20230705 06:39:50.949"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:54.543" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:50.950" endtime="20230705 06:39:54.543"/>
</kw>
<status status="PASS" starttime="20230705 06:39:50.949" endtime="20230705 06:39:54.543"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:54.575" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:54.545" endtime="20230705 06:39:54.576"/>
</kw>
<status status="PASS" starttime="20230705 06:39:54.544" endtime="20230705 06:39:54.576"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:54.577" endtime="20230705 06:39:56.352"/>
</kw>
<status status="PASS" starttime="20230705 06:39:54.544" endtime="20230705 06:39:56.352"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:39:56.469" level="INFO">Text: 'Booking number: 208594202'</msg>
<msg timestamp="20230705 06:39:56.469" level="INFO">${str} = Booking number: 208594202</msg>
<status status="PASS" starttime="20230705 06:39:56.353" endtime="20230705 06:39:56.469"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:39:56.469" endtime="20230705 06:39:56.470"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:39:56.471" level="INFO">${str} = Booking number: 208594202</msg>
<status status="PASS" starttime="20230705 06:39:56.470" endtime="20230705 06:39:56.471"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:39:56.471" level="INFO">${str} = Booking number: 208594202</msg>
<status status="PASS" starttime="20230705 06:39:56.471" endtime="20230705 06:39:56.471"/>
</kw>
<status status="PASS" starttime="20230705 06:39:56.353" endtime="20230705 06:39:56.471"/>
</kw>
<status status="PASS" starttime="20230705 06:39:50.949" endtime="20230705 06:39:56.472"/>
</kw>
<status status="PASS" starttime="20230705 06:39:38.465" endtime="20230705 06:39:56.472"/>
</kw>
<status status="PASS" starttime="20230705 06:39:18.721" endtime="20230705 06:39:56.473"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:56.485" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:56.474" endtime="20230705 06:39:56.485"/>
</kw>
<status status="PASS" starttime="20230705 06:39:56.473" endtime="20230705 06:39:56.485"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:56.486" endtime="20230705 06:39:56.678"/>
</kw>
<status status="PASS" starttime="20230705 06:39:56.473" endtime="20230705 06:39:56.678"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:56.679" endtime="20230705 06:39:57.592"/>
</kw>
<status status="PASS" starttime="20230705 06:39:56.679" endtime="20230705 06:39:57.592"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:57.593" endtime="20230705 06:39:57.684"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:57.694" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:57.685" endtime="20230705 06:39:57.695"/>
</kw>
<status status="PASS" starttime="20230705 06:39:57.684" endtime="20230705 06:39:57.695"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:57.696" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:57.696" endtime="20230705 06:39:58.227"/>
</kw>
<status status="PASS" starttime="20230705 06:39:57.696" endtime="20230705 06:39:58.228"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:58.228" endtime="20230705 06:39:58.464"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:58.491" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:58.465" endtime="20230705 06:39:58.492"/>
</kw>
<status status="PASS" starttime="20230705 06:39:58.464" endtime="20230705 06:39:58.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:58.493" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:58.493" endtime="20230705 06:39:58.760"/>
</kw>
<status status="PASS" starttime="20230705 06:39:58.492" endtime="20230705 06:39:58.760"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:58.761" endtime="20230705 06:39:58.869"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:58.895" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:58.870" endtime="20230705 06:39:58.895"/>
</kw>
<status status="PASS" starttime="20230705 06:39:58.869" endtime="20230705 06:39:58.896"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:58.897" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:58.896" endtime="20230705 06:39:59.282"/>
</kw>
<status status="PASS" starttime="20230705 06:39:58.896" endtime="20230705 06:39:59.282"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:59.283" endtime="20230705 06:39:59.367"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:59.377" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:59.368" endtime="20230705 06:39:59.377"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.368" endtime="20230705 06:39:59.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:39:59.378" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230705 06:39:59.378" endtime="20230705 06:39:59.579"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.377" endtime="20230705 06:39:59.580"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:59.588" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:59.581" endtime="20230705 06:39:59.588"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.580" endtime="20230705 06:39:59.588"/>
</kw>
<status status="PASS" starttime="20230705 06:39:57.593" endtime="20230705 06:39:59.589"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:39:59.589" endtime="20230705 06:39:59.739"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:39:59.752" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:59.740" endtime="20230705 06:39:59.752"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.739" endtime="20230705 06:39:59.752"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.589" endtime="20230705 06:39:59.753"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:02.813" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230705 06:39:59.754" endtime="20230705 06:40:02.813"/>
</kw>
<msg timestamp="20230705 06:40:02.813" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:39:59.754" endtime="20230705 06:40:02.813"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:40:02.814" endtime="20230705 06:40:02.815"/>
</kw>
<status status="PASS" starttime="20230705 06:40:02.814" endtime="20230705 06:40:02.815"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:02.815" endtime="20230705 06:40:02.816"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.753" endtime="20230705 06:40:02.816"/>
</kw>
<status status="PASS" starttime="20230705 06:39:59.753" endtime="20230705 06:40:02.816"/>
</kw>
<kw name="Fill invite guest infor with booker email" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//div[contains(@class,'chakra-offset-slide')]//form</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:02.824" level="INFO">Waited for Element with selector //div[contains(@class,'chakra-offset-slide')]//form at state visible</msg>
<status status="PASS" starttime="20230705 06:40:02.817" endtime="20230705 06:40:02.824"/>
</kw>
<status status="PASS" starttime="20230705 06:40:02.817" endtime="20230705 06:40:02.824"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='firstName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:02.824" endtime="20230705 06:40:02.896"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='firstName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:02.945" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:02.897" endtime="20230705 06:40:02.945"/>
</kw>
<status status="PASS" starttime="20230705 06:40:02.897" endtime="20230705 06:40:02.946"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='firstName']</arg>
<arg>user01</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='firstName']</arg>
<arg>user01</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:02.947" level="INFO">Types the text 'user01' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:02.947" endtime="20230705 06:40:03.186"/>
</kw>
<status status="PASS" starttime="20230705 06:40:02.946" endtime="20230705 06:40:03.186"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='lastName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:03.186" endtime="20230705 06:40:03.286"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='lastName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:03.297" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:03.287" endtime="20230705 06:40:03.297"/>
</kw>
<status status="PASS" starttime="20230705 06:40:03.286" endtime="20230705 06:40:03.297"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='lastName']</arg>
<arg>invited</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='lastName']</arg>
<arg>invited</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:03.298" level="INFO">Types the text 'invited' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:03.298" endtime="20230705 06:40:03.473"/>
</kw>
<status status="PASS" starttime="20230705 06:40:03.298" endtime="20230705 06:40:03.473"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:03.473" endtime="20230705 06:40:03.594"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='email']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:03.638" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:03.595" endtime="20230705 06:40:03.639"/>
</kw>
<status status="PASS" starttime="20230705 06:40:03.594" endtime="20230705 06:40:03.639"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>bichngoc9995@gmail.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>bichngoc9995@gmail.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:03.640" level="INFO">Types the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:03.640" endtime="20230705 06:40:04.001"/>
</kw>
<status status="PASS" starttime="20230705 06:40:03.639" endtime="20230705 06:40:04.001"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:04.002" endtime="20230705 06:40:04.135"/>
</kw>
<status status="PASS" starttime="20230705 06:40:02.816" endtime="20230705 06:40:04.135"/>
</kw>
<kw name="Verify Warning Popup is displayed with booker email" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Close']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:04.152" level="INFO">Waited for Element with selector //button[normalize-space()='Close'] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:04.137" endtime="20230705 06:40:04.152"/>
</kw>
<msg timestamp="20230705 06:40:04.152" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:40:04.136" endtime="20230705 06:40:04.152"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:40:04.153" endtime="20230705 06:40:04.154"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.153" endtime="20230705 06:40:04.154"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:04.154" endtime="20230705 06:40:04.154"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.136" endtime="20230705 06:40:04.155"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'Other guests or booker already used this email address, please change it')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:04.173" level="INFO">Waited for Element with selector //p[contains(text(),'Other guests or booker already used this email address, please change it')] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:04.156" endtime="20230705 06:40:04.174"/>
</kw>
<msg timestamp="20230705 06:40:04.174" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:40:04.155" endtime="20230705 06:40:04.174"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:40:04.176" endtime="20230705 06:40:04.177"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.175" endtime="20230705 06:40:04.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:04.177" endtime="20230705 06:40:04.178"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.155" endtime="20230705 06:40:04.178"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'Cannot invite')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:04.186" level="INFO">Waited for Element with selector //p[contains(text(),'Cannot invite')] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:04.179" endtime="20230705 06:40:04.186"/>
</kw>
<msg timestamp="20230705 06:40:04.186" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:40:04.179" endtime="20230705 06:40:04.186"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:40:04.187" endtime="20230705 06:40:04.187"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.186" endtime="20230705 06:40:04.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:04.188" endtime="20230705 06:40:04.188"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.178" endtime="20230705 06:40:04.188"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//img[contains(@src,'/en/booking/resources/images/uninvite-bell.png')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:05.001" level="INFO">Waited for Element with selector //img[contains(@src,'/en/booking/resources/images/uninvite-bell.png')] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:04.189" endtime="20230705 06:40:05.001"/>
</kw>
<msg timestamp="20230705 06:40:05.002" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:40:04.189" endtime="20230705 06:40:05.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:40:05.003" endtime="20230705 06:40:05.003"/>
</kw>
<status status="PASS" starttime="20230705 06:40:05.002" endtime="20230705 06:40:05.003"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:05.004" endtime="20230705 06:40:05.005"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.188" endtime="20230705 06:40:05.005"/>
</kw>
<status status="PASS" starttime="20230705 06:40:04.135" endtime="20230705 06:40:05.005"/>
</kw>
<kw name="Close Warning popup" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Close']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:05.006" endtime="20230705 06:40:05.111"/>
</kw>
<status status="PASS" starttime="20230705 06:40:05.005" endtime="20230705 06:40:05.111"/>
</kw>
<kw name="Click Cancel button" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:05.112" endtime="20230705 06:40:05.365"/>
</kw>
<status status="PASS" starttime="20230705 06:40:05.111" endtime="20230705 06:40:05.366"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<kw name="Wait For Elements State" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:05.582" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state hidden</msg>
<status status="PASS" starttime="20230705 06:40:05.366" endtime="20230705 06:40:05.582"/>
</kw>
<status status="PASS" starttime="20230705 06:40:05.366" endtime="20230705 06:40:05.583"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:40:06.436" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:40:05.583" endtime="20230705 06:40:06.436"/>
</kw>
<status status="PASS" starttime="20230705 06:39:09.845" endtime="20230705 06:40:06.436"/>
</test>
<test id="s1-s1-s1-s1-s1-t11" name="Verify invite guest with valid information" line="93">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:40:06.442" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/9e7891d1-9e8b-4b1c-aaa6-114480bc2399"}</msg>
<msg timestamp="20230705 06:40:07.091" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/9e7891d1-9e8b-4b1c-aaa6-114480bc2399"}</msg>
<status status="PASS" starttime="20230705 06:40:06.441" endtime="20230705 06:40:07.091"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:40:07.092" endtime="20230705 06:40:07.092"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:40:07.093" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:40:07.137" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:40:07.137" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:40:07.093" endtime="20230705 06:40:07.137"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:40:13.450" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:40:07.137" endtime="20230705 06:40:13.450"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:40:13.450" endtime="20230705 06:40:14.855"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:40:14.858" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:40:14.856" endtime="20230705 06:40:14.859"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:40:14.904" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:40:14.905" level="INFO">${els} = ['element=e941cb60-fa93-4a6a-ae83-41ead6edd6af']</msg>
<status status="PASS" starttime="20230705 06:40:14.859" endtime="20230705 06:40:14.905"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:40:14.905" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:40:14.905" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:40:14.905" endtime="20230705 06:40:14.905"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:40:14.906" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:40:14.906" endtime="20230705 06:40:14.906"/>
</kw>
<status status="PASS" starttime="20230705 06:40:14.906" endtime="20230705 06:40:14.907"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:40:14.907" endtime="20230705 06:40:14.907"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:40:14.907" endtime="20230705 06:40:14.907"/>
</branch>
<status status="PASS" starttime="20230705 06:40:14.906" endtime="20230705 06:40:14.907"/>
</if>
<status status="PASS" starttime="20230705 06:40:14.859" endtime="20230705 06:40:14.907"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:40:14.908" endtime="20230705 06:40:14.908"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:40:14.908" endtime="20230705 06:40:14.908"/>
</branch>
<status status="PASS" starttime="20230705 06:40:14.859" endtime="20230705 06:40:14.908"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:40:14.911" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:40:14.908" endtime="20230705 06:40:14.911"/>
</kw>
<msg timestamp="20230705 06:40:14.911" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:40:14.856" endtime="20230705 06:40:14.911"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:14.912" endtime="20230705 06:40:14.988"/>
</kw>
<status status="PASS" starttime="20230705 06:40:14.911" endtime="20230705 06:40:14.989"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:40:14.989" endtime="20230705 06:40:14.989"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:40:14.989" endtime="20230705 06:40:14.989"/>
</branch>
<status status="PASS" starttime="20230705 06:40:14.911" endtime="20230705 06:40:14.989"/>
</if>
<status status="PASS" starttime="20230705 06:40:14.855" endtime="20230705 06:40:14.990"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:40:14.992" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:40:14.990" endtime="20230705 06:40:14.992"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:40:14.993" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:40:14.993" endtime="20230705 06:40:14.993"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:40:14.993" endtime="20230705 06:40:14.994"/>
</kw>
<status status="PASS" starttime="20230705 06:40:14.990" endtime="20230705 06:40:14.994"/>
</kw>
<status status="PASS" starttime="20230705 06:40:06.441" endtime="20230705 06:40:14.994"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:40:14.995" endtime="20230705 06:40:14.995"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:40:14.995" endtime="20230705 06:40:14.996"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:40:14.996" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:40:14.996" endtime="20230705 06:40:14.996"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:14.997" endtime="20230705 06:40:15.087"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:15.095" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:15.088" endtime="20230705 06:40:15.095"/>
</kw>
<status status="PASS" starttime="20230705 06:40:15.087" endtime="20230705 06:40:15.096"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:15.096" endtime="20230705 06:40:15.412"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:15.465" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:40:15.412" endtime="20230705 06:40:15.465"/>
</kw>
<status status="PASS" starttime="20230705 06:40:14.996" endtime="20230705 06:40:15.465"/>
</branch>
<status status="PASS" starttime="20230705 06:40:14.995" endtime="20230705 06:40:15.465"/>
</if>
<status status="PASS" starttime="20230705 06:40:14.995" endtime="20230705 06:40:15.466"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:40:15.467" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:40:15.466" endtime="20230705 06:40:15.467"/>
</kw>
<status status="PASS" starttime="20230705 06:40:15.466" endtime="20230705 06:40:15.467"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:40:15.469" endtime="20230705 06:40:15.469"/>
</kw>
<status status="PASS" starttime="20230705 06:40:15.467" endtime="20230705 06:40:15.470"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:15.471" endtime="20230705 06:40:16.347"/>
</kw>
<status status="PASS" starttime="20230705 06:40:15.470" endtime="20230705 06:40:16.347"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:22.045" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:16.349" endtime="20230705 06:40:22.045"/>
</kw>
<status status="PASS" starttime="20230705 06:40:16.348" endtime="20230705 06:40:22.045"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:40:22.300" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:40:22.046" endtime="20230705 06:40:22.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:40:22.301" endtime="20230705 06:40:22.301"/>
</kw>
<status status="PASS" starttime="20230705 06:40:16.348" endtime="20230705 06:40:22.301"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:22.302" endtime="20230705 06:40:25.973"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:27.593" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:25.974" endtime="20230705 06:40:27.594"/>
</kw>
<status status="PASS" starttime="20230705 06:40:25.973" endtime="20230705 06:40:27.594"/>
</kw>
<status status="PASS" starttime="20230705 06:40:22.302" endtime="20230705 06:40:27.594"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:40:27.615" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:40:27.616" level="INFO">${elements} = ['element=f4caac04-0a6b-4f9b-962d-cf051ca6f6d2']</msg>
<status status="PASS" starttime="20230705 06:40:27.595" endtime="20230705 06:40:27.616"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:40:27.617" level="INFO">${first_element} = element=f4caac04-0a6b-4f9b-962d-cf051ca6f6d2</msg>
<status status="PASS" starttime="20230705 06:40:27.616" endtime="20230705 06:40:27.617"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:27.617" endtime="20230705 06:40:27.767"/>
</kw>
<status status="PASS" starttime="20230705 06:40:27.595" endtime="20230705 06:40:27.767"/>
</kw>
<status status="PASS" starttime="20230705 06:40:27.594" endtime="20230705 06:40:27.767"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:27.769" endtime="20230705 06:40:29.374"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:29.386" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:29.375" endtime="20230705 06:40:29.386"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.374" endtime="20230705 06:40:29.387"/>
</kw>
<status status="PASS" starttime="20230705 06:40:27.768" endtime="20230705 06:40:29.387"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:29.388" endtime="20230705 06:40:29.530"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:29.546" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:29.531" endtime="20230705 06:40:29.547"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.530" endtime="20230705 06:40:29.547"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.387" endtime="20230705 06:40:29.547"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:29.548" endtime="20230705 06:40:29.686"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:29.697" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:29.687" endtime="20230705 06:40:29.697"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.686" endtime="20230705 06:40:29.698"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.547" endtime="20230705 06:40:29.698"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:29.699" endtime="20230705 06:40:29.912"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:29.964" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:29.913" endtime="20230705 06:40:29.964"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.912" endtime="20230705 06:40:29.964"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.698" endtime="20230705 06:40:29.965"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:29.965" endtime="20230705 06:40:30.212"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:40:30.343" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:40:30.213" endtime="20230705 06:40:30.343"/>
</kw>
<status status="PASS" starttime="20230705 06:40:30.213" endtime="20230705 06:40:30.343"/>
</kw>
<status status="PASS" starttime="20230705 06:40:29.965" endtime="20230705 06:40:30.343"/>
</kw>
<status status="PASS" starttime="20230705 06:40:27.768" endtime="20230705 06:40:30.344"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:30.345" endtime="20230705 06:40:30.442"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:30.443" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:30.442" endtime="20230705 06:40:30.543"/>
</kw>
<status status="PASS" starttime="20230705 06:40:30.344" endtime="20230705 06:40:30.543"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:30.544" endtime="20230705 06:40:30.855"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:30.855" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:30.855" endtime="20230705 06:40:30.972"/>
</kw>
<status status="PASS" starttime="20230705 06:40:30.544" endtime="20230705 06:40:30.973"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:30.974" endtime="20230705 06:40:31.144"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:31.145" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:31.145" endtime="20230705 06:40:31.271"/>
</kw>
<status status="PASS" starttime="20230705 06:40:30.973" endtime="20230705 06:40:31.272"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:31.273" endtime="20230705 06:40:31.457"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:40:31.458" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:40:31.457" endtime="20230705 06:40:31.525"/>
</kw>
<status status="PASS" starttime="20230705 06:40:31.272" endtime="20230705 06:40:31.525"/>
</kw>
<status status="PASS" starttime="20230705 06:40:30.344" endtime="20230705 06:40:31.525"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:31.526" endtime="20230705 06:40:31.670"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:31.670" endtime="20230705 06:40:31.801"/>
</kw>
<status status="PASS" starttime="20230705 06:40:31.525" endtime="20230705 06:40:31.802"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:31.802" endtime="20230705 06:40:31.910"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:31.910" endtime="20230705 06:40:32.053"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:40:32.053" endtime="20230705 06:40:32.187"/>
</kw>
<status status="PASS" starttime="20230705 06:40:31.802" endtime="20230705 06:40:32.187"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:42:02.289" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:42:02.289" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:42:02.289" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//a[contains(text(), \'Simulate success to merchant\')]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:40:32.189" endtime="20230705 06:42:02.289"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230705 06:42:02.290" endtime="20230705 06:42:02.290"/>
</kw>
<status status="FAIL" starttime="20230705 06:40:32.188" endtime="20230705 06:42:02.291"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.292" endtime="20230705 06:42:02.292"/>
</kw>
<status status="FAIL" starttime="20230705 06:40:32.188" endtime="20230705 06:42:02.292"/>
</kw>
<status status="FAIL" starttime="20230705 06:40:14.994" endtime="20230705 06:42:02.293"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.293" endtime="20230705 06:42:02.293"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.294" endtime="20230705 06:42:02.294"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.294" endtime="20230705 06:42:02.294"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.294" endtime="20230705 06:42:02.294"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.294" endtime="20230705 06:42:02.295"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.295" endtime="20230705 06:42:02.295"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.295" endtime="20230705 06:42:02.295"/>
</kw>
<kw name="Notice &quot;Invite sent&quot; displays" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.295" endtime="20230705 06:42:02.295"/>
</kw>
<kw name="Status of guest confirmation is changed to &quot;Invite sent, not check-in&quot;" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.296" endtime="20230705 06:42:02.296"/>
</kw>
<kw name="Verify Guest information component" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.296" endtime="20230705 06:42:02.296"/>
</kw>
<kw name="Verify Booking summary" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.296" endtime="20230705 06:42:02.296"/>
</kw>
<kw name="Verify Guest information popup when guest not checkin" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.296" endtime="20230705 06:42:02.297"/>
</kw>
<kw name="Click Uninvite button" library="booking">
<status status="NOT RUN" starttime="20230705 06:42:02.297" endtime="20230705 06:42:02.297"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:42:02.879" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:42:02.297" endtime="20230705 06:42:02.879"/>
</kw>
<status status="FAIL" starttime="20230705 06:40:06.440" endtime="20230705 06:42:02.879">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//a[contains(text(), \'Simulate success to merchant\')]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<status status="FAIL" starttime="20230705 06:30:07.376" endtime="20230705 06:42:02.884"/>
</suite>
<status status="FAIL" starttime="20230705 06:30:07.374" endtime="20230705 06:42:02.890"/>
</suite>
<status status="FAIL" starttime="20230705 06:30:07.373" endtime="20230705 06:42:02.893"/>
</suite>
<status status="FAIL" starttime="20230705 06:30:07.371" endtime="20230705 06:42:02.895"/>
</suite>
<doc>Argument file for running tests on Omena test environmen (test4)</doc>
<status status="FAIL" starttime="20230705 06:30:07.354" endtime="20230705 06:42:02.898"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="3" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-558">Testsuites.BUI.Feature.Online Check In.BUI2-558</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
