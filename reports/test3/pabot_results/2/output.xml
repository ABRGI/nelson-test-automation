<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.12 on linux)" generated="20230704 04:04:19.853" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-558" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-558.robot">
<test id="s1-s1-s1-s1-s1-t1" name="Verify Page title when marking someone else as a guest" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:04:21.130" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/374f74e5-61af-489d-9895-3ce0103cf342"}</msg>
<msg timestamp="20230704 04:04:21.901" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/374f74e5-61af-489d-9895-3ce0103cf342"}</msg>
<status status="PASS" starttime="20230704 04:04:21.129" endtime="20230704 04:04:21.901"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:04:21.906" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230704 04:04:21.902" endtime="20230704 04:04:21.906"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:04:21.907" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:04:21.981" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:04:21.981" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:04:21.906" endtime="20230704 04:04:21.982"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:04:24.762" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:04:21.982" endtime="20230704 04:04:24.763"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:04:24.763" endtime="20230704 04:04:25.868"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:04:25.874" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:04:25.870" endtime="20230704 04:04:25.874"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:04:25.927" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:04:25.927" level="INFO">${els} = ['element=c9aacba3-dafc-4206-893f-66c70ef14f59']</msg>
<status status="PASS" starttime="20230704 04:04:25.875" endtime="20230704 04:04:25.927"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:04:25.928" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:04:25.928" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:04:25.928" endtime="20230704 04:04:25.928"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:04:25.929" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:04:25.929" endtime="20230704 04:04:25.929"/>
</kw>
<status status="PASS" starttime="20230704 04:04:25.929" endtime="20230704 04:04:25.929"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:04:25.930" endtime="20230704 04:04:25.930"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:04:25.930" endtime="20230704 04:04:25.930"/>
</branch>
<status status="PASS" starttime="20230704 04:04:25.928" endtime="20230704 04:04:25.930"/>
</if>
<status status="PASS" starttime="20230704 04:04:25.875" endtime="20230704 04:04:25.930"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:04:25.931" endtime="20230704 04:04:25.931"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:04:25.930" endtime="20230704 04:04:25.931"/>
</branch>
<status status="PASS" starttime="20230704 04:04:25.874" endtime="20230704 04:04:25.931"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:04:25.938" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:04:25.931" endtime="20230704 04:04:25.938"/>
</kw>
<msg timestamp="20230704 04:04:25.939" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:04:25.869" endtime="20230704 04:04:25.939"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:25.940" endtime="20230704 04:04:26.046"/>
</kw>
<status status="PASS" starttime="20230704 04:04:25.939" endtime="20230704 04:04:26.046"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:04:26.047" endtime="20230704 04:04:26.047"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:04:26.046" endtime="20230704 04:04:26.047"/>
</branch>
<status status="PASS" starttime="20230704 04:04:25.939" endtime="20230704 04:04:26.047"/>
</if>
<status status="PASS" starttime="20230704 04:04:25.869" endtime="20230704 04:04:26.047"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:04:26.053" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:04:26.048" endtime="20230704 04:04:26.053"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:04:26.054" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:04:26.054" endtime="20230704 04:04:26.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:04:26.054" endtime="20230704 04:04:26.055"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.048" endtime="20230704 04:04:26.055"/>
</kw>
<status status="PASS" starttime="20230704 04:04:21.126" endtime="20230704 04:04:26.055"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:04:26.060" endtime="20230704 04:04:26.060"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:04:26.060" endtime="20230704 04:04:26.060"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:04:26.064" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:04:26.064" endtime="20230704 04:04:26.064"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:26.065" endtime="20230704 04:04:26.425"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:26.445" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:26.426" endtime="20230704 04:04:26.446"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.425" endtime="20230704 04:04:26.446"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:26.446" endtime="20230704 04:04:26.676"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:26.748" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:04:26.677" endtime="20230704 04:04:26.749"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.064" endtime="20230704 04:04:26.749"/>
</branch>
<status status="PASS" starttime="20230704 04:04:26.059" endtime="20230704 04:04:26.749"/>
</if>
<status status="PASS" starttime="20230704 04:04:26.056" endtime="20230704 04:04:26.749"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:04:26.750" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:04:26.750" endtime="20230704 04:04:26.751"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.750" endtime="20230704 04:04:26.751"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:04:26.752" endtime="20230704 04:04:26.752"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.751" endtime="20230704 04:04:26.752"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:26.753" endtime="20230704 04:04:27.370"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.752" endtime="20230704 04:04:27.371"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:30.282" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:27.375" endtime="20230704 04:04:30.282"/>
</kw>
<status status="PASS" starttime="20230704 04:04:27.372" endtime="20230704 04:04:30.282"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:04:30.549" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:04:30.283" endtime="20230704 04:04:30.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:04:30.549" endtime="20230704 04:04:30.550"/>
</kw>
<status status="PASS" starttime="20230704 04:04:27.371" endtime="20230704 04:04:30.550"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:30.551" endtime="20230704 04:04:32.284"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:33.243" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:32.285" endtime="20230704 04:04:33.243"/>
</kw>
<status status="PASS" starttime="20230704 04:04:32.284" endtime="20230704 04:04:33.244"/>
</kw>
<status status="PASS" starttime="20230704 04:04:30.550" endtime="20230704 04:04:33.244"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:04:33.257" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:04:33.257" level="INFO">${elements} = ['element=e58ecd08-ac46-4ec6-8333-4fff8423d166']</msg>
<status status="PASS" starttime="20230704 04:04:33.245" endtime="20230704 04:04:33.257"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:04:33.258" level="INFO">${first_element} = element=e58ecd08-ac46-4ec6-8333-4fff8423d166</msg>
<status status="PASS" starttime="20230704 04:04:33.258" endtime="20230704 04:04:33.258"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:33.258" endtime="20230704 04:04:33.404"/>
</kw>
<status status="PASS" starttime="20230704 04:04:33.245" endtime="20230704 04:04:33.404"/>
</kw>
<status status="PASS" starttime="20230704 04:04:33.244" endtime="20230704 04:04:33.404"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:33.406" endtime="20230704 04:04:34.865"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:34.880" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:34.866" endtime="20230704 04:04:34.880"/>
</kw>
<status status="PASS" starttime="20230704 04:04:34.866" endtime="20230704 04:04:34.881"/>
</kw>
<status status="PASS" starttime="20230704 04:04:33.405" endtime="20230704 04:04:34.881"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:34.882" endtime="20230704 04:04:35.157"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:35.175" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:35.158" endtime="20230704 04:04:35.175"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.157" endtime="20230704 04:04:35.175"/>
</kw>
<status status="PASS" starttime="20230704 04:04:34.881" endtime="20230704 04:04:35.176"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:35.177" endtime="20230704 04:04:35.420"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:35.575" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:35.421" endtime="20230704 04:04:35.575"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.421" endtime="20230704 04:04:35.575"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.176" endtime="20230704 04:04:35.576"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:35.576" endtime="20230704 04:04:35.733"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:35.748" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:35.734" endtime="20230704 04:04:35.748"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.733" endtime="20230704 04:04:35.748"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.576" endtime="20230704 04:04:35.749"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:35.749" endtime="20230704 04:04:36.113"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:36.182" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:36.114" endtime="20230704 04:04:36.182"/>
</kw>
<status status="PASS" starttime="20230704 04:04:36.114" endtime="20230704 04:04:36.183"/>
</kw>
<status status="PASS" starttime="20230704 04:04:35.749" endtime="20230704 04:04:36.183"/>
</kw>
<status status="PASS" starttime="20230704 04:04:33.405" endtime="20230704 04:04:36.183"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:36.185" endtime="20230704 04:04:36.265"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:04:36.266" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:04:36.265" endtime="20230704 04:04:36.354"/>
</kw>
<status status="PASS" starttime="20230704 04:04:36.184" endtime="20230704 04:04:36.355"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:36.356" endtime="20230704 04:04:36.608"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:04:36.609" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:04:36.609" endtime="20230704 04:04:36.782"/>
</kw>
<status status="PASS" starttime="20230704 04:04:36.355" endtime="20230704 04:04:36.783"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:36.784" endtime="20230704 04:04:36.989"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:04:36.990" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:04:36.989" endtime="20230704 04:04:37.152"/>
</kw>
<status status="PASS" starttime="20230704 04:04:36.783" endtime="20230704 04:04:37.153"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:37.154" endtime="20230704 04:04:37.398"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:04:37.398" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:04:37.398" endtime="20230704 04:04:37.464"/>
</kw>
<status status="PASS" starttime="20230704 04:04:37.153" endtime="20230704 04:04:37.464"/>
</kw>
<status status="PASS" starttime="20230704 04:04:36.184" endtime="20230704 04:04:37.465"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:37.465" endtime="20230704 04:04:37.694"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:37.694" endtime="20230704 04:04:38.040"/>
</kw>
<status status="PASS" starttime="20230704 04:04:37.465" endtime="20230704 04:04:38.041"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:38.041" endtime="20230704 04:04:38.242"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:38.242" endtime="20230704 04:04:38.571"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:38.572" endtime="20230704 04:04:41.316"/>
</kw>
<status status="PASS" starttime="20230704 04:04:38.041" endtime="20230704 04:04:41.317"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:47.812" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:41.318" endtime="20230704 04:04:47.812"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:47.813" endtime="20230704 04:04:52.908"/>
</kw>
<status status="PASS" starttime="20230704 04:04:41.318" endtime="20230704 04:04:52.908"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:55.312" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:52.910" endtime="20230704 04:04:55.312"/>
</kw>
<status status="PASS" starttime="20230704 04:04:52.909" endtime="20230704 04:04:55.313"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:55.353" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:55.314" endtime="20230704 04:04:55.353"/>
</kw>
<status status="PASS" starttime="20230704 04:04:55.313" endtime="20230704 04:04:55.353"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:55.354" endtime="20230704 04:04:56.630"/>
</kw>
<status status="PASS" starttime="20230704 04:04:55.313" endtime="20230704 04:04:56.631"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:04:56.812" level="INFO">Text: 'Booking number: 948547662'</msg>
<msg timestamp="20230704 04:04:56.812" level="INFO">${str} = Booking number: 948547662</msg>
<status status="PASS" starttime="20230704 04:04:56.632" endtime="20230704 04:04:56.813"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:04:56.813" endtime="20230704 04:04:56.813"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:04:56.814" level="INFO">${str} = Booking number: 948547662</msg>
<status status="PASS" starttime="20230704 04:04:56.814" endtime="20230704 04:04:56.814"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:04:56.816" level="INFO">${str} = Booking number: 948547662</msg>
<status status="PASS" starttime="20230704 04:04:56.815" endtime="20230704 04:04:56.816"/>
</kw>
<status status="PASS" starttime="20230704 04:04:56.631" endtime="20230704 04:04:56.816"/>
</kw>
<status status="PASS" starttime="20230704 04:04:52.909" endtime="20230704 04:04:56.817"/>
</kw>
<status status="PASS" starttime="20230704 04:04:41.317" endtime="20230704 04:04:56.818"/>
</kw>
<status status="PASS" starttime="20230704 04:04:26.055" endtime="20230704 04:04:56.818"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:04:56.844" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:04:56.822" endtime="20230704 04:04:56.844"/>
</kw>
<status status="PASS" starttime="20230704 04:04:56.820" endtime="20230704 04:04:56.844"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:56.844" endtime="20230704 04:04:56.964"/>
</kw>
<status status="PASS" starttime="20230704 04:04:56.820" endtime="20230704 04:04:56.965"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:04:56.966" endtime="20230704 04:04:57.853"/>
</kw>
<status status="PASS" starttime="20230704 04:04:56.965" endtime="20230704 04:04:57.854"/>
</kw>
<kw name="Edit guest popup change to &quot;Booker information&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[normalize-space()='Booker information' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:03.977" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:05:03.978" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:05:03.978" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[normalize-space()=\'Booker information\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:04:57.855" endtime="20230704 04:05:03.980"/>
</kw>
<msg timestamp="20230704 04:05:03.980" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:04:57.855" endtime="20230704 04:05:03.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:05:03.981" endtime="20230704 04:05:03.981"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:05:03.982" endtime="20230704 04:05:03.982"/>
</kw>
<status status="PASS" starttime="20230704 04:05:03.982" endtime="20230704 04:05:03.983"/>
</kw>
<status status="PASS" starttime="20230704 04:04:57.854" endtime="20230704 04:05:03.983"/>
</kw>
<status status="PASS" starttime="20230704 04:04:57.854" endtime="20230704 04:05:03.983"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:05:04.562" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:05:03.984" endtime="20230704 04:05:04.562"/>
</kw>
<status status="PASS" starttime="20230704 04:04:21.122" endtime="20230704 04:05:04.562"/>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Verify notification when marking someone else as a guest" line="17">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:05:04.567" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/df46bebe-8586-41cc-8c93-19d2873d34ad"}</msg>
<msg timestamp="20230704 04:05:05.115" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/df46bebe-8586-41cc-8c93-19d2873d34ad"}</msg>
<status status="PASS" starttime="20230704 04:05:04.566" endtime="20230704 04:05:05.115"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:05:05.116" endtime="20230704 04:05:05.116"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:05:05.117" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:05:05.179" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:05:05.179" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:05:05.117" endtime="20230704 04:05:05.179"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:05:07.425" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:05:05.179" endtime="20230704 04:05:07.425"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:05:07.425" endtime="20230704 04:05:08.514"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:05:08.519" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:05:08.516" endtime="20230704 04:05:08.519"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:05:08.563" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:05:08.563" level="INFO">${els} = ['element=6aea67da-c7ca-41fb-8ca9-3e3de1150bda']</msg>
<status status="PASS" starttime="20230704 04:05:08.520" endtime="20230704 04:05:08.563"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:05:08.564" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:05:08.564" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:05:08.563" endtime="20230704 04:05:08.564"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:05:08.565" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:05:08.565" endtime="20230704 04:05:08.565"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.564" endtime="20230704 04:05:08.565"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:05:08.565" endtime="20230704 04:05:08.566"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:08.565" endtime="20230704 04:05:08.566"/>
</branch>
<status status="PASS" starttime="20230704 04:05:08.564" endtime="20230704 04:05:08.566"/>
</if>
<status status="PASS" starttime="20230704 04:05:08.519" endtime="20230704 04:05:08.566"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:05:08.566" endtime="20230704 04:05:08.567"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:08.566" endtime="20230704 04:05:08.567"/>
</branch>
<status status="PASS" starttime="20230704 04:05:08.519" endtime="20230704 04:05:08.567"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:05:08.569" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:05:08.567" endtime="20230704 04:05:08.570"/>
</kw>
<msg timestamp="20230704 04:05:08.570" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:05:08.515" endtime="20230704 04:05:08.570"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:08.571" endtime="20230704 04:05:08.651"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.570" endtime="20230704 04:05:08.651"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:05:08.651" endtime="20230704 04:05:08.652"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:08.651" endtime="20230704 04:05:08.652"/>
</branch>
<status status="PASS" starttime="20230704 04:05:08.570" endtime="20230704 04:05:08.652"/>
</if>
<status status="PASS" starttime="20230704 04:05:08.515" endtime="20230704 04:05:08.652"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:05:08.655" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:05:08.653" endtime="20230704 04:05:08.655"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:05:08.656" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:05:08.655" endtime="20230704 04:05:08.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:05:08.656" endtime="20230704 04:05:08.656"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.652" endtime="20230704 04:05:08.657"/>
</kw>
<status status="PASS" starttime="20230704 04:05:04.566" endtime="20230704 04:05:08.657"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:05:08.659" endtime="20230704 04:05:08.659"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:08.659" endtime="20230704 04:05:08.659"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:05:08.660" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:05:08.660" endtime="20230704 04:05:08.660"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:08.660" endtime="20230704 04:05:08.753"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:08.826" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:08.754" endtime="20230704 04:05:08.827"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.754" endtime="20230704 04:05:08.828"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:08.828" endtime="20230704 04:05:09.014"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:09.037" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:05:09.015" endtime="20230704 04:05:09.037"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.660" endtime="20230704 04:05:09.037"/>
</branch>
<status status="PASS" starttime="20230704 04:05:08.659" endtime="20230704 04:05:09.038"/>
</if>
<status status="PASS" starttime="20230704 04:05:08.658" endtime="20230704 04:05:09.038"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:05:09.039" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:05:09.039" endtime="20230704 04:05:09.039"/>
</kw>
<status status="PASS" starttime="20230704 04:05:09.038" endtime="20230704 04:05:09.040"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:05:09.041" endtime="20230704 04:05:09.041"/>
</kw>
<status status="PASS" starttime="20230704 04:05:09.040" endtime="20230704 04:05:09.042"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:09.042" endtime="20230704 04:05:09.536"/>
</kw>
<status status="PASS" starttime="20230704 04:05:09.042" endtime="20230704 04:05:09.536"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:12.315" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:09.538" endtime="20230704 04:05:12.315"/>
</kw>
<status status="PASS" starttime="20230704 04:05:09.537" endtime="20230704 04:05:12.315"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:05:12.571" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:05:12.316" endtime="20230704 04:05:12.571"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:05:12.572" endtime="20230704 04:05:12.572"/>
</kw>
<status status="PASS" starttime="20230704 04:05:09.537" endtime="20230704 04:05:12.573"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:12.575" endtime="20230704 04:05:15.026"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:15.999" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:15.027" endtime="20230704 04:05:15.999"/>
</kw>
<status status="PASS" starttime="20230704 04:05:15.026" endtime="20230704 04:05:15.999"/>
</kw>
<status status="PASS" starttime="20230704 04:05:12.573" endtime="20230704 04:05:16.000"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:05:16.037" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:05:16.037" level="INFO">${elements} = ['element=b69ca4fd-181b-4245-847a-93e9c64a9291']</msg>
<status status="PASS" starttime="20230704 04:05:16.001" endtime="20230704 04:05:16.037"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:05:16.038" level="INFO">${first_element} = element=b69ca4fd-181b-4245-847a-93e9c64a9291</msg>
<status status="PASS" starttime="20230704 04:05:16.037" endtime="20230704 04:05:16.038"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:16.038" endtime="20230704 04:05:16.363"/>
</kw>
<status status="PASS" starttime="20230704 04:05:16.000" endtime="20230704 04:05:16.363"/>
</kw>
<status status="PASS" starttime="20230704 04:05:16.000" endtime="20230704 04:05:16.363"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:16.364" endtime="20230704 04:05:18.475"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:18.492" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:18.476" endtime="20230704 04:05:18.493"/>
</kw>
<status status="PASS" starttime="20230704 04:05:18.476" endtime="20230704 04:05:18.493"/>
</kw>
<status status="PASS" starttime="20230704 04:05:16.364" endtime="20230704 04:05:18.493"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:18.494" endtime="20230704 04:05:19.322"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:19.430" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:19.324" endtime="20230704 04:05:19.430"/>
</kw>
<status status="PASS" starttime="20230704 04:05:19.323" endtime="20230704 04:05:19.431"/>
</kw>
<status status="PASS" starttime="20230704 04:05:18.494" endtime="20230704 04:05:19.431"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:19.432" endtime="20230704 04:05:19.688"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:19.844" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:19.689" endtime="20230704 04:05:19.844"/>
</kw>
<status status="PASS" starttime="20230704 04:05:19.689" endtime="20230704 04:05:19.844"/>
</kw>
<status status="PASS" starttime="20230704 04:05:19.431" endtime="20230704 04:05:19.844"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:19.845" endtime="20230704 04:05:20.153"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:20.167" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:20.155" endtime="20230704 04:05:20.167"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.154" endtime="20230704 04:05:20.168"/>
</kw>
<status status="PASS" starttime="20230704 04:05:19.845" endtime="20230704 04:05:20.168"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:20.169" endtime="20230704 04:05:20.620"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:20.639" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:20.621" endtime="20230704 04:05:20.639"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.621" endtime="20230704 04:05:20.640"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.168" endtime="20230704 04:05:20.640"/>
</kw>
<status status="PASS" starttime="20230704 04:05:16.363" endtime="20230704 04:05:20.640"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:20.642" endtime="20230704 04:05:20.818"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:05:20.819" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:05:20.819" endtime="20230704 04:05:20.952"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.641" endtime="20230704 04:05:20.952"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:20.953" endtime="20230704 04:05:21.277"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:05:21.278" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:05:21.277" endtime="20230704 04:05:21.442"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.952" endtime="20230704 04:05:21.443"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:21.444" endtime="20230704 04:05:21.681"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:05:21.682" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:05:21.682" endtime="20230704 04:05:21.994"/>
</kw>
<status status="PASS" starttime="20230704 04:05:21.443" endtime="20230704 04:05:21.994"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:21.995" endtime="20230704 04:05:22.287"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:05:22.288" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:05:22.287" endtime="20230704 04:05:22.399"/>
</kw>
<status status="PASS" starttime="20230704 04:05:21.994" endtime="20230704 04:05:22.400"/>
</kw>
<status status="PASS" starttime="20230704 04:05:20.640" endtime="20230704 04:05:22.400"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:22.401" endtime="20230704 04:05:22.682"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:22.682" endtime="20230704 04:05:23.003"/>
</kw>
<status status="PASS" starttime="20230704 04:05:22.400" endtime="20230704 04:05:23.003"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:23.004" endtime="20230704 04:05:23.216"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:23.217" endtime="20230704 04:05:23.516"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:23.517" endtime="20230704 04:05:25.955"/>
</kw>
<status status="PASS" starttime="20230704 04:05:23.003" endtime="20230704 04:05:25.955"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:30.435" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:25.957" endtime="20230704 04:05:30.436"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:30.436" endtime="20230704 04:05:33.249"/>
</kw>
<status status="PASS" starttime="20230704 04:05:25.956" endtime="20230704 04:05:33.250"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:36.263" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:33.251" endtime="20230704 04:05:36.263"/>
</kw>
<status status="PASS" starttime="20230704 04:05:33.251" endtime="20230704 04:05:36.264"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:36.301" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:36.265" endtime="20230704 04:05:36.301"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.264" endtime="20230704 04:05:36.301"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:36.302" endtime="20230704 04:05:36.611"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.264" endtime="20230704 04:05:36.612"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:05:36.669" level="INFO">Text: 'Booking number: 632511219'</msg>
<msg timestamp="20230704 04:05:36.669" level="INFO">${str} = Booking number: 632511219</msg>
<status status="PASS" starttime="20230704 04:05:36.612" endtime="20230704 04:05:36.669"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:05:36.669" endtime="20230704 04:05:36.670"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:05:36.671" level="INFO">${str} = Booking number: 632511219</msg>
<status status="PASS" starttime="20230704 04:05:36.670" endtime="20230704 04:05:36.671"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:05:36.671" level="INFO">${str} = Booking number: 632511219</msg>
<status status="PASS" starttime="20230704 04:05:36.671" endtime="20230704 04:05:36.671"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.612" endtime="20230704 04:05:36.671"/>
</kw>
<status status="PASS" starttime="20230704 04:05:33.250" endtime="20230704 04:05:36.672"/>
</kw>
<status status="PASS" starttime="20230704 04:05:25.955" endtime="20230704 04:05:36.672"/>
</kw>
<status status="PASS" starttime="20230704 04:05:08.657" endtime="20230704 04:05:36.672"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:36.685" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:36.675" endtime="20230704 04:05:36.685"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.673" endtime="20230704 04:05:36.685"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:36.685" endtime="20230704 04:05:36.886"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.673" endtime="20230704 04:05:36.886"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:36.887" endtime="20230704 04:05:37.986"/>
</kw>
<status status="PASS" starttime="20230704 04:05:36.886" endtime="20230704 04:05:37.987"/>
</kw>
<kw name="Verify notification &quot;Before iniviting someone else to be the main guest in this room, you must fill in your own information&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[normalize-space()='Before inviting someone else to be the main guest in this room, you must fill in your own information.' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:44.125" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:05:44.125" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:05:44.126" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[normalize-space()=\'Before inviting someone else to be the main guest in this room, you must fill in your own information.\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:05:37.989" endtime="20230704 04:05:44.126"/>
</kw>
<msg timestamp="20230704 04:05:44.126" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:05:37.988" endtime="20230704 04:05:44.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:05:44.127" endtime="20230704 04:05:44.127"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:05:44.128" endtime="20230704 04:05:44.129"/>
</kw>
<status status="PASS" starttime="20230704 04:05:44.128" endtime="20230704 04:05:44.129"/>
</kw>
<status status="PASS" starttime="20230704 04:05:37.988" endtime="20230704 04:05:44.129"/>
</kw>
<status status="PASS" starttime="20230704 04:05:37.987" endtime="20230704 04:05:44.129"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:05:44.738" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:05:44.130" endtime="20230704 04:05:44.738"/>
</kw>
<status status="PASS" starttime="20230704 04:05:04.565" endtime="20230704 04:05:44.739"/>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Verify room name in Edit guest popup when marking someone else as a guest" line="23">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:05:44.744" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/07ed332c-cd0d-4db0-9650-39dcd6e51dee"}</msg>
<msg timestamp="20230704 04:05:45.300" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/07ed332c-cd0d-4db0-9650-39dcd6e51dee"}</msg>
<status status="PASS" starttime="20230704 04:05:44.743" endtime="20230704 04:05:45.301"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:05:45.301" endtime="20230704 04:05:45.302"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:05:45.302" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:05:45.383" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:05:45.383" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:05:45.302" endtime="20230704 04:05:45.384"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:05:47.606" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:05:45.384" endtime="20230704 04:05:47.606"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:05:47.606" endtime="20230704 04:05:48.671"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:05:48.676" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:05:48.673" endtime="20230704 04:05:48.676"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:05:48.729" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:05:48.730" level="INFO">${els} = ['element=019d5908-599c-4a7d-a86c-70780c547481']</msg>
<status status="PASS" starttime="20230704 04:05:48.677" endtime="20230704 04:05:48.730"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:05:48.730" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:05:48.730" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:05:48.730" endtime="20230704 04:05:48.730"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:05:48.731" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:05:48.731" endtime="20230704 04:05:48.731"/>
</kw>
<status status="PASS" starttime="20230704 04:05:48.731" endtime="20230704 04:05:48.732"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:05:48.732" endtime="20230704 04:05:48.732"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:48.732" endtime="20230704 04:05:48.732"/>
</branch>
<status status="PASS" starttime="20230704 04:05:48.731" endtime="20230704 04:05:48.733"/>
</if>
<status status="PASS" starttime="20230704 04:05:48.676" endtime="20230704 04:05:48.733"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:05:48.733" endtime="20230704 04:05:48.733"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:48.733" endtime="20230704 04:05:48.733"/>
</branch>
<status status="PASS" starttime="20230704 04:05:48.676" endtime="20230704 04:05:48.733"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:05:48.736" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:05:48.734" endtime="20230704 04:05:48.736"/>
</kw>
<msg timestamp="20230704 04:05:48.737" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:05:48.672" endtime="20230704 04:05:48.737"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:48.737" endtime="20230704 04:05:48.826"/>
</kw>
<status status="PASS" starttime="20230704 04:05:48.737" endtime="20230704 04:05:48.826"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:05:48.827" endtime="20230704 04:05:48.827"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:48.827" endtime="20230704 04:05:48.828"/>
</branch>
<status status="PASS" starttime="20230704 04:05:48.737" endtime="20230704 04:05:48.828"/>
</if>
<status status="PASS" starttime="20230704 04:05:48.672" endtime="20230704 04:05:48.828"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:05:48.834" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:05:48.829" endtime="20230704 04:05:48.834"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:05:48.835" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:05:48.834" endtime="20230704 04:05:48.835"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:05:48.835" endtime="20230704 04:05:48.836"/>
</kw>
<status status="PASS" starttime="20230704 04:05:48.828" endtime="20230704 04:05:48.836"/>
</kw>
<status status="PASS" starttime="20230704 04:05:44.742" endtime="20230704 04:05:48.836"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:05:48.838" endtime="20230704 04:05:48.838"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:05:48.837" endtime="20230704 04:05:48.838"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:05:48.839" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:05:48.838" endtime="20230704 04:05:48.839"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:48.839" endtime="20230704 04:05:49.111"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:49.144" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:49.112" endtime="20230704 04:05:49.145"/>
</kw>
<status status="PASS" starttime="20230704 04:05:49.111" endtime="20230704 04:05:49.145"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:49.145" endtime="20230704 04:05:49.417"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:49.545" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:05:49.417" endtime="20230704 04:05:49.546"/>
</kw>
<status status="PASS" starttime="20230704 04:05:48.838" endtime="20230704 04:05:49.546"/>
</branch>
<status status="PASS" starttime="20230704 04:05:48.837" endtime="20230704 04:05:49.546"/>
</if>
<status status="PASS" starttime="20230704 04:05:48.837" endtime="20230704 04:05:49.546"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:05:49.548" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:05:49.548" endtime="20230704 04:05:49.548"/>
</kw>
<status status="PASS" starttime="20230704 04:05:49.547" endtime="20230704 04:05:49.549"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:05:49.551" endtime="20230704 04:05:49.551"/>
</kw>
<status status="PASS" starttime="20230704 04:05:49.549" endtime="20230704 04:05:49.552"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:49.552" endtime="20230704 04:05:50.297"/>
</kw>
<status status="PASS" starttime="20230704 04:05:49.552" endtime="20230704 04:05:50.298"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:55.400" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:50.301" endtime="20230704 04:05:55.400"/>
</kw>
<status status="PASS" starttime="20230704 04:05:50.299" endtime="20230704 04:05:55.400"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:05:55.656" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:05:55.401" endtime="20230704 04:05:55.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:05:55.656" endtime="20230704 04:05:55.657"/>
</kw>
<status status="PASS" starttime="20230704 04:05:50.298" endtime="20230704 04:05:55.657"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:55.658" endtime="20230704 04:05:57.257"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:58.208" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:57.258" endtime="20230704 04:05:58.208"/>
</kw>
<status status="PASS" starttime="20230704 04:05:57.258" endtime="20230704 04:05:58.208"/>
</kw>
<status status="PASS" starttime="20230704 04:05:55.657" endtime="20230704 04:05:58.209"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:05:58.223" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:05:58.224" level="INFO">${elements} = ['element=15e4cf30-64aa-458f-8c48-21c4cef9a413']</msg>
<status status="PASS" starttime="20230704 04:05:58.211" endtime="20230704 04:05:58.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:05:58.224" level="INFO">${first_element} = element=15e4cf30-64aa-458f-8c48-21c4cef9a413</msg>
<status status="PASS" starttime="20230704 04:05:58.224" endtime="20230704 04:05:58.224"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:58.225" endtime="20230704 04:05:58.371"/>
</kw>
<status status="PASS" starttime="20230704 04:05:58.210" endtime="20230704 04:05:58.372"/>
</kw>
<status status="PASS" starttime="20230704 04:05:58.209" endtime="20230704 04:05:58.372"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:58.373" endtime="20230704 04:05:59.788"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:05:59.805" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:05:59.789" endtime="20230704 04:05:59.805"/>
</kw>
<status status="PASS" starttime="20230704 04:05:59.788" endtime="20230704 04:05:59.805"/>
</kw>
<status status="PASS" starttime="20230704 04:05:58.373" endtime="20230704 04:05:59.805"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:05:59.806" endtime="20230704 04:06:00.183"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:00.199" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:00.184" endtime="20230704 04:06:00.199"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.183" endtime="20230704 04:06:00.199"/>
</kw>
<status status="PASS" starttime="20230704 04:05:59.806" endtime="20230704 04:06:00.200"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:00.200" endtime="20230704 04:06:00.696"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:00.754" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:00.697" endtime="20230704 04:06:00.754"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.697" endtime="20230704 04:06:00.755"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.200" endtime="20230704 04:06:00.755"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:00.756" endtime="20230704 04:06:00.936"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:00.952" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:00.937" endtime="20230704 04:06:00.952"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.936" endtime="20230704 04:06:00.953"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.755" endtime="20230704 04:06:00.953"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:00.954" endtime="20230704 04:06:01.267"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:01.283" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:01.268" endtime="20230704 04:06:01.283"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.267" endtime="20230704 04:06:01.284"/>
</kw>
<status status="PASS" starttime="20230704 04:06:00.953" endtime="20230704 04:06:01.284"/>
</kw>
<status status="PASS" starttime="20230704 04:05:58.372" endtime="20230704 04:06:01.284"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:01.286" endtime="20230704 04:06:01.466"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:01.467" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:01.466" endtime="20230704 04:06:01.536"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.285" endtime="20230704 04:06:01.536"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:01.538" endtime="20230704 04:06:01.689"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:01.690" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:01.689" endtime="20230704 04:06:01.762"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.537" endtime="20230704 04:06:01.762"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:01.763" endtime="20230704 04:06:01.906"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:01.907" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:01.907" endtime="20230704 04:06:01.978"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.763" endtime="20230704 04:06:01.979"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:01.980" endtime="20230704 04:06:02.120"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:02.121" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:02.120" endtime="20230704 04:06:02.147"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.979" endtime="20230704 04:06:02.148"/>
</kw>
<status status="PASS" starttime="20230704 04:06:01.285" endtime="20230704 04:06:02.148"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:02.149" endtime="20230704 04:06:02.291"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:02.291" endtime="20230704 04:06:02.575"/>
</kw>
<status status="PASS" starttime="20230704 04:06:02.148" endtime="20230704 04:06:02.576"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:02.577" endtime="20230704 04:06:02.703"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:02.703" endtime="20230704 04:06:02.906"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:02.906" endtime="20230704 04:06:03.099"/>
</kw>
<status status="PASS" starttime="20230704 04:06:02.576" endtime="20230704 04:06:03.099"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:07.798" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:03.100" endtime="20230704 04:06:07.798"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:07.799" endtime="20230704 04:06:12.036"/>
</kw>
<status status="PASS" starttime="20230704 04:06:03.100" endtime="20230704 04:06:12.037"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:14.558" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:12.038" endtime="20230704 04:06:14.558"/>
</kw>
<status status="PASS" starttime="20230704 04:06:12.037" endtime="20230704 04:06:14.559"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:14.615" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:14.560" endtime="20230704 04:06:14.615"/>
</kw>
<status status="PASS" starttime="20230704 04:06:14.560" endtime="20230704 04:06:14.615"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:14.616" endtime="20230704 04:06:15.061"/>
</kw>
<status status="PASS" starttime="20230704 04:06:14.559" endtime="20230704 04:06:15.061"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:06:15.276" level="INFO">Text: 'Booking number: 948632031'</msg>
<msg timestamp="20230704 04:06:15.276" level="INFO">${str} = Booking number: 948632031</msg>
<status status="PASS" starttime="20230704 04:06:15.062" endtime="20230704 04:06:15.276"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:06:15.277" endtime="20230704 04:06:15.277"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:06:15.279" level="INFO">${str} = Booking number: 948632031</msg>
<status status="PASS" starttime="20230704 04:06:15.278" endtime="20230704 04:06:15.279"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:06:15.280" level="INFO">${str} = Booking number: 948632031</msg>
<status status="PASS" starttime="20230704 04:06:15.279" endtime="20230704 04:06:15.280"/>
</kw>
<status status="PASS" starttime="20230704 04:06:15.062" endtime="20230704 04:06:15.280"/>
</kw>
<status status="PASS" starttime="20230704 04:06:12.037" endtime="20230704 04:06:15.280"/>
</kw>
<status status="PASS" starttime="20230704 04:06:03.099" endtime="20230704 04:06:15.281"/>
</kw>
<status status="PASS" starttime="20230704 04:05:48.836" endtime="20230704 04:06:15.281"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:15.344" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:15.282" endtime="20230704 04:06:15.344"/>
</kw>
<status status="PASS" starttime="20230704 04:06:15.281" endtime="20230704 04:06:15.344"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:15.344" endtime="20230704 04:06:15.469"/>
</kw>
<status status="PASS" starttime="20230704 04:06:15.281" endtime="20230704 04:06:15.469"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:15.470" endtime="20230704 04:06:16.357"/>
</kw>
<status status="PASS" starttime="20230704 04:06:15.469" endtime="20230704 04:06:16.358"/>
</kw>
<kw name="Room name is removed" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[contains(@class,'guest-modal')]//p[normalize-space()='Standard room' ]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:22.501" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:06:22.501" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:06:22.502" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@class,\'guest-modal\')]//p[normalize-space()=\'Standard room\' ]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:06:16.360" endtime="20230704 04:06:22.502"/>
</kw>
<msg timestamp="20230704 04:06:22.502" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:06:16.359" endtime="20230704 04:06:22.503"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:06:22.503" endtime="20230704 04:06:22.503"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:06:22.504" endtime="20230704 04:06:22.505"/>
</kw>
<status status="PASS" starttime="20230704 04:06:22.504" endtime="20230704 04:06:22.505"/>
</kw>
<status status="PASS" starttime="20230704 04:06:16.359" endtime="20230704 04:06:22.505"/>
</kw>
<status status="PASS" starttime="20230704 04:06:16.358" endtime="20230704 04:06:22.505"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:06:23.088" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:06:22.506" endtime="20230704 04:06:23.088"/>
</kw>
<status status="PASS" starttime="20230704 04:05:44.742" endtime="20230704 04:06:23.088"/>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Verify Purpose of trip checkbox in Edit guest popup when marking someone else as a guest" line="29">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:06:23.093" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/98950f66-4b60-4f0e-b174-47c6085ee541"}</msg>
<msg timestamp="20230704 04:06:23.654" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/98950f66-4b60-4f0e-b174-47c6085ee541"}</msg>
<status status="PASS" starttime="20230704 04:06:23.092" endtime="20230704 04:06:23.654"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:06:23.655" endtime="20230704 04:06:23.655"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:06:23.656" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:06:23.715" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:06:23.715" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:06:23.656" endtime="20230704 04:06:23.716"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:06:25.951" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:06:23.716" endtime="20230704 04:06:25.952"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:06:25.952" endtime="20230704 04:06:26.916"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:06:26.920" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:06:26.917" endtime="20230704 04:06:26.920"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:06:26.964" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:06:26.964" level="INFO">${els} = ['element=1673406e-7bed-465f-9a3d-13ae409e7df0']</msg>
<status status="PASS" starttime="20230704 04:06:26.921" endtime="20230704 04:06:26.965"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:06:26.965" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:06:26.965" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:06:26.965" endtime="20230704 04:06:26.965"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:06:26.966" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:06:26.966" endtime="20230704 04:06:26.966"/>
</kw>
<status status="PASS" starttime="20230704 04:06:26.966" endtime="20230704 04:06:26.967"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:06:26.967" endtime="20230704 04:06:26.967"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:06:26.967" endtime="20230704 04:06:26.967"/>
</branch>
<status status="PASS" starttime="20230704 04:06:26.966" endtime="20230704 04:06:26.967"/>
</if>
<status status="PASS" starttime="20230704 04:06:26.920" endtime="20230704 04:06:26.967"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:06:26.968" endtime="20230704 04:06:26.968"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:06:26.968" endtime="20230704 04:06:26.968"/>
</branch>
<status status="PASS" starttime="20230704 04:06:26.920" endtime="20230704 04:06:26.968"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:06:26.972" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:06:26.968" endtime="20230704 04:06:26.972"/>
</kw>
<msg timestamp="20230704 04:06:26.972" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:06:26.917" endtime="20230704 04:06:26.972"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:26.973" endtime="20230704 04:06:27.046"/>
</kw>
<status status="PASS" starttime="20230704 04:06:26.973" endtime="20230704 04:06:27.046"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:06:27.046" endtime="20230704 04:06:27.047"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:06:27.046" endtime="20230704 04:06:27.047"/>
</branch>
<status status="PASS" starttime="20230704 04:06:26.973" endtime="20230704 04:06:27.047"/>
</if>
<status status="PASS" starttime="20230704 04:06:26.916" endtime="20230704 04:06:27.047"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:06:27.050" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:06:27.048" endtime="20230704 04:06:27.050"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:06:27.051" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:06:27.050" endtime="20230704 04:06:27.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:06:27.051" endtime="20230704 04:06:27.051"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.047" endtime="20230704 04:06:27.052"/>
</kw>
<status status="PASS" starttime="20230704 04:06:23.092" endtime="20230704 04:06:27.052"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:06:27.053" endtime="20230704 04:06:27.054"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:06:27.053" endtime="20230704 04:06:27.054"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:06:27.054" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:06:27.054" endtime="20230704 04:06:27.054"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:27.055" endtime="20230704 04:06:27.152"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:27.242" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:27.153" endtime="20230704 04:06:27.242"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.152" endtime="20230704 04:06:27.242"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:27.243" endtime="20230704 04:06:27.451"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:27.532" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:06:27.452" endtime="20230704 04:06:27.533"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.054" endtime="20230704 04:06:27.533"/>
</branch>
<status status="PASS" starttime="20230704 04:06:27.053" endtime="20230704 04:06:27.533"/>
</if>
<status status="PASS" starttime="20230704 04:06:27.053" endtime="20230704 04:06:27.533"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:06:27.534" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:06:27.534" endtime="20230704 04:06:27.534"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.533" endtime="20230704 04:06:27.535"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:06:27.535" endtime="20230704 04:06:27.536"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.535" endtime="20230704 04:06:27.536"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:27.537" endtime="20230704 04:06:28.057"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.536" endtime="20230704 04:06:28.057"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:30.926" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:28.063" endtime="20230704 04:06:30.926"/>
</kw>
<status status="PASS" starttime="20230704 04:06:28.058" endtime="20230704 04:06:30.926"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:06:31.180" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:06:30.927" endtime="20230704 04:06:31.181"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:06:31.181" endtime="20230704 04:06:31.181"/>
</kw>
<status status="PASS" starttime="20230704 04:06:28.058" endtime="20230704 04:06:31.182"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:31.182" endtime="20230704 04:06:33.805"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:35.188" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:33.806" endtime="20230704 04:06:35.188"/>
</kw>
<status status="PASS" starttime="20230704 04:06:33.806" endtime="20230704 04:06:35.188"/>
</kw>
<status status="PASS" starttime="20230704 04:06:31.182" endtime="20230704 04:06:35.189"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:06:35.326" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:06:35.326" level="INFO">${elements} = ['element=227577a3-7971-41cd-9b45-7fa402bf06ed']</msg>
<status status="PASS" starttime="20230704 04:06:35.190" endtime="20230704 04:06:35.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:06:35.327" level="INFO">${first_element} = element=227577a3-7971-41cd-9b45-7fa402bf06ed</msg>
<status status="PASS" starttime="20230704 04:06:35.326" endtime="20230704 04:06:35.327"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:35.327" endtime="20230704 04:06:35.470"/>
</kw>
<status status="PASS" starttime="20230704 04:06:35.189" endtime="20230704 04:06:35.470"/>
</kw>
<status status="PASS" starttime="20230704 04:06:35.189" endtime="20230704 04:06:35.471"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:35.472" endtime="20230704 04:06:37.628"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:37.650" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:37.629" endtime="20230704 04:06:37.650"/>
</kw>
<status status="PASS" starttime="20230704 04:06:37.629" endtime="20230704 04:06:37.651"/>
</kw>
<status status="PASS" starttime="20230704 04:06:35.471" endtime="20230704 04:06:37.651"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:37.652" endtime="20230704 04:06:37.947"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:37.964" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:37.949" endtime="20230704 04:06:37.964"/>
</kw>
<status status="PASS" starttime="20230704 04:06:37.948" endtime="20230704 04:06:37.965"/>
</kw>
<status status="PASS" starttime="20230704 04:06:37.651" endtime="20230704 04:06:37.965"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:37.966" endtime="20230704 04:06:38.519"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:38.631" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:38.521" endtime="20230704 04:06:38.631"/>
</kw>
<status status="PASS" starttime="20230704 04:06:38.520" endtime="20230704 04:06:38.632"/>
</kw>
<status status="PASS" starttime="20230704 04:06:37.965" endtime="20230704 04:06:38.632"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:38.633" endtime="20230704 04:06:38.867"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:38.882" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:38.868" endtime="20230704 04:06:38.883"/>
</kw>
<status status="PASS" starttime="20230704 04:06:38.868" endtime="20230704 04:06:38.883"/>
</kw>
<status status="PASS" starttime="20230704 04:06:38.632" endtime="20230704 04:06:38.883"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:38.884" endtime="20230704 04:06:39.215"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:39.237" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:39.216" endtime="20230704 04:06:39.237"/>
</kw>
<status status="PASS" starttime="20230704 04:06:39.216" endtime="20230704 04:06:39.237"/>
</kw>
<status status="PASS" starttime="20230704 04:06:38.883" endtime="20230704 04:06:39.237"/>
</kw>
<status status="PASS" starttime="20230704 04:06:35.471" endtime="20230704 04:06:39.238"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:39.239" endtime="20230704 04:06:39.496"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:39.497" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:39.497" endtime="20230704 04:06:39.608"/>
</kw>
<status status="PASS" starttime="20230704 04:06:39.239" endtime="20230704 04:06:39.609"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:39.610" endtime="20230704 04:06:39.900"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:39.902" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:39.901" endtime="20230704 04:06:40.091"/>
</kw>
<status status="PASS" starttime="20230704 04:06:39.609" endtime="20230704 04:06:40.092"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:40.093" endtime="20230704 04:06:40.471"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:40.472" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:40.472" endtime="20230704 04:06:40.666"/>
</kw>
<status status="PASS" starttime="20230704 04:06:40.092" endtime="20230704 04:06:40.666"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:40.667" endtime="20230704 04:06:40.953"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:06:40.954" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:06:40.953" endtime="20230704 04:06:41.051"/>
</kw>
<status status="PASS" starttime="20230704 04:06:40.666" endtime="20230704 04:06:41.051"/>
</kw>
<status status="PASS" starttime="20230704 04:06:39.238" endtime="20230704 04:06:41.052"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:41.052" endtime="20230704 04:06:41.271"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:41.271" endtime="20230704 04:06:41.523"/>
</kw>
<status status="PASS" starttime="20230704 04:06:41.052" endtime="20230704 04:06:41.523"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:41.524" endtime="20230704 04:06:41.726"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:41.726" endtime="20230704 04:06:42.039"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:42.040" endtime="20230704 04:06:44.484"/>
</kw>
<status status="PASS" starttime="20230704 04:06:41.523" endtime="20230704 04:06:44.485"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:49.351" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:44.486" endtime="20230704 04:06:49.352"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:49.352" endtime="20230704 04:06:53.447"/>
</kw>
<status status="PASS" starttime="20230704 04:06:44.485" endtime="20230704 04:06:53.447"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:56.954" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:53.449" endtime="20230704 04:06:56.954"/>
</kw>
<status status="PASS" starttime="20230704 04:06:53.449" endtime="20230704 04:06:56.955"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:56.982" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:56.956" endtime="20230704 04:06:56.982"/>
</kw>
<status status="PASS" starttime="20230704 04:06:56.955" endtime="20230704 04:06:56.983"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:56.983" endtime="20230704 04:06:57.144"/>
</kw>
<status status="PASS" starttime="20230704 04:06:56.955" endtime="20230704 04:06:57.144"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:06:57.307" level="INFO">Text: 'Booking number: 457192209'</msg>
<msg timestamp="20230704 04:06:57.308" level="INFO">${str} = Booking number: 457192209</msg>
<status status="PASS" starttime="20230704 04:06:57.145" endtime="20230704 04:06:57.308"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:06:57.308" endtime="20230704 04:06:57.308"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:06:57.309" level="INFO">${str} = Booking number: 457192209</msg>
<status status="PASS" starttime="20230704 04:06:57.309" endtime="20230704 04:06:57.309"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:06:57.310" level="INFO">${str} = Booking number: 457192209</msg>
<status status="PASS" starttime="20230704 04:06:57.309" endtime="20230704 04:06:57.310"/>
</kw>
<status status="PASS" starttime="20230704 04:06:57.145" endtime="20230704 04:06:57.310"/>
</kw>
<status status="PASS" starttime="20230704 04:06:53.448" endtime="20230704 04:06:57.310"/>
</kw>
<status status="PASS" starttime="20230704 04:06:44.485" endtime="20230704 04:06:57.316"/>
</kw>
<status status="PASS" starttime="20230704 04:06:27.052" endtime="20230704 04:06:57.316"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:06:57.327" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:06:57.318" endtime="20230704 04:06:57.327"/>
</kw>
<status status="PASS" starttime="20230704 04:06:57.317" endtime="20230704 04:06:57.327"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:57.328" endtime="20230704 04:06:57.437"/>
</kw>
<status status="PASS" starttime="20230704 04:06:57.316" endtime="20230704 04:06:57.437"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:06:57.438" endtime="20230704 04:06:58.348"/>
</kw>
<status status="PASS" starttime="20230704 04:06:57.438" endtime="20230704 04:06:58.348"/>
</kw>
<kw name="The &quot;Purpose of the trip&quot; checkbox is removed" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//span[text()='Travelling for work']</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:04.474" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:07:04.475" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:07:04.475" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//span[text()=\'Travelling for work\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:06:58.350" endtime="20230704 04:07:04.475"/>
</kw>
<msg timestamp="20230704 04:07:04.476" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:06:58.350" endtime="20230704 04:07:04.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:07:04.476" endtime="20230704 04:07:04.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:07:04.477" endtime="20230704 04:07:04.478"/>
</kw>
<status status="PASS" starttime="20230704 04:07:04.477" endtime="20230704 04:07:04.478"/>
</kw>
<status status="PASS" starttime="20230704 04:06:58.349" endtime="20230704 04:07:04.478"/>
</kw>
<status status="PASS" starttime="20230704 04:06:58.349" endtime="20230704 04:07:04.478"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:07:05.064" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:07:04.479" endtime="20230704 04:07:05.064"/>
</kw>
<status status="PASS" starttime="20230704 04:06:23.091" endtime="20230704 04:07:05.065"/>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Verify Save and invite button when marking someone else as a guest" line="35">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:07:05.069" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/4285bd36-ff07-4fe3-8577-bb58258367ed"}</msg>
<msg timestamp="20230704 04:07:05.624" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/4285bd36-ff07-4fe3-8577-bb58258367ed"}</msg>
<status status="PASS" starttime="20230704 04:07:05.069" endtime="20230704 04:07:05.624"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:07:05.624" endtime="20230704 04:07:05.625"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:07:05.626" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:07:05.661" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:07:05.661" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:07:05.625" endtime="20230704 04:07:05.661"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:07:08.246" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:07:05.662" endtime="20230704 04:07:08.246"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:07:08.247" endtime="20230704 04:07:09.156"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:07:09.160" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:07:09.157" endtime="20230704 04:07:09.160"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:07:09.203" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:07:09.203" level="INFO">${els} = ['element=29a084bb-52dd-4dd9-ad0c-b611f06b7d01']</msg>
<status status="PASS" starttime="20230704 04:07:09.161" endtime="20230704 04:07:09.203"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:07:09.204" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:07:09.204" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:07:09.204" endtime="20230704 04:07:09.204"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:07:09.205" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:07:09.205" endtime="20230704 04:07:09.205"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.205" endtime="20230704 04:07:09.205"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:07:09.206" endtime="20230704 04:07:09.206"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:09.206" endtime="20230704 04:07:09.206"/>
</branch>
<status status="PASS" starttime="20230704 04:07:09.204" endtime="20230704 04:07:09.206"/>
</if>
<status status="PASS" starttime="20230704 04:07:09.161" endtime="20230704 04:07:09.206"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:07:09.207" endtime="20230704 04:07:09.207"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:09.206" endtime="20230704 04:07:09.207"/>
</branch>
<status status="PASS" starttime="20230704 04:07:09.160" endtime="20230704 04:07:09.207"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:07:09.210" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:07:09.207" endtime="20230704 04:07:09.210"/>
</kw>
<msg timestamp="20230704 04:07:09.210" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:07:09.157" endtime="20230704 04:07:09.210"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:09.211" endtime="20230704 04:07:09.296"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.211" endtime="20230704 04:07:09.296"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:07:09.297" endtime="20230704 04:07:09.297"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:09.297" endtime="20230704 04:07:09.297"/>
</branch>
<status status="PASS" starttime="20230704 04:07:09.211" endtime="20230704 04:07:09.297"/>
</if>
<status status="PASS" starttime="20230704 04:07:09.156" endtime="20230704 04:07:09.298"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:07:09.301" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:07:09.298" endtime="20230704 04:07:09.301"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:07:09.301" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:07:09.301" endtime="20230704 04:07:09.301"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:07:09.302" endtime="20230704 04:07:09.302"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.298" endtime="20230704 04:07:09.302"/>
</kw>
<status status="PASS" starttime="20230704 04:07:05.068" endtime="20230704 04:07:09.302"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:07:09.304" endtime="20230704 04:07:09.305"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:09.304" endtime="20230704 04:07:09.306"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:07:09.306" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:07:09.306" endtime="20230704 04:07:09.306"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:09.307" endtime="20230704 04:07:09.395"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:09.481" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:09.396" endtime="20230704 04:07:09.481"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.395" endtime="20230704 04:07:09.481"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:09.482" endtime="20230704 04:07:09.663"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:09.747" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:07:09.664" endtime="20230704 04:07:09.747"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.306" endtime="20230704 04:07:09.747"/>
</branch>
<status status="PASS" starttime="20230704 04:07:09.304" endtime="20230704 04:07:09.747"/>
</if>
<status status="PASS" starttime="20230704 04:07:09.303" endtime="20230704 04:07:09.748"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:07:09.749" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:07:09.748" endtime="20230704 04:07:09.749"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.748" endtime="20230704 04:07:09.749"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:07:09.750" endtime="20230704 04:07:09.751"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.749" endtime="20230704 04:07:09.751"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:09.752" endtime="20230704 04:07:10.165"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.751" endtime="20230704 04:07:10.166"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:12.892" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:10.168" endtime="20230704 04:07:12.892"/>
</kw>
<status status="PASS" starttime="20230704 04:07:10.167" endtime="20230704 04:07:12.892"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:07:13.146" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:07:12.893" endtime="20230704 04:07:13.146"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:07:13.147" endtime="20230704 04:07:13.147"/>
</kw>
<status status="PASS" starttime="20230704 04:07:10.166" endtime="20230704 04:07:13.148"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:13.148" endtime="20230704 04:07:15.355"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:16.168" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:15.357" endtime="20230704 04:07:16.168"/>
</kw>
<status status="PASS" starttime="20230704 04:07:15.356" endtime="20230704 04:07:16.169"/>
</kw>
<status status="PASS" starttime="20230704 04:07:13.148" endtime="20230704 04:07:16.169"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:07:16.197" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:07:16.197" level="INFO">${elements} = ['element=a0ff10d7-222b-4d09-972f-d64e1b5d0889']</msg>
<status status="PASS" starttime="20230704 04:07:16.173" endtime="20230704 04:07:16.197"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:07:16.198" level="INFO">${first_element} = element=a0ff10d7-222b-4d09-972f-d64e1b5d0889</msg>
<status status="PASS" starttime="20230704 04:07:16.198" endtime="20230704 04:07:16.198"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:16.198" endtime="20230704 04:07:16.316"/>
</kw>
<status status="PASS" starttime="20230704 04:07:16.170" endtime="20230704 04:07:16.317"/>
</kw>
<status status="PASS" starttime="20230704 04:07:16.169" endtime="20230704 04:07:16.317"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:16.318" endtime="20230704 04:07:17.756"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:17.770" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:17.757" endtime="20230704 04:07:17.770"/>
</kw>
<status status="PASS" starttime="20230704 04:07:17.757" endtime="20230704 04:07:17.770"/>
</kw>
<status status="PASS" starttime="20230704 04:07:16.318" endtime="20230704 04:07:17.771"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:17.772" endtime="20230704 04:07:18.049"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:18.064" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:18.050" endtime="20230704 04:07:18.065"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.049" endtime="20230704 04:07:18.065"/>
</kw>
<status status="PASS" starttime="20230704 04:07:17.771" endtime="20230704 04:07:18.065"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:18.066" endtime="20230704 04:07:18.571"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:18.587" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:18.572" endtime="20230704 04:07:18.587"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.572" endtime="20230704 04:07:18.588"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.066" endtime="20230704 04:07:18.588"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:18.589" endtime="20230704 04:07:18.754"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:18.766" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:18.755" endtime="20230704 04:07:18.767"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.754" endtime="20230704 04:07:18.767"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.588" endtime="20230704 04:07:18.767"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:18.768" endtime="20230704 04:07:18.948"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:18.962" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:18.949" endtime="20230704 04:07:18.962"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.948" endtime="20230704 04:07:18.963"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.767" endtime="20230704 04:07:18.963"/>
</kw>
<status status="PASS" starttime="20230704 04:07:16.317" endtime="20230704 04:07:18.963"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:18.965" endtime="20230704 04:07:19.047"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:19.048" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:19.047" endtime="20230704 04:07:19.120"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.964" endtime="20230704 04:07:19.121"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:19.122" endtime="20230704 04:07:19.462"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:19.463" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:19.462" endtime="20230704 04:07:19.533"/>
</kw>
<status status="PASS" starttime="20230704 04:07:19.121" endtime="20230704 04:07:19.534"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:19.535" endtime="20230704 04:07:19.682"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:19.683" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:19.682" endtime="20230704 04:07:19.749"/>
</kw>
<status status="PASS" starttime="20230704 04:07:19.534" endtime="20230704 04:07:19.749"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:19.750" endtime="20230704 04:07:20.034"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:20.035" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:20.035" endtime="20230704 04:07:20.076"/>
</kw>
<status status="PASS" starttime="20230704 04:07:19.750" endtime="20230704 04:07:20.077"/>
</kw>
<status status="PASS" starttime="20230704 04:07:18.963" endtime="20230704 04:07:20.077"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:20.078" endtime="20230704 04:07:20.302"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:20.302" endtime="20230704 04:07:20.454"/>
</kw>
<status status="PASS" starttime="20230704 04:07:20.077" endtime="20230704 04:07:20.455"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:20.456" endtime="20230704 04:07:20.579"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:20.579" endtime="20230704 04:07:20.772"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:20.772" endtime="20230704 04:07:21.002"/>
</kw>
<status status="PASS" starttime="20230704 04:07:20.455" endtime="20230704 04:07:21.002"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:25.086" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:21.003" endtime="20230704 04:07:25.086"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:25.087" endtime="20230704 04:07:29.500"/>
</kw>
<status status="PASS" starttime="20230704 04:07:21.003" endtime="20230704 04:07:29.500"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:33.215" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:29.501" endtime="20230704 04:07:33.215"/>
</kw>
<status status="PASS" starttime="20230704 04:07:29.501" endtime="20230704 04:07:33.216"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:33.279" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:33.217" endtime="20230704 04:07:33.279"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.216" endtime="20230704 04:07:33.279"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:33.280" endtime="20230704 04:07:33.517"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.216" endtime="20230704 04:07:33.517"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:07:33.599" level="INFO">Text: 'Booking number: 585982075'</msg>
<msg timestamp="20230704 04:07:33.600" level="INFO">${str} = Booking number: 585982075</msg>
<status status="PASS" starttime="20230704 04:07:33.518" endtime="20230704 04:07:33.600"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:07:33.600" endtime="20230704 04:07:33.601"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:07:33.601" level="INFO">${str} = Booking number: 585982075</msg>
<status status="PASS" starttime="20230704 04:07:33.601" endtime="20230704 04:07:33.601"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:07:33.603" level="INFO">${str} = Booking number: 585982075</msg>
<status status="PASS" starttime="20230704 04:07:33.602" endtime="20230704 04:07:33.603"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.518" endtime="20230704 04:07:33.607"/>
</kw>
<status status="PASS" starttime="20230704 04:07:29.500" endtime="20230704 04:07:33.608"/>
</kw>
<status status="PASS" starttime="20230704 04:07:21.002" endtime="20230704 04:07:33.608"/>
</kw>
<status status="PASS" starttime="20230704 04:07:09.303" endtime="20230704 04:07:33.608"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:33.664" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:33.611" endtime="20230704 04:07:33.664"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.611" endtime="20230704 04:07:33.665"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:33.665" endtime="20230704 04:07:33.771"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.608" endtime="20230704 04:07:33.771"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:33.772" endtime="20230704 04:07:34.668"/>
</kw>
<status status="PASS" starttime="20230704 04:07:33.771" endtime="20230704 04:07:34.669"/>
</kw>
<kw name="The &quot;Save and sign&quot; button changes to &quot; Save and invite&quot; button" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Save and Sign']</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:40.805" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:07:40.805" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:07:40.806" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[normalize-space()=\'Save and Sign\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:07:34.671" endtime="20230704 04:07:40.806"/>
</kw>
<msg timestamp="20230704 04:07:40.806" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:07:34.670" endtime="20230704 04:07:40.806"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:07:40.807" endtime="20230704 04:07:40.807"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:07:40.808" endtime="20230704 04:07:40.809"/>
</kw>
<status status="PASS" starttime="20230704 04:07:40.808" endtime="20230704 04:07:40.809"/>
</kw>
<status status="PASS" starttime="20230704 04:07:34.670" endtime="20230704 04:07:40.809"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Save and invite']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:40.838" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:40.810" endtime="20230704 04:07:40.838"/>
</kw>
<msg timestamp="20230704 04:07:40.838" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:07:40.810" endtime="20230704 04:07:40.838"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:07:40.839" endtime="20230704 04:07:40.840"/>
</kw>
<status status="PASS" starttime="20230704 04:07:40.839" endtime="20230704 04:07:40.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:07:40.840" endtime="20230704 04:07:40.840"/>
</kw>
<status status="PASS" starttime="20230704 04:07:40.809" endtime="20230704 04:07:40.842"/>
</kw>
<status status="PASS" starttime="20230704 04:07:34.669" endtime="20230704 04:07:40.842"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:07:41.448" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:07:40.842" endtime="20230704 04:07:41.448"/>
</kw>
<status status="PASS" starttime="20230704 04:07:05.067" endtime="20230704 04:07:41.449"/>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Verify Invite guest popup UI" line="42">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:07:41.454" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/feb2f1cc-b9d3-408f-a9a3-a8cad5e10c5f"}</msg>
<msg timestamp="20230704 04:07:41.998" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/feb2f1cc-b9d3-408f-a9a3-a8cad5e10c5f"}</msg>
<status status="PASS" starttime="20230704 04:07:41.453" endtime="20230704 04:07:41.999"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:07:41.999" endtime="20230704 04:07:42.000"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:07:42.001" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:07:42.052" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:07:42.052" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:07:42.000" endtime="20230704 04:07:42.052"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:07:44.126" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:07:42.053" endtime="20230704 04:07:44.126"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:07:44.127" endtime="20230704 04:07:45.199"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:07:45.203" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:07:45.200" endtime="20230704 04:07:45.203"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:07:45.246" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:07:45.246" level="INFO">${els} = ['element=3d45ca5e-a02d-4b07-a00b-38acf541c286']</msg>
<status status="PASS" starttime="20230704 04:07:45.203" endtime="20230704 04:07:45.246"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:07:45.247" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:07:45.247" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:07:45.247" endtime="20230704 04:07:45.247"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:07:45.248" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:07:45.248" endtime="20230704 04:07:45.248"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.248" endtime="20230704 04:07:45.248"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:07:45.249" endtime="20230704 04:07:45.249"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:45.248" endtime="20230704 04:07:45.249"/>
</branch>
<status status="PASS" starttime="20230704 04:07:45.247" endtime="20230704 04:07:45.249"/>
</if>
<status status="PASS" starttime="20230704 04:07:45.203" endtime="20230704 04:07:45.249"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:07:45.250" endtime="20230704 04:07:45.250"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:45.249" endtime="20230704 04:07:45.250"/>
</branch>
<status status="PASS" starttime="20230704 04:07:45.203" endtime="20230704 04:07:45.250"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:07:45.252" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:07:45.250" endtime="20230704 04:07:45.253"/>
</kw>
<msg timestamp="20230704 04:07:45.253" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:07:45.200" endtime="20230704 04:07:45.253"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:45.254" endtime="20230704 04:07:45.340"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.253" endtime="20230704 04:07:45.340"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:07:45.340" endtime="20230704 04:07:45.340"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:45.340" endtime="20230704 04:07:45.341"/>
</branch>
<status status="PASS" starttime="20230704 04:07:45.253" endtime="20230704 04:07:45.341"/>
</if>
<status status="PASS" starttime="20230704 04:07:45.199" endtime="20230704 04:07:45.341"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:07:45.344" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:07:45.342" endtime="20230704 04:07:45.344"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:07:45.344" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:07:45.344" endtime="20230704 04:07:45.344"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:07:45.345" endtime="20230704 04:07:45.345"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.341" endtime="20230704 04:07:45.345"/>
</kw>
<status status="PASS" starttime="20230704 04:07:41.452" endtime="20230704 04:07:45.345"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:07:45.347" endtime="20230704 04:07:45.347"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:07:45.347" endtime="20230704 04:07:45.347"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:07:45.348" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:07:45.348" endtime="20230704 04:07:45.348"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:45.348" endtime="20230704 04:07:45.440"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:45.543" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:45.441" endtime="20230704 04:07:45.543"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.441" endtime="20230704 04:07:45.544"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:45.544" endtime="20230704 04:07:45.754"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:45.828" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:07:45.754" endtime="20230704 04:07:45.828"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.347" endtime="20230704 04:07:45.828"/>
</branch>
<status status="PASS" starttime="20230704 04:07:45.347" endtime="20230704 04:07:45.828"/>
</if>
<status status="PASS" starttime="20230704 04:07:45.346" endtime="20230704 04:07:45.828"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:07:45.830" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:07:45.829" endtime="20230704 04:07:45.830"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.829" endtime="20230704 04:07:45.830"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:07:45.832" endtime="20230704 04:07:45.832"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.830" endtime="20230704 04:07:45.832"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:45.833" endtime="20230704 04:07:46.348"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.832" endtime="20230704 04:07:46.348"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:49.180" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:46.350" endtime="20230704 04:07:49.181"/>
</kw>
<status status="PASS" starttime="20230704 04:07:46.349" endtime="20230704 04:07:49.181"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:07:49.440" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:07:49.182" endtime="20230704 04:07:49.440"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:07:49.441" endtime="20230704 04:07:49.441"/>
</kw>
<status status="PASS" starttime="20230704 04:07:46.348" endtime="20230704 04:07:49.441"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:49.443" endtime="20230704 04:07:51.814"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:52.663" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:51.815" endtime="20230704 04:07:52.664"/>
</kw>
<status status="PASS" starttime="20230704 04:07:51.815" endtime="20230704 04:07:52.664"/>
</kw>
<status status="PASS" starttime="20230704 04:07:49.442" endtime="20230704 04:07:52.664"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:07:52.684" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:07:52.685" level="INFO">${elements} = ['element=f9ece476-ee8e-473a-a80c-c1020a0a24a7']</msg>
<status status="PASS" starttime="20230704 04:07:52.666" endtime="20230704 04:07:52.685"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:07:52.685" level="INFO">${first_element} = element=f9ece476-ee8e-473a-a80c-c1020a0a24a7</msg>
<status status="PASS" starttime="20230704 04:07:52.685" endtime="20230704 04:07:52.685"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:52.686" endtime="20230704 04:07:52.806"/>
</kw>
<status status="PASS" starttime="20230704 04:07:52.665" endtime="20230704 04:07:52.806"/>
</kw>
<status status="PASS" starttime="20230704 04:07:52.665" endtime="20230704 04:07:52.806"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:52.808" endtime="20230704 04:07:54.369"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:54.381" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:54.370" endtime="20230704 04:07:54.381"/>
</kw>
<status status="PASS" starttime="20230704 04:07:54.370" endtime="20230704 04:07:54.382"/>
</kw>
<status status="PASS" starttime="20230704 04:07:52.807" endtime="20230704 04:07:54.382"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:54.383" endtime="20230704 04:07:54.664"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:54.678" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:54.665" endtime="20230704 04:07:54.679"/>
</kw>
<status status="PASS" starttime="20230704 04:07:54.664" endtime="20230704 04:07:54.679"/>
</kw>
<status status="PASS" starttime="20230704 04:07:54.382" endtime="20230704 04:07:54.679"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:54.680" endtime="20230704 04:07:54.990"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:55.007" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:54.991" endtime="20230704 04:07:55.007"/>
</kw>
<status status="PASS" starttime="20230704 04:07:54.990" endtime="20230704 04:07:55.007"/>
</kw>
<status status="PASS" starttime="20230704 04:07:54.680" endtime="20230704 04:07:55.008"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:55.009" endtime="20230704 04:07:55.278"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:55.298" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:55.279" endtime="20230704 04:07:55.298"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.279" endtime="20230704 04:07:55.299"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.008" endtime="20230704 04:07:55.299"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:55.301" endtime="20230704 04:07:55.562"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:07:55.579" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:55.563" endtime="20230704 04:07:55.579"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.562" endtime="20230704 04:07:55.579"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.299" endtime="20230704 04:07:55.579"/>
</kw>
<status status="PASS" starttime="20230704 04:07:52.806" endtime="20230704 04:07:55.580"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:55.582" endtime="20230704 04:07:55.750"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:55.751" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:55.751" endtime="20230704 04:07:55.820"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.580" endtime="20230704 04:07:55.820"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:55.821" endtime="20230704 04:07:56.137"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:56.138" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:56.137" endtime="20230704 04:07:56.249"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.820" endtime="20230704 04:07:56.249"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:56.250" endtime="20230704 04:07:56.472"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:56.473" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:56.472" endtime="20230704 04:07:56.568"/>
</kw>
<status status="PASS" starttime="20230704 04:07:56.250" endtime="20230704 04:07:56.568"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:56.569" endtime="20230704 04:07:56.743"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:07:56.744" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:07:56.743" endtime="20230704 04:07:56.780"/>
</kw>
<status status="PASS" starttime="20230704 04:07:56.568" endtime="20230704 04:07:56.781"/>
</kw>
<status status="PASS" starttime="20230704 04:07:55.580" endtime="20230704 04:07:56.781"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:56.782" endtime="20230704 04:07:56.975"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:56.975" endtime="20230704 04:07:57.206"/>
</kw>
<status status="PASS" starttime="20230704 04:07:56.781" endtime="20230704 04:07:57.206"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:57.207" endtime="20230704 04:07:57.297"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:57.297" endtime="20230704 04:07:57.631"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:07:57.632" endtime="20230704 04:07:57.843"/>
</kw>
<status status="PASS" starttime="20230704 04:07:57.207" endtime="20230704 04:07:57.844"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:02.405" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:07:57.845" endtime="20230704 04:08:02.405"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:02.406" endtime="20230704 04:08:05.610"/>
</kw>
<status status="PASS" starttime="20230704 04:07:57.844" endtime="20230704 04:08:05.610"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:08.525" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:05.612" endtime="20230704 04:08:08.525"/>
</kw>
<status status="PASS" starttime="20230704 04:08:05.611" endtime="20230704 04:08:08.526"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:08.597" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:08.527" endtime="20230704 04:08:08.598"/>
</kw>
<status status="PASS" starttime="20230704 04:08:08.527" endtime="20230704 04:08:08.598"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:08.598" endtime="20230704 04:08:08.957"/>
</kw>
<status status="PASS" starttime="20230704 04:08:08.526" endtime="20230704 04:08:08.958"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:08:09.093" level="INFO">Text: 'Booking number: 931002779'</msg>
<msg timestamp="20230704 04:08:09.093" level="INFO">${str} = Booking number: 931002779</msg>
<status status="PASS" starttime="20230704 04:08:08.959" endtime="20230704 04:08:09.093"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:08:09.094" endtime="20230704 04:08:09.094"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:08:09.095" level="INFO">${str} = Booking number: 931002779</msg>
<status status="PASS" starttime="20230704 04:08:09.095" endtime="20230704 04:08:09.095"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:08:09.096" level="INFO">${str} = Booking number: 931002779</msg>
<status status="PASS" starttime="20230704 04:08:09.095" endtime="20230704 04:08:09.097"/>
</kw>
<status status="PASS" starttime="20230704 04:08:08.958" endtime="20230704 04:08:09.097"/>
</kw>
<status status="PASS" starttime="20230704 04:08:05.611" endtime="20230704 04:08:09.097"/>
</kw>
<status status="PASS" starttime="20230704 04:07:57.844" endtime="20230704 04:08:09.097"/>
</kw>
<status status="PASS" starttime="20230704 04:07:45.346" endtime="20230704 04:08:09.098"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:09.119" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:09.099" endtime="20230704 04:08:09.119"/>
</kw>
<status status="PASS" starttime="20230704 04:08:09.098" endtime="20230704 04:08:09.119"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:09.120" endtime="20230704 04:08:09.274"/>
</kw>
<status status="PASS" starttime="20230704 04:08:09.098" endtime="20230704 04:08:09.275"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:09.276" endtime="20230704 04:08:10.163"/>
</kw>
<status status="PASS" starttime="20230704 04:08:09.275" endtime="20230704 04:08:10.163"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:10.164" endtime="20230704 04:08:10.236"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:10.244" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:10.237" endtime="20230704 04:08:10.245"/>
</kw>
<status status="PASS" starttime="20230704 04:08:10.237" endtime="20230704 04:08:10.245"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:08:10.246" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230704 04:08:10.246" endtime="20230704 04:08:10.677"/>
</kw>
<status status="PASS" starttime="20230704 04:08:10.245" endtime="20230704 04:08:10.677"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:10.677" endtime="20230704 04:08:10.757"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:10.771" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:10.758" endtime="20230704 04:08:10.771"/>
</kw>
<status status="PASS" starttime="20230704 04:08:10.758" endtime="20230704 04:08:10.771"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:08:10.773" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230704 04:08:10.773" endtime="20230704 04:08:10.978"/>
</kw>
<status status="PASS" starttime="20230704 04:08:10.772" endtime="20230704 04:08:10.979"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:10.979" endtime="20230704 04:08:11.071"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:11.079" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:11.073" endtime="20230704 04:08:11.079"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.072" endtime="20230704 04:08:11.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:08:11.080" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230704 04:08:11.080" endtime="20230704 04:08:11.437"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.079" endtime="20230704 04:08:11.437"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:11.437" endtime="20230704 04:08:11.522"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:11.529" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:11.524" endtime="20230704 04:08:11.530"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.523" endtime="20230704 04:08:11.530"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:08:11.532" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230704 04:08:11.531" endtime="20230704 04:08:11.754"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.530" endtime="20230704 04:08:11.755"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:11.783" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:11.756" endtime="20230704 04:08:11.784"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.755" endtime="20230704 04:08:11.784"/>
</kw>
<status status="PASS" starttime="20230704 04:08:10.164" endtime="20230704 04:08:11.784"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:11.785" endtime="20230704 04:08:11.986"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:12.013" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:11.987" endtime="20230704 04:08:12.013"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.987" endtime="20230704 04:08:12.014"/>
</kw>
<status status="PASS" starttime="20230704 04:08:11.785" endtime="20230704 04:08:12.014"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.569" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:12.021" endtime="20230704 04:08:14.569"/>
</kw>
<msg timestamp="20230704 04:08:14.570" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:12.015" endtime="20230704 04:08:14.570"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.571" endtime="20230704 04:08:14.571"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.570" endtime="20230704 04:08:14.572"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.572" endtime="20230704 04:08:14.572"/>
</kw>
<status status="PASS" starttime="20230704 04:08:12.015" endtime="20230704 04:08:14.573"/>
</kw>
<status status="PASS" starttime="20230704 04:08:12.014" endtime="20230704 04:08:14.573"/>
</kw>
<kw name="Verify the Invite Guest UI" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.581" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.575" endtime="20230704 04:08:14.582"/>
</kw>
<msg timestamp="20230704 04:08:14.582" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.574" endtime="20230704 04:08:14.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.583" endtime="20230704 04:08:14.583"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.582" endtime="20230704 04:08:14.583"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.583" endtime="20230704 04:08:14.584"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.574" endtime="20230704 04:08:14.584"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//form/div/p</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.593" level="INFO">Waited for Element with selector //form/div/p at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.585" endtime="20230704 04:08:14.593"/>
</kw>
<msg timestamp="20230704 04:08:14.593" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.585" endtime="20230704 04:08:14.593"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.594" endtime="20230704 04:08:14.594"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.593" endtime="20230704 04:08:14.594"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.594" endtime="20230704 04:08:14.595"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.584" endtime="20230704 04:08:14.595"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='firstName']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.602" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.596" endtime="20230704 04:08:14.602"/>
</kw>
<msg timestamp="20230704 04:08:14.602" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.596" endtime="20230704 04:08:14.602"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.603" endtime="20230704 04:08:14.603"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.602" endtime="20230704 04:08:14.603"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.604" endtime="20230704 04:08:14.604"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.595" endtime="20230704 04:08:14.604"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='lastName']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.611" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.605" endtime="20230704 04:08:14.611"/>
</kw>
<msg timestamp="20230704 04:08:14.611" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.605" endtime="20230704 04:08:14.611"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.612" endtime="20230704 04:08:14.612"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.611" endtime="20230704 04:08:14.612"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.613" endtime="20230704 04:08:14.613"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.604" endtime="20230704 04:08:14.613"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='email']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.619" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.614" endtime="20230704 04:08:14.620"/>
</kw>
<msg timestamp="20230704 04:08:14.620" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.614" endtime="20230704 04:08:14.620"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.620" endtime="20230704 04:08:14.621"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.620" endtime="20230704 04:08:14.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.621" endtime="20230704 04:08:14.622"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.613" endtime="20230704 04:08:14.622"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.629" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.623" endtime="20230704 04:08:14.629"/>
</kw>
<msg timestamp="20230704 04:08:14.629" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.623" endtime="20230704 04:08:14.629"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.630" endtime="20230704 04:08:14.630"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.629" endtime="20230704 04:08:14.631"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.631" endtime="20230704 04:08:14.632"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.622" endtime="20230704 04:08:14.632"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Invite']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.638" level="INFO">Waited for Element with selector //button[normalize-space()='Invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.633" endtime="20230704 04:08:14.638"/>
</kw>
<msg timestamp="20230704 04:08:14.639" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.633" endtime="20230704 04:08:14.639"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.639" endtime="20230704 04:08:14.640"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.639" endtime="20230704 04:08:14.640"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.640" endtime="20230704 04:08:14.641"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.632" endtime="20230704 04:08:14.641"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//div//button//*[name()='svg' and @data-icon='xmark']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:14.648" level="INFO">Waited for Element with selector //div//button//*[name()='svg' and @data-icon='xmark'] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:14.642" endtime="20230704 04:08:14.648"/>
</kw>
<msg timestamp="20230704 04:08:14.648" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:08:14.642" endtime="20230704 04:08:14.648"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:08:14.649" endtime="20230704 04:08:14.649"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.648" endtime="20230704 04:08:14.649"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:14.650" endtime="20230704 04:08:14.650"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.641" endtime="20230704 04:08:14.650"/>
</kw>
<status status="PASS" starttime="20230704 04:08:14.573" endtime="20230704 04:08:14.650"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:08:15.244" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:08:14.651" endtime="20230704 04:08:15.245"/>
</kw>
<status status="PASS" starttime="20230704 04:07:41.452" endtime="20230704 04:08:15.245"/>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Verify email field validation when inviting guest" line="51">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:08:15.250" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/fa86e29c-ea84-4aad-b41f-864dedb9be87"}</msg>
<msg timestamp="20230704 04:08:15.808" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/fa86e29c-ea84-4aad-b41f-864dedb9be87"}</msg>
<status status="PASS" starttime="20230704 04:08:15.249" endtime="20230704 04:08:15.808"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:08:15.809" endtime="20230704 04:08:15.809"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:08:15.810" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:08:15.866" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:08:15.866" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:08:15.810" endtime="20230704 04:08:15.866"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:08:17.976" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:08:15.866" endtime="20230704 04:08:17.976"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:08:17.977" endtime="20230704 04:08:19.104"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:08:19.108" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:08:19.106" endtime="20230704 04:08:19.108"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:08:19.151" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:08:19.152" level="INFO">${els} = ['element=8295f5b0-d926-4833-8a9a-12da51d74d77']</msg>
<status status="PASS" starttime="20230704 04:08:19.109" endtime="20230704 04:08:19.152"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:08:19.152" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:08:19.153" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:08:19.152" endtime="20230704 04:08:19.153"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:08:19.153" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:08:19.153" endtime="20230704 04:08:19.154"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.153" endtime="20230704 04:08:19.154"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:08:19.154" endtime="20230704 04:08:19.154"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:08:19.154" endtime="20230704 04:08:19.154"/>
</branch>
<status status="PASS" starttime="20230704 04:08:19.153" endtime="20230704 04:08:19.154"/>
</if>
<status status="PASS" starttime="20230704 04:08:19.109" endtime="20230704 04:08:19.155"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:08:19.155" endtime="20230704 04:08:19.155"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:08:19.155" endtime="20230704 04:08:19.155"/>
</branch>
<status status="PASS" starttime="20230704 04:08:19.109" endtime="20230704 04:08:19.155"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:08:19.158" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:08:19.156" endtime="20230704 04:08:19.158"/>
</kw>
<msg timestamp="20230704 04:08:19.159" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:08:19.105" endtime="20230704 04:08:19.159"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:19.159" endtime="20230704 04:08:19.229"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.159" endtime="20230704 04:08:19.229"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:08:19.230" endtime="20230704 04:08:19.230"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:08:19.229" endtime="20230704 04:08:19.230"/>
</branch>
<status status="PASS" starttime="20230704 04:08:19.159" endtime="20230704 04:08:19.230"/>
</if>
<status status="PASS" starttime="20230704 04:08:19.105" endtime="20230704 04:08:19.230"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:08:19.233" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:08:19.231" endtime="20230704 04:08:19.233"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:08:19.234" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:08:19.233" endtime="20230704 04:08:19.234"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:08:19.234" endtime="20230704 04:08:19.234"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.230" endtime="20230704 04:08:19.235"/>
</kw>
<status status="PASS" starttime="20230704 04:08:15.248" endtime="20230704 04:08:19.235"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:08:19.236" endtime="20230704 04:08:19.237"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:08:19.236" endtime="20230704 04:08:19.237"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:08:19.237" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:08:19.237" endtime="20230704 04:08:19.237"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:19.238" endtime="20230704 04:08:19.331"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:19.339" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:19.332" endtime="20230704 04:08:19.339"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.331" endtime="20230704 04:08:19.340"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:19.340" endtime="20230704 04:08:19.513"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:19.522" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:08:19.514" endtime="20230704 04:08:19.522"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.237" endtime="20230704 04:08:19.522"/>
</branch>
<status status="PASS" starttime="20230704 04:08:19.236" endtime="20230704 04:08:19.522"/>
</if>
<status status="PASS" starttime="20230704 04:08:19.236" endtime="20230704 04:08:19.522"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:08:19.525" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:08:19.524" endtime="20230704 04:08:19.525"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.523" endtime="20230704 04:08:19.525"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:08:19.526" endtime="20230704 04:08:19.526"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.525" endtime="20230704 04:08:19.526"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:19.527" endtime="20230704 04:08:19.856"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.526" endtime="20230704 04:08:19.856"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:22.515" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:19.858" endtime="20230704 04:08:22.515"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.857" endtime="20230704 04:08:22.516"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:08:22.770" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:08:22.516" endtime="20230704 04:08:22.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:08:22.770" endtime="20230704 04:08:22.771"/>
</kw>
<status status="PASS" starttime="20230704 04:08:19.857" endtime="20230704 04:08:22.771"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:08:22.772" endtime="20230704 04:08:24.904"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:08:26.177" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:08:24.905" endtime="20230704 04:08:26.177"/>
</kw>
<status status="PASS" starttime="20230704 04:08:24.904" endtime="20230704 04:08:26.177"/>
</kw>
<status status="PASS" starttime="20230704 04:08:22.771" endtime="20230704 04:08:26.178"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:08:26.197" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:08:26.198" level="INFO">${elements} = ['element=42cca47e-7036-4455-914f-a95299ccd25a']</msg>
<status status="PASS" starttime="20230704 04:08:26.179" endtime="20230704 04:08:26.198"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:08:26.198" level="INFO">${first_element} = element=42cca47e-7036-4455-914f-a95299ccd25a</msg>
<status status="PASS" starttime="20230704 04:08:26.198" endtime="20230704 04:08:26.198"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230704 04:09:56.330" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:09:56.331" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:09:56.331" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  element is not visible
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
element was detached from the DOM, retrying
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #2
  waiting 20ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #3
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #4
  waiting 100ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #5
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #6
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #7
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;W
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:08:26.199" endtime="20230704 04:09:56.332"/>
</kw>
<status status="FAIL" starttime="20230704 04:08:26.178" endtime="20230704 04:09:56.334"/>
</kw>
<status status="FAIL" starttime="20230704 04:08:26.178" endtime="20230704 04:09:56.335"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.335" endtime="20230704 04:09:56.335"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.336" endtime="20230704 04:09:56.336"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.336" endtime="20230704 04:09:56.336"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.336" endtime="20230704 04:09:56.336"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.337" endtime="20230704 04:09:56.337"/>
</kw>
<status status="FAIL" starttime="20230704 04:08:19.235" endtime="20230704 04:09:56.337"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.338" endtime="20230704 04:09:56.338"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.338" endtime="20230704 04:09:56.338"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.338" endtime="20230704 04:09:56.339"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.339" endtime="20230704 04:09:56.339"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.339" endtime="20230704 04:09:56.339"/>
</kw>
<kw name="Verify email with valid email" library="booking">
<status status="NOT RUN" starttime="20230704 04:09:56.340" endtime="20230704 04:09:56.340"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:09:57.046" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:09:56.341" endtime="20230704 04:09:57.046"/>
</kw>
<status status="FAIL" starttime="20230704 04:08:15.248" endtime="20230704 04:09:57.047">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[@class=\'css-1t415z1\']//button[@type=\'button\'][normalize-space()=\'Continue to payment\']').first()
  locator resolved to &lt;button type="button" class="chakra-button css-f0w8tx"&gt;Continue to payment&lt;/button&gt;
attempting click action
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
  &lt;div id="CybotCookiebotDialogFooter"&gt;…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #1
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  performing click action
    [ Message content over the limit has been removed. ]
...e cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #6
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;We use cookies to personalise content and ads, to…&lt;/div&gt; from &lt;div dir="ltr" lang="en" role="dialog" tabindex="-1" …&gt;…&lt;/div&gt; subtree intercepts pointer events
retrying click action, attempt #7
  waiting 500ms
  waiting for element to be visible, enabled and stable
  element is visible, enabled and stable
  scrolling into view if needed
  done scrolling
  &lt;div lang="en" id="CybotCookiebotDialogBodyContentTex…&gt;W
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t8" name="Verify invalid email field validation when inviting guest" line="60">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:09:57.052" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/121f4914-900d-4b06-9eda-3135c1060a52"}</msg>
<msg timestamp="20230704 04:09:57.819" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/121f4914-900d-4b06-9eda-3135c1060a52"}</msg>
<status status="PASS" starttime="20230704 04:09:57.051" endtime="20230704 04:09:57.819"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:09:57.820" endtime="20230704 04:09:57.820"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:09:57.821" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:09:57.883" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:09:57.884" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:09:57.821" endtime="20230704 04:09:57.884"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:10:00.608" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:09:57.884" endtime="20230704 04:10:00.609"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:10:00.609" endtime="20230704 04:10:01.625"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:10:01.629" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:10:01.626" endtime="20230704 04:10:01.629"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:10:01.674" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:10:01.674" level="INFO">${els} = ['element=06fc04a3-8e5c-4279-b6b6-626bf1edd4f0']</msg>
<status status="PASS" starttime="20230704 04:10:01.629" endtime="20230704 04:10:01.674"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:10:01.675" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:10:01.675" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:10:01.674" endtime="20230704 04:10:01.675"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:10:01.676" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:10:01.676" endtime="20230704 04:10:01.676"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.675" endtime="20230704 04:10:01.676"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:10:01.676" endtime="20230704 04:10:01.677"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:01.676" endtime="20230704 04:10:01.677"/>
</branch>
<status status="PASS" starttime="20230704 04:10:01.675" endtime="20230704 04:10:01.677"/>
</if>
<status status="PASS" starttime="20230704 04:10:01.629" endtime="20230704 04:10:01.677"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:10:01.677" endtime="20230704 04:10:01.678"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:01.677" endtime="20230704 04:10:01.678"/>
</branch>
<status status="PASS" starttime="20230704 04:10:01.629" endtime="20230704 04:10:01.678"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:10:01.680" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:10:01.678" endtime="20230704 04:10:01.680"/>
</kw>
<msg timestamp="20230704 04:10:01.681" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:10:01.626" endtime="20230704 04:10:01.681"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:01.681" endtime="20230704 04:10:01.760"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.681" endtime="20230704 04:10:01.760"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:10:01.761" endtime="20230704 04:10:01.761"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:01.760" endtime="20230704 04:10:01.761"/>
</branch>
<status status="PASS" starttime="20230704 04:10:01.681" endtime="20230704 04:10:01.761"/>
</if>
<status status="PASS" starttime="20230704 04:10:01.625" endtime="20230704 04:10:01.761"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:10:01.764" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:10:01.762" endtime="20230704 04:10:01.764"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:10:01.765" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:10:01.764" endtime="20230704 04:10:01.765"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:10:01.765" endtime="20230704 04:10:01.765"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.762" endtime="20230704 04:10:01.766"/>
</kw>
<status status="PASS" starttime="20230704 04:09:57.050" endtime="20230704 04:10:01.766"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:10:01.769" endtime="20230704 04:10:01.769"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:01.768" endtime="20230704 04:10:01.769"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:10:01.770" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:10:01.769" endtime="20230704 04:10:01.770"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:01.770" endtime="20230704 04:10:01.934"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:01.957" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:01.935" endtime="20230704 04:10:01.958"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.934" endtime="20230704 04:10:01.958"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:01.958" endtime="20230704 04:10:02.200"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:02.265" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:10:02.200" endtime="20230704 04:10:02.266"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.769" endtime="20230704 04:10:02.266"/>
</branch>
<status status="PASS" starttime="20230704 04:10:01.768" endtime="20230704 04:10:02.266"/>
</if>
<status status="PASS" starttime="20230704 04:10:01.768" endtime="20230704 04:10:02.266"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:10:02.267" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:10:02.267" endtime="20230704 04:10:02.268"/>
</kw>
<status status="PASS" starttime="20230704 04:10:02.267" endtime="20230704 04:10:02.268"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:10:02.268" endtime="20230704 04:10:02.269"/>
</kw>
<status status="PASS" starttime="20230704 04:10:02.268" endtime="20230704 04:10:02.270"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:02.271" endtime="20230704 04:10:02.792"/>
</kw>
<status status="PASS" starttime="20230704 04:10:02.271" endtime="20230704 04:10:02.792"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:07.407" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:02.793" endtime="20230704 04:10:07.407"/>
</kw>
<status status="PASS" starttime="20230704 04:10:02.793" endtime="20230704 04:10:07.408"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:10:07.661" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:10:07.408" endtime="20230704 04:10:07.662"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:10:07.662" endtime="20230704 04:10:07.662"/>
</kw>
<status status="PASS" starttime="20230704 04:10:02.792" endtime="20230704 04:10:07.663"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:07.663" endtime="20230704 04:10:08.933"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:09.892" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:08.935" endtime="20230704 04:10:09.892"/>
</kw>
<status status="PASS" starttime="20230704 04:10:08.934" endtime="20230704 04:10:09.893"/>
</kw>
<status status="PASS" starttime="20230704 04:10:07.663" endtime="20230704 04:10:09.893"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:10:09.945" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:10:09.945" level="INFO">${elements} = ['element=0577d065-eb9c-4d8f-b6f7-5c6f6818f47e']</msg>
<status status="PASS" starttime="20230704 04:10:09.894" endtime="20230704 04:10:09.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:10:09.946" level="INFO">${first_element} = element=0577d065-eb9c-4d8f-b6f7-5c6f6818f47e</msg>
<status status="PASS" starttime="20230704 04:10:09.946" endtime="20230704 04:10:09.946"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:09.946" endtime="20230704 04:10:10.152"/>
</kw>
<status status="PASS" starttime="20230704 04:10:09.894" endtime="20230704 04:10:10.153"/>
</kw>
<status status="PASS" starttime="20230704 04:10:09.893" endtime="20230704 04:10:10.153"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:10.154" endtime="20230704 04:10:11.795"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:11.810" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:11.796" endtime="20230704 04:10:11.810"/>
</kw>
<status status="PASS" starttime="20230704 04:10:11.795" endtime="20230704 04:10:11.810"/>
</kw>
<status status="PASS" starttime="20230704 04:10:10.154" endtime="20230704 04:10:11.811"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:11.811" endtime="20230704 04:10:12.152"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:12.167" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:12.154" endtime="20230704 04:10:12.167"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.153" endtime="20230704 04:10:12.167"/>
</kw>
<status status="PASS" starttime="20230704 04:10:11.811" endtime="20230704 04:10:12.167"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:12.168" endtime="20230704 04:10:12.528"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:12.549" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:12.529" endtime="20230704 04:10:12.549"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.528" endtime="20230704 04:10:12.550"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.168" endtime="20230704 04:10:12.550"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:12.551" endtime="20230704 04:10:12.876"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:12.893" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:12.877" endtime="20230704 04:10:12.894"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.876" endtime="20230704 04:10:12.894"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.550" endtime="20230704 04:10:12.894"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:12.895" endtime="20230704 04:10:13.180"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:13.196" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:13.181" endtime="20230704 04:10:13.196"/>
</kw>
<status status="PASS" starttime="20230704 04:10:13.181" endtime="20230704 04:10:13.196"/>
</kw>
<status status="PASS" starttime="20230704 04:10:12.894" endtime="20230704 04:10:13.196"/>
</kw>
<status status="PASS" starttime="20230704 04:10:10.153" endtime="20230704 04:10:13.197"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:13.198" endtime="20230704 04:10:13.378"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:13.379" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:13.379" endtime="20230704 04:10:13.487"/>
</kw>
<status status="PASS" starttime="20230704 04:10:13.197" endtime="20230704 04:10:13.487"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:13.488" endtime="20230704 04:10:13.711"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:13.712" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:13.711" endtime="20230704 04:10:13.807"/>
</kw>
<status status="PASS" starttime="20230704 04:10:13.488" endtime="20230704 04:10:13.807"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:13.808" endtime="20230704 04:10:13.996"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:13.997" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:13.996" endtime="20230704 04:10:14.102"/>
</kw>
<status status="PASS" starttime="20230704 04:10:13.807" endtime="20230704 04:10:14.102"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.104" endtime="20230704 04:10:14.308"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:14.309" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:14.308" endtime="20230704 04:10:14.357"/>
</kw>
<status status="PASS" starttime="20230704 04:10:14.103" endtime="20230704 04:10:14.357"/>
</kw>
<status status="PASS" starttime="20230704 04:10:13.197" endtime="20230704 04:10:14.357"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.358" endtime="20230704 04:10:14.537"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.537" endtime="20230704 04:10:14.666"/>
</kw>
<status status="PASS" starttime="20230704 04:10:14.357" endtime="20230704 04:10:14.666"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.667" endtime="20230704 04:10:14.774"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.775" endtime="20230704 04:10:14.973"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:14.973" endtime="20230704 04:10:15.217"/>
</kw>
<status status="PASS" starttime="20230704 04:10:14.666" endtime="20230704 04:10:15.217"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:19.867" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:15.218" endtime="20230704 04:10:19.867"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:19.868" endtime="20230704 04:10:24.740"/>
</kw>
<status status="PASS" starttime="20230704 04:10:15.218" endtime="20230704 04:10:24.740"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:28.444" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:24.741" endtime="20230704 04:10:28.444"/>
</kw>
<status status="PASS" starttime="20230704 04:10:24.741" endtime="20230704 04:10:28.445"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:28.547" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:28.446" endtime="20230704 04:10:28.547"/>
</kw>
<status status="PASS" starttime="20230704 04:10:28.446" endtime="20230704 04:10:28.548"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:28.548" endtime="20230704 04:10:29.098"/>
</kw>
<status status="PASS" starttime="20230704 04:10:28.445" endtime="20230704 04:10:29.098"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:10:29.274" level="INFO">Text: 'Booking number: 223843405'</msg>
<msg timestamp="20230704 04:10:29.274" level="INFO">${str} = Booking number: 223843405</msg>
<status status="PASS" starttime="20230704 04:10:29.099" endtime="20230704 04:10:29.274"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:10:29.274" endtime="20230704 04:10:29.275"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:10:29.276" level="INFO">${str} = Booking number: 223843405</msg>
<status status="PASS" starttime="20230704 04:10:29.275" endtime="20230704 04:10:29.276"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:10:29.276" level="INFO">${str} = Booking number: 223843405</msg>
<status status="PASS" starttime="20230704 04:10:29.276" endtime="20230704 04:10:29.276"/>
</kw>
<status status="PASS" starttime="20230704 04:10:29.099" endtime="20230704 04:10:29.277"/>
</kw>
<status status="PASS" starttime="20230704 04:10:24.740" endtime="20230704 04:10:29.277"/>
</kw>
<status status="PASS" starttime="20230704 04:10:15.217" endtime="20230704 04:10:29.277"/>
</kw>
<status status="PASS" starttime="20230704 04:10:01.767" endtime="20230704 04:10:29.277"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:29.302" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:29.280" endtime="20230704 04:10:29.302"/>
</kw>
<status status="PASS" starttime="20230704 04:10:29.278" endtime="20230704 04:10:29.302"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:29.302" endtime="20230704 04:10:29.493"/>
</kw>
<status status="PASS" starttime="20230704 04:10:29.278" endtime="20230704 04:10:29.494"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:29.494" endtime="20230704 04:10:30.583"/>
</kw>
<status status="PASS" starttime="20230704 04:10:29.494" endtime="20230704 04:10:30.584"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:30.585" endtime="20230704 04:10:30.735"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:30.762" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:30.736" endtime="20230704 04:10:30.763"/>
</kw>
<status status="PASS" starttime="20230704 04:10:30.735" endtime="20230704 04:10:30.763"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:30.764" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:30.764" endtime="20230704 04:10:31.894"/>
</kw>
<status status="PASS" starttime="20230704 04:10:30.763" endtime="20230704 04:10:31.895"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:31.895" endtime="20230704 04:10:32.373"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:32.422" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:32.374" endtime="20230704 04:10:32.422"/>
</kw>
<status status="PASS" starttime="20230704 04:10:32.374" endtime="20230704 04:10:32.422"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:32.424" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:32.423" endtime="20230704 04:10:32.856"/>
</kw>
<status status="PASS" starttime="20230704 04:10:32.423" endtime="20230704 04:10:32.856"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:32.856" endtime="20230704 04:10:32.990"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:33.011" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:32.991" endtime="20230704 04:10:33.012"/>
</kw>
<status status="PASS" starttime="20230704 04:10:32.991" endtime="20230704 04:10:33.012"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:33.013" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:33.013" endtime="20230704 04:10:33.839"/>
</kw>
<status status="PASS" starttime="20230704 04:10:33.012" endtime="20230704 04:10:33.839"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:33.839" endtime="20230704 04:10:34.005"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:34.025" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:34.006" endtime="20230704 04:10:34.025"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.005" endtime="20230704 04:10:34.025"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:34.026" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:34.026" endtime="20230704 04:10:34.372"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.026" endtime="20230704 04:10:34.372"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:34.394" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:34.373" endtime="20230704 04:10:34.394"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.372" endtime="20230704 04:10:34.394"/>
</kw>
<status status="PASS" starttime="20230704 04:10:30.584" endtime="20230704 04:10:34.394"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:34.396" endtime="20230704 04:10:34.543"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:34.560" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:34.544" endtime="20230704 04:10:34.560"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.543" endtime="20230704 04:10:34.560"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.396" endtime="20230704 04:10:34.561"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:37.002" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:34.563" endtime="20230704 04:10:37.002"/>
</kw>
<msg timestamp="20230704 04:10:37.002" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:10:34.563" endtime="20230704 04:10:37.002"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:10:37.003" endtime="20230704 04:10:37.004"/>
</kw>
<status status="PASS" starttime="20230704 04:10:37.003" endtime="20230704 04:10:37.004"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:10:37.004" endtime="20230704 04:10:37.005"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.561" endtime="20230704 04:10:37.005"/>
</kw>
<status status="PASS" starttime="20230704 04:10:34.561" endtime="20230704 04:10:37.005"/>
</kw>
<kw name="Verify email with invalid email" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:37.006" endtime="20230704 04:10:37.065"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>example21423example.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>example21423example.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:10:37.066" level="INFO">Types the text 'example21423example.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:10:37.066" endtime="20230704 04:10:37.388"/>
</kw>
<status status="PASS" starttime="20230704 04:10:37.065" endtime="20230704 04:10:37.388"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='email')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:43.550" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:10:43.550" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:10:43.550" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'email\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:10:37.390" endtime="20230704 04:10:43.551"/>
</kw>
<msg timestamp="20230704 04:10:43.551" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:10:37.389" endtime="20230704 04:10:43.551"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:10:43.551" endtime="20230704 04:10:43.552"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:10:43.553" endtime="20230704 04:10:43.553"/>
</kw>
<status status="PASS" starttime="20230704 04:10:43.552" endtime="20230704 04:10:43.553"/>
</kw>
<status status="PASS" starttime="20230704 04:10:37.389" endtime="20230704 04:10:43.554"/>
</kw>
<status status="PASS" starttime="20230704 04:10:37.006" endtime="20230704 04:10:43.554"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:10:44.519" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:10:43.554" endtime="20230704 04:10:44.519"/>
</kw>
<status status="PASS" starttime="20230704 04:09:57.049" endtime="20230704 04:10:44.520"/>
</test>
<test id="s1-s1-s1-s1-s1-t9" name="Verify Warning popup when inviting blocked guest" line="69">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:10:44.525" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/882a86fc-706e-422b-af64-595d423c74f5"}</msg>
<msg timestamp="20230704 04:10:45.393" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/882a86fc-706e-422b-af64-595d423c74f5"}</msg>
<status status="PASS" starttime="20230704 04:10:44.524" endtime="20230704 04:10:45.393"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:10:45.394" endtime="20230704 04:10:45.394"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:10:45.395" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:10:45.442" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:10:45.443" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:10:45.395" endtime="20230704 04:10:45.443"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:10:48.201" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:10:45.443" endtime="20230704 04:10:48.201"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:10:48.202" endtime="20230704 04:10:49.274"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:10:49.278" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:10:49.276" endtime="20230704 04:10:49.279"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:10:49.322" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:10:49.323" level="INFO">${els} = ['element=760d7bdb-cd61-40d1-a64b-caf2d4742f69']</msg>
<status status="PASS" starttime="20230704 04:10:49.279" endtime="20230704 04:10:49.323"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:10:49.323" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:10:49.323" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:10:49.323" endtime="20230704 04:10:49.323"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:10:49.324" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:10:49.324" endtime="20230704 04:10:49.324"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.324" endtime="20230704 04:10:49.325"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:10:49.325" endtime="20230704 04:10:49.325"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:49.325" endtime="20230704 04:10:49.325"/>
</branch>
<status status="PASS" starttime="20230704 04:10:49.324" endtime="20230704 04:10:49.325"/>
</if>
<status status="PASS" starttime="20230704 04:10:49.279" endtime="20230704 04:10:49.325"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:10:49.326" endtime="20230704 04:10:49.326"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:49.326" endtime="20230704 04:10:49.326"/>
</branch>
<status status="PASS" starttime="20230704 04:10:49.279" endtime="20230704 04:10:49.326"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:10:49.329" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:10:49.326" endtime="20230704 04:10:49.329"/>
</kw>
<msg timestamp="20230704 04:10:49.329" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:10:49.275" endtime="20230704 04:10:49.329"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:49.330" endtime="20230704 04:10:49.405"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.330" endtime="20230704 04:10:49.405"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:10:49.406" endtime="20230704 04:10:49.406"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:49.405" endtime="20230704 04:10:49.406"/>
</branch>
<status status="PASS" starttime="20230704 04:10:49.329" endtime="20230704 04:10:49.406"/>
</if>
<status status="PASS" starttime="20230704 04:10:49.275" endtime="20230704 04:10:49.406"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:10:49.409" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:10:49.407" endtime="20230704 04:10:49.409"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:10:49.410" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:10:49.409" endtime="20230704 04:10:49.410"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:10:49.410" endtime="20230704 04:10:49.410"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.406" endtime="20230704 04:10:49.411"/>
</kw>
<status status="PASS" starttime="20230704 04:10:44.524" endtime="20230704 04:10:49.411"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:10:49.413" endtime="20230704 04:10:49.413"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:10:49.413" endtime="20230704 04:10:49.413"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:10:49.414" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:10:49.414" endtime="20230704 04:10:49.414"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:49.414" endtime="20230704 04:10:49.502"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:49.582" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:49.504" endtime="20230704 04:10:49.582"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.502" endtime="20230704 04:10:49.583"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:49.583" endtime="20230704 04:10:49.754"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:49.829" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:10:49.755" endtime="20230704 04:10:49.829"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.414" endtime="20230704 04:10:49.829"/>
</branch>
<status status="PASS" starttime="20230704 04:10:49.413" endtime="20230704 04:10:49.829"/>
</if>
<status status="PASS" starttime="20230704 04:10:49.412" endtime="20230704 04:10:49.829"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:10:49.831" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:10:49.830" endtime="20230704 04:10:49.831"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.830" endtime="20230704 04:10:49.831"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:10:49.832" endtime="20230704 04:10:49.832"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.831" endtime="20230704 04:10:49.833"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:49.833" endtime="20230704 04:10:50.323"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.833" endtime="20230704 04:10:50.324"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:54.002" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:50.325" endtime="20230704 04:10:54.002"/>
</kw>
<status status="PASS" starttime="20230704 04:10:50.324" endtime="20230704 04:10:54.003"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:10:54.267" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:10:54.003" endtime="20230704 04:10:54.267"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:10:54.271" endtime="20230704 04:10:54.271"/>
</kw>
<status status="PASS" starttime="20230704 04:10:50.324" endtime="20230704 04:10:54.271"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:54.272" endtime="20230704 04:10:56.442"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:57.128" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:56.444" endtime="20230704 04:10:57.129"/>
</kw>
<status status="PASS" starttime="20230704 04:10:56.443" endtime="20230704 04:10:57.129"/>
</kw>
<status status="PASS" starttime="20230704 04:10:54.272" endtime="20230704 04:10:57.129"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:10:57.150" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:10:57.150" level="INFO">${elements} = ['element=6f5462d9-8412-4543-9ddd-c4f0bfaa6cde']</msg>
<status status="PASS" starttime="20230704 04:10:57.131" endtime="20230704 04:10:57.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:10:57.151" level="INFO">${first_element} = element=6f5462d9-8412-4543-9ddd-c4f0bfaa6cde</msg>
<status status="PASS" starttime="20230704 04:10:57.151" endtime="20230704 04:10:57.151"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:57.151" endtime="20230704 04:10:57.289"/>
</kw>
<status status="PASS" starttime="20230704 04:10:57.130" endtime="20230704 04:10:57.289"/>
</kw>
<status status="PASS" starttime="20230704 04:10:57.130" endtime="20230704 04:10:57.290"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:57.291" endtime="20230704 04:10:58.836"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:58.850" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:58.837" endtime="20230704 04:10:58.850"/>
</kw>
<status status="PASS" starttime="20230704 04:10:58.837" endtime="20230704 04:10:58.851"/>
</kw>
<status status="PASS" starttime="20230704 04:10:57.290" endtime="20230704 04:10:58.851"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:58.852" endtime="20230704 04:10:59.156"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:59.185" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:59.157" endtime="20230704 04:10:59.185"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.157" endtime="20230704 04:10:59.186"/>
</kw>
<status status="PASS" starttime="20230704 04:10:58.851" endtime="20230704 04:10:59.186"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:59.187" endtime="20230704 04:10:59.555"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:59.573" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:59.556" endtime="20230704 04:10:59.573"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.555" endtime="20230704 04:10:59.573"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.186" endtime="20230704 04:10:59.574"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:59.574" endtime="20230704 04:10:59.873"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:10:59.892" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:10:59.874" endtime="20230704 04:10:59.892"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.874" endtime="20230704 04:10:59.892"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.574" endtime="20230704 04:10:59.893"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:10:59.893" endtime="20230704 04:11:00.185"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:00.201" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:00.186" endtime="20230704 04:11:00.201"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.185" endtime="20230704 04:11:00.201"/>
</kw>
<status status="PASS" starttime="20230704 04:10:59.893" endtime="20230704 04:11:00.202"/>
</kw>
<status status="PASS" starttime="20230704 04:10:57.290" endtime="20230704 04:11:00.202"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:00.204" endtime="20230704 04:11:00.385"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:00.386" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:00.386" endtime="20230704 04:11:00.457"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.203" endtime="20230704 04:11:00.457"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:00.458" endtime="20230704 04:11:00.621"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:00.622" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:00.621" endtime="20230704 04:11:00.700"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.457" endtime="20230704 04:11:00.701"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:00.702" endtime="20230704 04:11:00.853"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:00.854" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:00.854" endtime="20230704 04:11:00.923"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.701" endtime="20230704 04:11:00.923"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:00.924" endtime="20230704 04:11:01.072"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:01.073" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:01.073" endtime="20230704 04:11:01.099"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.923" endtime="20230704 04:11:01.099"/>
</kw>
<status status="PASS" starttime="20230704 04:11:00.202" endtime="20230704 04:11:01.099"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:01.100" endtime="20230704 04:11:01.244"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:01.244" endtime="20230704 04:11:01.373"/>
</kw>
<status status="PASS" starttime="20230704 04:11:01.100" endtime="20230704 04:11:01.373"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:01.374" endtime="20230704 04:11:01.474"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:01.474" endtime="20230704 04:11:01.609"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:01.609" endtime="20230704 04:11:01.928"/>
</kw>
<status status="PASS" starttime="20230704 04:11:01.373" endtime="20230704 04:11:01.929"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:08.164" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:01.930" endtime="20230704 04:11:08.164"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:08.164" endtime="20230704 04:11:12.934"/>
</kw>
<status status="PASS" starttime="20230704 04:11:01.929" endtime="20230704 04:11:12.934"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:16.870" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:12.936" endtime="20230704 04:11:16.871"/>
</kw>
<status status="PASS" starttime="20230704 04:11:12.936" endtime="20230704 04:11:16.871"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:17.147" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:16.881" endtime="20230704 04:11:17.147"/>
</kw>
<status status="PASS" starttime="20230704 04:11:16.877" endtime="20230704 04:11:17.148"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:17.148" endtime="20230704 04:11:18.400"/>
</kw>
<status status="PASS" starttime="20230704 04:11:16.876" endtime="20230704 04:11:18.401"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:11:18.454" level="INFO">Text: 'Booking number: 240468182'</msg>
<msg timestamp="20230704 04:11:18.454" level="INFO">${str} = Booking number: 240468182</msg>
<status status="PASS" starttime="20230704 04:11:18.401" endtime="20230704 04:11:18.454"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:11:18.454" endtime="20230704 04:11:18.455"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:11:18.455" level="INFO">${str} = Booking number: 240468182</msg>
<status status="PASS" starttime="20230704 04:11:18.455" endtime="20230704 04:11:18.455"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:11:18.456" level="INFO">${str} = Booking number: 240468182</msg>
<status status="PASS" starttime="20230704 04:11:18.456" endtime="20230704 04:11:18.456"/>
</kw>
<status status="PASS" starttime="20230704 04:11:18.401" endtime="20230704 04:11:18.456"/>
</kw>
<status status="PASS" starttime="20230704 04:11:12.935" endtime="20230704 04:11:18.456"/>
</kw>
<status status="PASS" starttime="20230704 04:11:01.929" endtime="20230704 04:11:18.457"/>
</kw>
<status status="PASS" starttime="20230704 04:10:49.411" endtime="20230704 04:11:18.457"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:18.471" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:18.458" endtime="20230704 04:11:18.472"/>
</kw>
<status status="PASS" starttime="20230704 04:11:18.458" endtime="20230704 04:11:18.472"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:18.472" endtime="20230704 04:11:18.609"/>
</kw>
<status status="PASS" starttime="20230704 04:11:18.457" endtime="20230704 04:11:18.609"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:18.610" endtime="20230704 04:11:19.521"/>
</kw>
<status status="PASS" starttime="20230704 04:11:18.609" endtime="20230704 04:11:19.522"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:19.523" endtime="20230704 04:11:19.621"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:19.633" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:19.622" endtime="20230704 04:11:19.633"/>
</kw>
<status status="PASS" starttime="20230704 04:11:19.622" endtime="20230704 04:11:19.633"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:19.635" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:19.634" endtime="20230704 04:11:20.221"/>
</kw>
<status status="PASS" starttime="20230704 04:11:19.633" endtime="20230704 04:11:20.221"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:20.222" endtime="20230704 04:11:21.429"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:21.442" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:21.430" endtime="20230704 04:11:21.442"/>
</kw>
<status status="PASS" starttime="20230704 04:11:21.429" endtime="20230704 04:11:21.443"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:21.444" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:21.444" endtime="20230704 04:11:21.755"/>
</kw>
<status status="PASS" starttime="20230704 04:11:21.443" endtime="20230704 04:11:21.755"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:21.756" endtime="20230704 04:11:21.859"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:21.876" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:21.860" endtime="20230704 04:11:21.876"/>
</kw>
<status status="PASS" starttime="20230704 04:11:21.859" endtime="20230704 04:11:21.877"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:21.878" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:21.878" endtime="20230704 04:11:22.299"/>
</kw>
<status status="PASS" starttime="20230704 04:11:21.877" endtime="20230704 04:11:22.299"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:22.300" endtime="20230704 04:11:22.389"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:22.401" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:22.390" endtime="20230704 04:11:22.402"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.389" endtime="20230704 04:11:22.402"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:22.403" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:22.403" endtime="20230704 04:11:22.611"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.402" endtime="20230704 04:11:22.611"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:22.620" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:22.612" endtime="20230704 04:11:22.620"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.611" endtime="20230704 04:11:22.620"/>
</kw>
<status status="PASS" starttime="20230704 04:11:19.522" endtime="20230704 04:11:22.620"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:22.621" endtime="20230704 04:11:22.725"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:22.736" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:22.726" endtime="20230704 04:11:22.736"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.726" endtime="20230704 04:11:22.736"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.621" endtime="20230704 04:11:22.736"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:25.244" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:22.738" endtime="20230704 04:11:25.245"/>
</kw>
<msg timestamp="20230704 04:11:25.245" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:11:22.738" endtime="20230704 04:11:25.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:11:25.246" endtime="20230704 04:11:25.246"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.245" endtime="20230704 04:11:25.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:11:25.247" endtime="20230704 04:11:25.248"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.737" endtime="20230704 04:11:25.248"/>
</kw>
<status status="PASS" starttime="20230704 04:11:22.737" endtime="20230704 04:11:25.249"/>
</kw>
<kw name="Fill invite guest info with block guest email" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//div[contains(@class,'chakra-offset-slide')]//form</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:25.260" level="INFO">Waited for Element with selector //div[contains(@class,'chakra-offset-slide')]//form at state visible</msg>
<status status="PASS" starttime="20230704 04:11:25.250" endtime="20230704 04:11:25.261"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.250" endtime="20230704 04:11:25.261"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='firstName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:25.263" endtime="20230704 04:11:25.327"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='firstName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:25.337" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:25.328" endtime="20230704 04:11:25.337"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.327" endtime="20230704 04:11:25.338"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='firstName']</arg>
<arg>User</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='firstName']</arg>
<arg>User</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:25.339" level="INFO">Types the text 'User' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:25.338" endtime="20230704 04:11:25.420"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.338" endtime="20230704 04:11:25.420"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='lastName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:25.420" endtime="20230704 04:11:25.506"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='lastName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:25.523" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:25.507" endtime="20230704 04:11:25.523"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.507" endtime="20230704 04:11:25.524"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='lastName']</arg>
<arg>blocktest</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='lastName']</arg>
<arg>blocktest</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:25.525" level="INFO">Types the text 'blocktest' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:25.525" endtime="20230704 04:11:25.710"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.524" endtime="20230704 04:11:25.710"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:25.710" endtime="20230704 04:11:25.787"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='email']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:25.797" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:25.789" endtime="20230704 04:11:25.797"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.788" endtime="20230704 04:11:25.797"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>blockuserfortest@gmail.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>blockuserfortest@gmail.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:25.798" level="INFO">Types the text 'blockuserfortest@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:25.798" endtime="20230704 04:11:26.086"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.798" endtime="20230704 04:11:26.087"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:26.087" endtime="20230704 04:11:26.168"/>
</kw>
<status status="PASS" starttime="20230704 04:11:25.249" endtime="20230704 04:11:26.169"/>
</kw>
<kw name="Verify Warning Popup is displayed with blocker email" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Close']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:32.289" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:11:32.289" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:11:32.290" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[normalize-space()=\'Close\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:11:26.170" endtime="20230704 04:11:32.290"/>
</kw>
<msg timestamp="20230704 04:11:32.290" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230704 04:11:26.170" endtime="20230704 04:11:32.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230704 04:11:32.293" level="FAIL">'False==True' should be true.</msg>
<status status="FAIL" starttime="20230704 04:11:32.292" endtime="20230704 04:11:32.293"/>
</kw>
<status status="FAIL" starttime="20230704 04:11:32.291" endtime="20230704 04:11:32.293"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230704 04:11:32.294" endtime="20230704 04:11:32.294"/>
</kw>
<status status="FAIL" starttime="20230704 04:11:26.169" endtime="20230704 04:11:32.295"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'This email address has been blocked, please change')]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230704 04:11:32.295" endtime="20230704 04:11:32.296"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'Cannot invite')]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230704 04:11:32.296" endtime="20230704 04:11:32.296"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//img[contains(@src,'/en/booking/resources/images/uninvite-bell.png')]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230704 04:11:32.296" endtime="20230704 04:11:32.297"/>
</kw>
<status status="FAIL" starttime="20230704 04:11:26.169" endtime="20230704 04:11:32.297"/>
</kw>
<kw name="Close Warning popup" library="booking">
<status status="NOT RUN" starttime="20230704 04:11:32.298" endtime="20230704 04:11:32.298"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:11:32.898" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:11:32.298" endtime="20230704 04:11:32.898"/>
</kw>
<status status="FAIL" starttime="20230704 04:10:44.523" endtime="20230704 04:11:32.898">'False==True' should be true.</status>
</test>
<test id="s1-s1-s1-s1-s1-t10" name="Verify invite guest with guest email same as booker email" line="80">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:11:32.904" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/eaa952b4-41d1-45bb-93ed-face2f3fcb27"}</msg>
<msg timestamp="20230704 04:11:33.540" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/eaa952b4-41d1-45bb-93ed-face2f3fcb27"}</msg>
<status status="PASS" starttime="20230704 04:11:32.903" endtime="20230704 04:11:33.541"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:11:33.541" endtime="20230704 04:11:33.542"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:11:33.543" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:11:33.610" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:11:33.610" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:11:33.542" endtime="20230704 04:11:33.610"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:11:36.061" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:11:33.611" endtime="20230704 04:11:36.061"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:11:36.062" endtime="20230704 04:11:37.218"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:11:37.223" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:11:37.220" endtime="20230704 04:11:37.223"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:11:37.270" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:11:37.271" level="INFO">${els} = ['element=d9174acf-0b8c-4a4a-afe7-047fe0675e32']</msg>
<status status="PASS" starttime="20230704 04:11:37.223" endtime="20230704 04:11:37.271"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:11:37.271" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:11:37.272" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:11:37.271" endtime="20230704 04:11:37.272"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:11:37.273" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:11:37.272" endtime="20230704 04:11:37.273"/>
</kw>
<status status="PASS" starttime="20230704 04:11:37.272" endtime="20230704 04:11:37.273"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:11:37.273" endtime="20230704 04:11:37.273"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:11:37.273" endtime="20230704 04:11:37.273"/>
</branch>
<status status="PASS" starttime="20230704 04:11:37.272" endtime="20230704 04:11:37.274"/>
</if>
<status status="PASS" starttime="20230704 04:11:37.223" endtime="20230704 04:11:37.274"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:11:37.274" endtime="20230704 04:11:37.274"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:11:37.274" endtime="20230704 04:11:37.274"/>
</branch>
<status status="PASS" starttime="20230704 04:11:37.223" endtime="20230704 04:11:37.275"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:11:37.277" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:11:37.275" endtime="20230704 04:11:37.277"/>
</kw>
<msg timestamp="20230704 04:11:37.278" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:11:37.219" endtime="20230704 04:11:37.278"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:37.278" endtime="20230704 04:11:37.395"/>
</kw>
<status status="PASS" starttime="20230704 04:11:37.278" endtime="20230704 04:11:37.395"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:11:37.396" endtime="20230704 04:11:37.396"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:11:37.396" endtime="20230704 04:11:37.396"/>
</branch>
<status status="PASS" starttime="20230704 04:11:37.278" endtime="20230704 04:11:37.396"/>
</if>
<status status="PASS" starttime="20230704 04:11:37.219" endtime="20230704 04:11:37.397"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:11:37.405" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:11:37.402" endtime="20230704 04:11:37.405"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:11:37.405" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:11:37.405" endtime="20230704 04:11:37.405"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:11:37.406" endtime="20230704 04:11:37.406"/>
</kw>
<status status="PASS" starttime="20230704 04:11:37.397" endtime="20230704 04:11:37.406"/>
</kw>
<status status="PASS" starttime="20230704 04:11:32.903" endtime="20230704 04:11:37.407"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:11:37.408" endtime="20230704 04:11:37.408"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:11:37.408" endtime="20230704 04:11:37.409"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:11:37.409" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:11:37.409" endtime="20230704 04:11:37.409"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:37.410" endtime="20230704 04:11:38.722"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:38.763" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:38.723" endtime="20230704 04:11:38.764"/>
</kw>
<status status="PASS" starttime="20230704 04:11:38.723" endtime="20230704 04:11:38.764"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:38.764" endtime="20230704 04:11:39.099"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:39.221" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:11:39.099" endtime="20230704 04:11:39.221"/>
</kw>
<status status="PASS" starttime="20230704 04:11:37.409" endtime="20230704 04:11:39.221"/>
</branch>
<status status="PASS" starttime="20230704 04:11:37.408" endtime="20230704 04:11:39.222"/>
</if>
<status status="PASS" starttime="20230704 04:11:37.407" endtime="20230704 04:11:39.222"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:11:39.223" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:11:39.223" endtime="20230704 04:11:39.223"/>
</kw>
<status status="PASS" starttime="20230704 04:11:39.222" endtime="20230704 04:11:39.223"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:11:39.225" endtime="20230704 04:11:39.225"/>
</kw>
<status status="PASS" starttime="20230704 04:11:39.223" endtime="20230704 04:11:39.226"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:39.226" endtime="20230704 04:11:39.909"/>
</kw>
<status status="PASS" starttime="20230704 04:11:39.226" endtime="20230704 04:11:39.909"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:43.222" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:39.912" endtime="20230704 04:11:43.222"/>
</kw>
<status status="PASS" starttime="20230704 04:11:39.910" endtime="20230704 04:11:43.222"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:11:43.476" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:11:43.223" endtime="20230704 04:11:43.476"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:11:43.476" endtime="20230704 04:11:43.477"/>
</kw>
<status status="PASS" starttime="20230704 04:11:39.910" endtime="20230704 04:11:43.477"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:43.478" endtime="20230704 04:11:45.221"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:46.590" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:45.222" endtime="20230704 04:11:46.590"/>
</kw>
<status status="PASS" starttime="20230704 04:11:45.222" endtime="20230704 04:11:46.590"/>
</kw>
<status status="PASS" starttime="20230704 04:11:43.477" endtime="20230704 04:11:46.591"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:11:46.635" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:11:46.636" level="INFO">${elements} = ['element=505fefd5-1743-4756-97a6-6038e4df8ae8']</msg>
<status status="PASS" starttime="20230704 04:11:46.593" endtime="20230704 04:11:46.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:11:46.637" level="INFO">${first_element} = element=505fefd5-1743-4756-97a6-6038e4df8ae8</msg>
<status status="PASS" starttime="20230704 04:11:46.636" endtime="20230704 04:11:46.637"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:46.637" endtime="20230704 04:11:46.805"/>
</kw>
<status status="PASS" starttime="20230704 04:11:46.592" endtime="20230704 04:11:46.805"/>
</kw>
<status status="PASS" starttime="20230704 04:11:46.591" endtime="20230704 04:11:46.806"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:46.807" endtime="20230704 04:11:48.668"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:48.994" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:48.669" endtime="20230704 04:11:48.994"/>
</kw>
<status status="PASS" starttime="20230704 04:11:48.668" endtime="20230704 04:11:48.994"/>
</kw>
<status status="PASS" starttime="20230704 04:11:46.806" endtime="20230704 04:11:48.994"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:48.995" endtime="20230704 04:11:49.220"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:49.238" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:49.221" endtime="20230704 04:11:49.238"/>
</kw>
<status status="PASS" starttime="20230704 04:11:49.221" endtime="20230704 04:11:49.239"/>
</kw>
<status status="PASS" starttime="20230704 04:11:48.995" endtime="20230704 04:11:49.239"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:49.240" endtime="20230704 04:11:49.805"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:49.887" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:49.806" endtime="20230704 04:11:49.888"/>
</kw>
<status status="PASS" starttime="20230704 04:11:49.805" endtime="20230704 04:11:49.888"/>
</kw>
<status status="PASS" starttime="20230704 04:11:49.239" endtime="20230704 04:11:49.888"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:49.889" endtime="20230704 04:11:50.125"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:50.276" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:50.126" endtime="20230704 04:11:50.276"/>
</kw>
<status status="PASS" starttime="20230704 04:11:50.125" endtime="20230704 04:11:50.276"/>
</kw>
<status status="PASS" starttime="20230704 04:11:49.889" endtime="20230704 04:11:50.276"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:50.277" endtime="20230704 04:11:50.674"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:11:50.818" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:50.675" endtime="20230704 04:11:50.818"/>
</kw>
<status status="PASS" starttime="20230704 04:11:50.674" endtime="20230704 04:11:50.818"/>
</kw>
<status status="PASS" starttime="20230704 04:11:50.277" endtime="20230704 04:11:50.818"/>
</kw>
<status status="PASS" starttime="20230704 04:11:46.806" endtime="20230704 04:11:50.819"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:50.820" endtime="20230704 04:11:50.986"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:50.987" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:50.986" endtime="20230704 04:11:51.224"/>
</kw>
<status status="PASS" starttime="20230704 04:11:50.820" endtime="20230704 04:11:51.224"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:51.225" endtime="20230704 04:11:51.534"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:51.535" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:51.535" endtime="20230704 04:11:51.698"/>
</kw>
<status status="PASS" starttime="20230704 04:11:51.224" endtime="20230704 04:11:51.698"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:51.702" endtime="20230704 04:11:51.930"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:51.931" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:51.930" endtime="20230704 04:11:52.043"/>
</kw>
<status status="PASS" starttime="20230704 04:11:51.698" endtime="20230704 04:11:52.044"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:52.045" endtime="20230704 04:11:52.391"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:11:52.392" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:11:52.392" endtime="20230704 04:11:52.456"/>
</kw>
<status status="PASS" starttime="20230704 04:11:52.044" endtime="20230704 04:11:52.456"/>
</kw>
<status status="PASS" starttime="20230704 04:11:50.819" endtime="20230704 04:11:52.456"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:52.457" endtime="20230704 04:11:52.708"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:52.708" endtime="20230704 04:11:52.960"/>
</kw>
<status status="PASS" starttime="20230704 04:11:52.457" endtime="20230704 04:11:52.960"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:52.961" endtime="20230704 04:11:53.228"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:53.228" endtime="20230704 04:11:53.441"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:11:53.441" endtime="20230704 04:11:55.863"/>
</kw>
<status status="PASS" starttime="20230704 04:11:52.961" endtime="20230704 04:11:55.864"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:01.595" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:11:55.865" endtime="20230704 04:12:01.595"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:01.596" endtime="20230704 04:12:06.291"/>
</kw>
<status status="PASS" starttime="20230704 04:11:55.864" endtime="20230704 04:12:06.292"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:09.304" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:06.293" endtime="20230704 04:12:09.304"/>
</kw>
<status status="PASS" starttime="20230704 04:12:06.292" endtime="20230704 04:12:09.305"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:09.377" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:09.306" endtime="20230704 04:12:09.377"/>
</kw>
<status status="PASS" starttime="20230704 04:12:09.305" endtime="20230704 04:12:09.378"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:09.378" endtime="20230704 04:12:09.806"/>
</kw>
<status status="PASS" starttime="20230704 04:12:09.305" endtime="20230704 04:12:09.807"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:12:09.936" level="INFO">Text: 'Booking number: 204561208'</msg>
<msg timestamp="20230704 04:12:09.937" level="INFO">${str} = Booking number: 204561208</msg>
<status status="PASS" starttime="20230704 04:12:09.808" endtime="20230704 04:12:09.937"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:12:09.937" endtime="20230704 04:12:09.938"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:12:09.938" level="INFO">${str} = Booking number: 204561208</msg>
<status status="PASS" starttime="20230704 04:12:09.938" endtime="20230704 04:12:09.938"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:12:09.939" level="INFO">${str} = Booking number: 204561208</msg>
<status status="PASS" starttime="20230704 04:12:09.939" endtime="20230704 04:12:09.939"/>
</kw>
<status status="PASS" starttime="20230704 04:12:09.807" endtime="20230704 04:12:09.939"/>
</kw>
<status status="PASS" starttime="20230704 04:12:06.292" endtime="20230704 04:12:09.947"/>
</kw>
<status status="PASS" starttime="20230704 04:11:55.864" endtime="20230704 04:12:09.956"/>
</kw>
<status status="PASS" starttime="20230704 04:11:37.407" endtime="20230704 04:12:09.956"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:09.977" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:09.958" endtime="20230704 04:12:09.977"/>
</kw>
<status status="PASS" starttime="20230704 04:12:09.957" endtime="20230704 04:12:09.978"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:09.978" endtime="20230704 04:12:10.172"/>
</kw>
<status status="PASS" starttime="20230704 04:12:09.956" endtime="20230704 04:12:10.172"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:10.173" endtime="20230704 04:12:11.078"/>
</kw>
<status status="PASS" starttime="20230704 04:12:10.173" endtime="20230704 04:12:11.078"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:11.079" endtime="20230704 04:12:11.179"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:11.191" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:11.180" endtime="20230704 04:12:11.191"/>
</kw>
<status status="PASS" starttime="20230704 04:12:11.179" endtime="20230704 04:12:11.192"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:11.193" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:11.193" endtime="20230704 04:12:11.759"/>
</kw>
<status status="PASS" starttime="20230704 04:12:11.192" endtime="20230704 04:12:11.759"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:11.759" endtime="20230704 04:12:11.865"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:11.874" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:11.866" endtime="20230704 04:12:11.874"/>
</kw>
<status status="PASS" starttime="20230704 04:12:11.866" endtime="20230704 04:12:11.875"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:11.876" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:11.876" endtime="20230704 04:12:12.104"/>
</kw>
<status status="PASS" starttime="20230704 04:12:11.875" endtime="20230704 04:12:12.104"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:12.104" endtime="20230704 04:12:12.187"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:12.199" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:12.188" endtime="20230704 04:12:12.199"/>
</kw>
<status status="PASS" starttime="20230704 04:12:12.187" endtime="20230704 04:12:12.200"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:12.201" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:12.201" endtime="20230704 04:12:12.701"/>
</kw>
<status status="PASS" starttime="20230704 04:12:12.200" endtime="20230704 04:12:12.701"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:12.701" endtime="20230704 04:12:12.894"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:12.928" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:12.895" endtime="20230704 04:12:12.928"/>
</kw>
<status status="PASS" starttime="20230704 04:12:12.895" endtime="20230704 04:12:12.928"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:12.929" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:12.929" endtime="20230704 04:12:13.175"/>
</kw>
<status status="PASS" starttime="20230704 04:12:12.929" endtime="20230704 04:12:13.175"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:13.186" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:13.176" endtime="20230704 04:12:13.186"/>
</kw>
<status status="PASS" starttime="20230704 04:12:13.175" endtime="20230704 04:12:13.186"/>
</kw>
<status status="PASS" starttime="20230704 04:12:11.079" endtime="20230704 04:12:13.186"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:13.188" endtime="20230704 04:12:13.289"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:13.299" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:13.290" endtime="20230704 04:12:13.300"/>
</kw>
<status status="PASS" starttime="20230704 04:12:13.290" endtime="20230704 04:12:13.300"/>
</kw>
<status status="PASS" starttime="20230704 04:12:13.187" endtime="20230704 04:12:13.300"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:16.273" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:13.302" endtime="20230704 04:12:16.273"/>
</kw>
<msg timestamp="20230704 04:12:16.274" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:12:13.301" endtime="20230704 04:12:16.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:12:16.275" endtime="20230704 04:12:16.276"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.274" endtime="20230704 04:12:16.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:16.276" endtime="20230704 04:12:16.276"/>
</kw>
<status status="PASS" starttime="20230704 04:12:13.301" endtime="20230704 04:12:16.277"/>
</kw>
<status status="PASS" starttime="20230704 04:12:13.300" endtime="20230704 04:12:16.277"/>
</kw>
<kw name="Fill invite guest infor with booker email" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//div[contains(@class,'chakra-offset-slide')]//form</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:16.288" level="INFO">Waited for Element with selector //div[contains(@class,'chakra-offset-slide')]//form at state visible</msg>
<status status="PASS" starttime="20230704 04:12:16.278" endtime="20230704 04:12:16.289"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.278" endtime="20230704 04:12:16.289"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='firstName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:16.289" endtime="20230704 04:12:16.344"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='firstName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:16.354" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:16.345" endtime="20230704 04:12:16.354"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.345" endtime="20230704 04:12:16.355"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='firstName']</arg>
<arg>user01</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='firstName']</arg>
<arg>user01</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:16.356" level="INFO">Types the text 'user01' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:16.355" endtime="20230704 04:12:16.474"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.355" endtime="20230704 04:12:16.474"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='lastName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:16.475" endtime="20230704 04:12:16.562"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='lastName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:16.575" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:16.563" endtime="20230704 04:12:16.576"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.562" endtime="20230704 04:12:16.576"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='lastName']</arg>
<arg>invited</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='lastName']</arg>
<arg>invited</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:16.577" level="INFO">Types the text 'invited' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:16.577" endtime="20230704 04:12:16.702"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.576" endtime="20230704 04:12:16.703"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:16.703" endtime="20230704 04:12:16.789"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='email']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:16.800" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:16.790" endtime="20230704 04:12:16.800"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.789" endtime="20230704 04:12:16.801"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>bichngoc9995@gmail.com</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>bichngoc9995@gmail.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:16.802" level="INFO">Types the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:16.801" endtime="20230704 04:12:17.356"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.801" endtime="20230704 04:12:17.356"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:17.357" endtime="20230704 04:12:17.563"/>
</kw>
<status status="PASS" starttime="20230704 04:12:16.277" endtime="20230704 04:12:17.563"/>
</kw>
<kw name="Verify Warning Popup is displayed with booker email" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//button[normalize-space()='Close']</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:17.576" level="INFO">Waited for Element with selector //button[normalize-space()='Close'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:17.565" endtime="20230704 04:12:17.576"/>
</kw>
<msg timestamp="20230704 04:12:17.577" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:12:17.565" endtime="20230704 04:12:17.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:12:17.577" endtime="20230704 04:12:17.578"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.577" endtime="20230704 04:12:17.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:17.578" endtime="20230704 04:12:17.579"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.564" endtime="20230704 04:12:17.579"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'Other guests or booker already used this email address, please change it')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:17.590" level="INFO">Waited for Element with selector //p[contains(text(),'Other guests or booker already used this email address, please change it')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:17.580" endtime="20230704 04:12:17.590"/>
</kw>
<msg timestamp="20230704 04:12:17.591" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:12:17.580" endtime="20230704 04:12:17.591"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:12:17.591" endtime="20230704 04:12:17.592"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.591" endtime="20230704 04:12:17.592"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:17.592" endtime="20230704 04:12:17.593"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.579" endtime="20230704 04:12:17.593"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//p[contains(text(),'Cannot invite')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:17.608" level="INFO">Waited for Element with selector //p[contains(text(),'Cannot invite')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:17.594" endtime="20230704 04:12:17.609"/>
</kw>
<msg timestamp="20230704 04:12:17.609" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:12:17.593" endtime="20230704 04:12:17.609"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:12:17.610" endtime="20230704 04:12:17.610"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.609" endtime="20230704 04:12:17.610"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:17.611" endtime="20230704 04:12:17.611"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.593" endtime="20230704 04:12:17.611"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//img[contains(@src,'/en/booking/resources/images/uninvite-bell.png')]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:17.710" level="INFO">Waited for Element with selector //img[contains(@src,'/en/booking/resources/images/uninvite-bell.png')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:17.613" endtime="20230704 04:12:17.710"/>
</kw>
<msg timestamp="20230704 04:12:17.711" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:12:17.613" endtime="20230704 04:12:17.711"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:12:17.713" endtime="20230704 04:12:17.713"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.711" endtime="20230704 04:12:17.713"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:17.714" endtime="20230704 04:12:17.714"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.611" endtime="20230704 04:12:17.715"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.564" endtime="20230704 04:12:17.715"/>
</kw>
<kw name="Close Warning popup" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Close']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:17.716" endtime="20230704 04:12:17.934"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.715" endtime="20230704 04:12:17.934"/>
</kw>
<kw name="Click Cancel button" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:17.935" endtime="20230704 04:12:18.241"/>
</kw>
<status status="PASS" starttime="20230704 04:12:17.934" endtime="20230704 04:12:18.242"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<kw name="Wait For Elements State" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:18.406" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state hidden</msg>
<status status="PASS" starttime="20230704 04:12:18.243" endtime="20230704 04:12:18.406"/>
</kw>
<status status="PASS" starttime="20230704 04:12:18.242" endtime="20230704 04:12:18.407"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:12:19.275" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:12:18.407" endtime="20230704 04:12:19.275"/>
</kw>
<status status="PASS" starttime="20230704 04:11:32.902" endtime="20230704 04:12:19.276"/>
</test>
<test id="s1-s1-s1-s1-s1-t11" name="Verify invite guest with valid information" line="93">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230704 04:12:19.280" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/69071f67-088c-48e9-8178-ec08a615d0c4"}</msg>
<msg timestamp="20230704 04:12:20.028" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/browser/traces/69071f67-088c-48e9-8178-ec08a615d0c4"}</msg>
<status status="PASS" starttime="20230704 04:12:19.280" endtime="20230704 04:12:20.028"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230704 04:12:20.029" endtime="20230704 04:12:20.029"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230704 04:12:20.030" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230704 04:12:20.102" level="INFO">Successfully created context. </msg>
<msg timestamp="20230704 04:12:20.103" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230704 04:12:20.029" endtime="20230704 04:12:20.103"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230704 04:12:22.995" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230704 04:12:20.103" endtime="20230704 04:12:22.995"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230704 04:12:22.996" endtime="20230704 04:12:24.091"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:12:24.095" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230704 04:12:24.093" endtime="20230704 04:12:24.095"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:12:24.143" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:12:24.144" level="INFO">${els} = ['element=76f26380-8a46-4809-a828-5c567a2040b7']</msg>
<status status="PASS" starttime="20230704 04:12:24.096" endtime="20230704 04:12:24.144"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230704 04:12:24.145" level="INFO">Length is 1</msg>
<msg timestamp="20230704 04:12:24.145" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230704 04:12:24.144" endtime="20230704 04:12:24.145"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:12:24.146" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230704 04:12:24.145" endtime="20230704 04:12:24.146"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.145" endtime="20230704 04:12:24.146"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:12:24.146" endtime="20230704 04:12:24.146"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:12:24.146" endtime="20230704 04:12:24.147"/>
</branch>
<status status="PASS" starttime="20230704 04:12:24.145" endtime="20230704 04:12:24.147"/>
</if>
<status status="PASS" starttime="20230704 04:12:24.096" endtime="20230704 04:12:24.147"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230704 04:12:24.147" endtime="20230704 04:12:24.147"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:12:24.147" endtime="20230704 04:12:24.148"/>
</branch>
<status status="PASS" starttime="20230704 04:12:24.095" endtime="20230704 04:12:24.148"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230704 04:12:24.152" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230704 04:12:24.148" endtime="20230704 04:12:24.152"/>
</kw>
<msg timestamp="20230704 04:12:24.154" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230704 04:12:24.092" endtime="20230704 04:12:24.154"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:24.155" endtime="20230704 04:12:24.242"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.154" endtime="20230704 04:12:24.242"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:12:24.243" endtime="20230704 04:12:24.243"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:12:24.242" endtime="20230704 04:12:24.243"/>
</branch>
<status status="PASS" starttime="20230704 04:12:24.154" endtime="20230704 04:12:24.243"/>
</if>
<status status="PASS" starttime="20230704 04:12:24.092" endtime="20230704 04:12:24.243"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230704 04:12:24.246" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230704 04:12:24.244" endtime="20230704 04:12:24.246"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230704 04:12:24.247" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230704 04:12:24.246" endtime="20230704 04:12:24.247"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230704 04:12:24.247" endtime="20230704 04:12:24.247"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.244" endtime="20230704 04:12:24.248"/>
</kw>
<status status="PASS" starttime="20230704 04:12:19.279" endtime="20230704 04:12:24.248"/>
</kw>
<kw name="Booker just completed payment for a reservation" library="booking">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230704 04:12:24.251" endtime="20230704 04:12:24.251"/>
</kw>
<status status="NOT RUN" starttime="20230704 04:12:24.251" endtime="20230704 04:12:24.251"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:12:24.252" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230704 04:12:24.252" endtime="20230704 04:12:24.252"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:24.252" endtime="20230704 04:12:24.344"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:24.439" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:24.345" endtime="20230704 04:12:24.439"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.344" endtime="20230704 04:12:24.440"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:24.440" endtime="20230704 04:12:24.773"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:24.875" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230704 04:12:24.774" endtime="20230704 04:12:24.876"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.251" endtime="20230704 04:12:24.876"/>
</branch>
<status status="PASS" starttime="20230704 04:12:24.251" endtime="20230704 04:12:24.876"/>
</if>
<status status="PASS" starttime="20230704 04:12:24.250" endtime="20230704 04:12:24.876"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230704 04:12:24.877" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230704 04:12:24.877" endtime="20230704 04:12:24.877"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.877" endtime="20230704 04:12:24.878"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:12:24.878" endtime="20230704 04:12:24.879"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.878" endtime="20230704 04:12:24.879"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:24.881" endtime="20230704 04:12:25.586"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.880" endtime="20230704 04:12:25.586"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:28.934" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:25.588" endtime="20230704 04:12:28.934"/>
</kw>
<status status="PASS" starttime="20230704 04:12:25.587" endtime="20230704 04:12:28.935"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230704 04:12:29.193" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230704 04:12:28.935" endtime="20230704 04:12:29.193"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:12:29.193" endtime="20230704 04:12:29.194"/>
</kw>
<status status="PASS" starttime="20230704 04:12:25.587" endtime="20230704 04:12:29.194"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:29.195" endtime="20230704 04:12:31.576"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:32.541" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:31.577" endtime="20230704 04:12:32.541"/>
</kw>
<status status="PASS" starttime="20230704 04:12:31.577" endtime="20230704 04:12:32.541"/>
</kw>
<status status="PASS" starttime="20230704 04:12:29.194" endtime="20230704 04:12:32.542"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230704 04:12:32.576" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230704 04:12:32.576" level="INFO">${elements} = ['element=ca0d0998-b251-427c-85ca-f607ee6efe99']</msg>
<status status="PASS" starttime="20230704 04:12:32.543" endtime="20230704 04:12:32.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230704 04:12:32.577" level="INFO">${first_element} = element=ca0d0998-b251-427c-85ca-f607ee6efe99</msg>
<status status="PASS" starttime="20230704 04:12:32.577" endtime="20230704 04:12:32.577"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:32.578" endtime="20230704 04:12:32.726"/>
</kw>
<status status="PASS" starttime="20230704 04:12:32.542" endtime="20230704 04:12:32.726"/>
</kw>
<status status="PASS" starttime="20230704 04:12:32.542" endtime="20230704 04:12:32.726"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:32.728" endtime="20230704 04:12:34.497"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:34.658" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:34.498" endtime="20230704 04:12:34.659"/>
</kw>
<status status="PASS" starttime="20230704 04:12:34.497" endtime="20230704 04:12:34.659"/>
</kw>
<status status="PASS" starttime="20230704 04:12:32.727" endtime="20230704 04:12:34.659"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:34.660" endtime="20230704 04:12:34.864"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:34.889" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:34.865" endtime="20230704 04:12:34.889"/>
</kw>
<status status="PASS" starttime="20230704 04:12:34.864" endtime="20230704 04:12:34.889"/>
</kw>
<status status="PASS" starttime="20230704 04:12:34.660" endtime="20230704 04:12:34.890"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:34.890" endtime="20230704 04:12:35.236"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:35.260" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:35.238" endtime="20230704 04:12:35.261"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.237" endtime="20230704 04:12:35.261"/>
</kw>
<status status="PASS" starttime="20230704 04:12:34.890" endtime="20230704 04:12:35.261"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:35.262" endtime="20230704 04:12:35.562"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:35.578" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:35.563" endtime="20230704 04:12:35.578"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.562" endtime="20230704 04:12:35.579"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.261" endtime="20230704 04:12:35.579"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:35.580" endtime="20230704 04:12:35.889"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:35.908" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:35.890" endtime="20230704 04:12:35.908"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.890" endtime="20230704 04:12:35.908"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.579" endtime="20230704 04:12:35.909"/>
</kw>
<status status="PASS" starttime="20230704 04:12:32.727" endtime="20230704 04:12:35.909"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:35.910" endtime="20230704 04:12:36.110"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:36.111" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:36.111" endtime="20230704 04:12:36.203"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.910" endtime="20230704 04:12:36.203"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:36.204" endtime="20230704 04:12:36.375"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:36.376" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:36.375" endtime="20230704 04:12:36.464"/>
</kw>
<status status="PASS" starttime="20230704 04:12:36.204" endtime="20230704 04:12:36.465"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:36.466" endtime="20230704 04:12:36.655"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:36.656" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:36.656" endtime="20230704 04:12:36.775"/>
</kw>
<status status="PASS" starttime="20230704 04:12:36.465" endtime="20230704 04:12:36.776"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:36.777" endtime="20230704 04:12:37.140"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:37.141" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:37.141" endtime="20230704 04:12:37.202"/>
</kw>
<status status="PASS" starttime="20230704 04:12:36.776" endtime="20230704 04:12:37.203"/>
</kw>
<status status="PASS" starttime="20230704 04:12:35.909" endtime="20230704 04:12:37.203"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:37.204" endtime="20230704 04:12:37.568"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:37.568" endtime="20230704 04:12:37.772"/>
</kw>
<status status="PASS" starttime="20230704 04:12:37.203" endtime="20230704 04:12:37.772"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:37.773" endtime="20230704 04:12:37.898"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:37.898" endtime="20230704 04:12:38.159"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:38.160" endtime="20230704 04:12:40.442"/>
</kw>
<status status="PASS" starttime="20230704 04:12:37.772" endtime="20230704 04:12:40.442"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:45.906" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:40.445" endtime="20230704 04:12:45.907"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:45.907" endtime="20230704 04:12:50.382"/>
</kw>
<status status="PASS" starttime="20230704 04:12:40.443" endtime="20230704 04:12:50.382"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:53.813" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:50.384" endtime="20230704 04:12:53.813"/>
</kw>
<status status="PASS" starttime="20230704 04:12:50.383" endtime="20230704 04:12:53.814"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:53.901" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:53.816" endtime="20230704 04:12:53.901"/>
</kw>
<status status="PASS" starttime="20230704 04:12:53.815" endtime="20230704 04:12:53.902"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:53.902" endtime="20230704 04:12:55.658"/>
</kw>
<status status="PASS" starttime="20230704 04:12:53.814" endtime="20230704 04:12:55.658"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230704 04:12:55.891" level="INFO">Text: 'Booking number: 589049522'</msg>
<msg timestamp="20230704 04:12:55.892" level="INFO">${str} = Booking number: 589049522</msg>
<status status="PASS" starttime="20230704 04:12:55.659" endtime="20230704 04:12:55.892"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230704 04:12:55.892" endtime="20230704 04:12:55.892"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230704 04:12:55.893" level="INFO">${str} = Booking number: 589049522</msg>
<status status="PASS" starttime="20230704 04:12:55.893" endtime="20230704 04:12:55.893"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230704 04:12:55.894" level="INFO">${str} = Booking number: 589049522</msg>
<status status="PASS" starttime="20230704 04:12:55.893" endtime="20230704 04:12:55.894"/>
</kw>
<status status="PASS" starttime="20230704 04:12:55.659" endtime="20230704 04:12:55.894"/>
</kw>
<status status="PASS" starttime="20230704 04:12:50.383" endtime="20230704 04:12:55.894"/>
</kw>
<status status="PASS" starttime="20230704 04:12:40.442" endtime="20230704 04:12:55.894"/>
</kw>
<status status="PASS" starttime="20230704 04:12:24.250" endtime="20230704 04:12:55.895"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:55.909" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:55.898" endtime="20230704 04:12:55.910"/>
</kw>
<status status="PASS" starttime="20230704 04:12:55.897" endtime="20230704 04:12:55.910"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:55.910" endtime="20230704 04:12:56.109"/>
</kw>
<status status="PASS" starttime="20230704 04:12:55.895" endtime="20230704 04:12:56.110"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:56.111" endtime="20230704 04:12:57.101"/>
</kw>
<status status="PASS" starttime="20230704 04:12:56.110" endtime="20230704 04:12:57.102"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:57.103" endtime="20230704 04:12:57.241"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:57.271" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:57.242" endtime="20230704 04:12:57.271"/>
</kw>
<status status="PASS" starttime="20230704 04:12:57.241" endtime="20230704 04:12:57.272"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:57.273" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:57.272" endtime="20230704 04:12:58.166"/>
</kw>
<status status="PASS" starttime="20230704 04:12:57.272" endtime="20230704 04:12:58.166"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:12:58.167" endtime="20230704 04:12:59.719"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:12:59.755" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230704 04:12:59.720" endtime="20230704 04:12:59.755"/>
</kw>
<status status="PASS" starttime="20230704 04:12:59.719" endtime="20230704 04:12:59.756"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:12:59.757" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230704 04:12:59.757" endtime="20230704 04:13:00.114"/>
</kw>
<status status="PASS" starttime="20230704 04:12:59.756" endtime="20230704 04:13:00.114"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:00.115" endtime="20230704 04:13:00.214"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:00.227" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:00.215" endtime="20230704 04:13:00.227"/>
</kw>
<status status="PASS" starttime="20230704 04:13:00.214" endtime="20230704 04:13:00.227"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:13:00.228" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230704 04:13:00.228" endtime="20230704 04:13:00.894"/>
</kw>
<status status="PASS" starttime="20230704 04:13:00.228" endtime="20230704 04:13:00.894"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:00.895" endtime="20230704 04:13:00.979"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:00.991" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:00.980" endtime="20230704 04:13:00.991"/>
</kw>
<status status="PASS" starttime="20230704 04:13:00.979" endtime="20230704 04:13:00.991"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:13:00.992" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230704 04:13:00.992" endtime="20230704 04:13:01.279"/>
</kw>
<status status="PASS" starttime="20230704 04:13:00.992" endtime="20230704 04:13:01.280"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:01.294" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:01.281" endtime="20230704 04:13:01.294"/>
</kw>
<status status="PASS" starttime="20230704 04:13:01.280" endtime="20230704 04:13:01.294"/>
</kw>
<status status="PASS" starttime="20230704 04:12:57.102" endtime="20230704 04:13:01.294"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:01.295" endtime="20230704 04:13:01.439"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:01.460" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:01.440" endtime="20230704 04:13:01.461"/>
</kw>
<status status="PASS" starttime="20230704 04:13:01.440" endtime="20230704 04:13:01.461"/>
</kw>
<status status="PASS" starttime="20230704 04:13:01.295" endtime="20230704 04:13:01.461"/>
</kw>
<kw name="Invite guest popup is open" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:04.936" level="INFO">Waited for Element with selector //p[text()='Invite guest']/ancestor::div[@class="chakra-offset-slide"] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:01.463" endtime="20230704 04:13:04.936"/>
</kw>
<msg timestamp="20230704 04:13:04.937" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230704 04:13:01.463" endtime="20230704 04:13:04.937"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230704 04:13:04.937" endtime="20230704 04:13:04.938"/>
</kw>
<status status="PASS" starttime="20230704 04:13:04.937" endtime="20230704 04:13:04.938"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230704 04:13:04.938" endtime="20230704 04:13:04.939"/>
</kw>
<status status="PASS" starttime="20230704 04:13:01.462" endtime="20230704 04:13:04.939"/>
</kw>
<status status="PASS" starttime="20230704 04:13:01.461" endtime="20230704 04:13:04.940"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//div[contains(@class,'chakra-offset-slide')]//form</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:04.951" level="INFO">Waited for Element with selector //div[contains(@class,'chakra-offset-slide')]//form at state visible</msg>
<status status="PASS" starttime="20230704 04:13:04.941" endtime="20230704 04:13:04.951"/>
</kw>
<status status="PASS" starttime="20230704 04:13:04.941" endtime="20230704 04:13:04.951"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='firstName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:04.952" endtime="20230704 04:13:05.061"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='firstName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:05.079" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:05.062" endtime="20230704 04:13:05.079"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.061" endtime="20230704 04:13:05.079"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='firstName']</arg>
<arg>${guestFirstname}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='firstName']</arg>
<arg>${guestFirstname}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:13:05.080" level="INFO">Types the text 'Shin' in the given field.</msg>
<status status="PASS" starttime="20230704 04:13:05.080" endtime="20230704 04:13:05.227"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.079" endtime="20230704 04:13:05.227"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='lastName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:05.227" endtime="20230704 04:13:05.313"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='lastName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:05.326" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:05.314" endtime="20230704 04:13:05.326"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.313" endtime="20230704 04:13:05.326"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='lastName']</arg>
<arg>${guestLastname}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='lastName']</arg>
<arg>${guestLastname}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:13:05.327" level="INFO">Types the text 'Suke' in the given field.</msg>
<status status="PASS" starttime="20230704 04:13:05.327" endtime="20230704 04:13:05.431"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.326" endtime="20230704 04:13:05.431"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:05.432" endtime="20230704 04:13:05.507"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='email']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:05.516" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:05.508" endtime="20230704 04:13:05.516"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.508" endtime="20230704 04:13:05.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>${guestEmail}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>${guestEmail}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230704 04:13:05.518" level="INFO">Types the text 'shinsuke@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230704 04:13:05.518" endtime="20230704 04:13:05.860"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.517" endtime="20230704 04:13:05.861"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230704 04:13:05.861" endtime="20230704 04:13:05.982"/>
</kw>
<status status="PASS" starttime="20230704 04:13:04.940" endtime="20230704 04:13:05.982"/>
</kw>
<kw name="Booker is brought back to Comfirmation Landing page" library="booking">
<kw name="Wait For Elements State" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:06.800" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state hidden</msg>
<status status="PASS" starttime="20230704 04:13:05.983" endtime="20230704 04:13:06.801"/>
</kw>
<status status="PASS" starttime="20230704 04:13:05.982" endtime="20230704 04:13:06.801"/>
</kw>
<kw name="Notice &quot;Invite sent&quot; displays" library="booking">
<kw name="Wait For Elements State" library="Browser">
<arg>//p[normalize-space()='Invite sent']</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:13:06.845" level="INFO">Waited for Element with selector //p[normalize-space()='Invite sent'] at state visible</msg>
<status status="PASS" starttime="20230704 04:13:06.802" endtime="20230704 04:13:06.846"/>
</kw>
<status status="PASS" starttime="20230704 04:13:06.801" endtime="20230704 04:13:06.846"/>
</kw>
<kw name="Status of guest confirmation is changed to &quot;Invite sent, not check-in&quot;" library="booking">
<kw name="Wait For Elements State" library="Browser">
<arg>//p[text()='Invite sent, checked-in not complete!']</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230704 04:14:36.964" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230704 04:14:36.964" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/2/playwright-log.txt for additional details.</msg>
<msg timestamp="20230704 04:14:36.965" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[text()=\'Invite sent, checked-in not complete!\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230704 04:13:06.847" endtime="20230704 04:14:36.965"/>
</kw>
<status status="FAIL" starttime="20230704 04:13:06.846" endtime="20230704 04:14:36.966"/>
</kw>
<kw name="Verify Guest information component" library="booking">
<status status="NOT RUN" starttime="20230704 04:14:36.966" endtime="20230704 04:14:36.967"/>
</kw>
<kw name="Verify Booking summary" library="booking">
<status status="NOT RUN" starttime="20230704 04:14:36.967" endtime="20230704 04:14:36.967"/>
</kw>
<kw name="Verify Guest information popup when guest not checkin" library="booking">
<status status="NOT RUN" starttime="20230704 04:14:36.967" endtime="20230704 04:14:36.967"/>
</kw>
<kw name="Click Uninvite button" library="booking">
<status status="NOT RUN" starttime="20230704 04:14:36.968" endtime="20230704 04:14:36.968"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230704 04:14:37.239" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230704 04:14:36.968" endtime="20230704 04:14:37.240"/>
</kw>
<status status="FAIL" starttime="20230704 04:12:19.278" endtime="20230704 04:14:37.240">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[text()=\'Invite sent, checked-in not complete!\']') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<status status="FAIL" starttime="20230704 04:04:19.890" endtime="20230704 04:14:37.243"/>
</suite>
<status status="FAIL" starttime="20230704 04:04:19.887" endtime="20230704 04:14:37.250"/>
</suite>
<status status="FAIL" starttime="20230704 04:04:19.885" endtime="20230704 04:14:37.253"/>
</suite>
<status status="FAIL" starttime="20230704 04:04:19.884" endtime="20230704 04:14:37.256"/>
</suite>
<doc>Argument file for running tests on Omena test environmen (test4)</doc>
<status status="FAIL" starttime="20230704 04:04:19.862" endtime="20230704 04:14:37.258"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="8" fail="3" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="8" fail="3" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-558">Testsuites.BUI.Feature.Online Check In.BUI2-558</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230704 04:04:20.569" level="ERROR">Error in file '/home/runner/work/nelson-test-automation/nelson-test-automation/resources/keywords/mui.resource' on line 14: Setting variable '${MUI_PASSWORD}' failed: Environment variable '%{MUI_PASSWORD}' not found.</msg>
<msg timestamp="20230704 04:04:20.571" level="ERROR">Error in file '/home/runner/work/nelson-test-automation/nelson-test-automation/resources/keywords/mui.resource' on line 13: Setting variable '${MUI_USERNAME}' failed: Environment variable '%{MUI_USERNAME}' not found.</msg>
</errors>
</robot>
