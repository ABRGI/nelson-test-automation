<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.12 on linux)" generated="20230705 06:29:32.462" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-557" source="/home/runner/work/nelson-test-automation/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s1-s1-t1" name="Verify UI When in booker view" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:29:33.490" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/265df37d-83df-4c27-b45d-2cd1ac3b6203"}</msg>
<msg timestamp="20230705 06:29:34.551" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/265df37d-83df-4c27-b45d-2cd1ac3b6203"}</msg>
<status status="PASS" starttime="20230705 06:29:33.489" endtime="20230705 06:29:34.551"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:29:34.556" level="INFO">No context open.</msg>
<status status="PASS" starttime="20230705 06:29:34.552" endtime="20230705 06:29:34.556"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:29:34.557" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:29:34.634" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:29:34.634" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:29:34.557" endtime="20230705 06:29:34.634"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:29:46.430" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:29:34.634" endtime="20230705 06:29:46.431"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:29:46.431" endtime="20230705 06:29:47.997"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:29:48.002" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:29:47.999" endtime="20230705 06:29:48.002"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:29:48.071" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:29:48.072" level="INFO">${els} = ['element=e6214631-c48e-4939-8954-a76926b88fb4']</msg>
<status status="PASS" starttime="20230705 06:29:48.003" endtime="20230705 06:29:48.072"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:29:48.072" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:29:48.072" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:29:48.072" endtime="20230705 06:29:48.072"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:29:48.073" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:29:48.073" endtime="20230705 06:29:48.073"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.073" endtime="20230705 06:29:48.074"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:29:48.074" endtime="20230705 06:29:48.074"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:29:48.074" endtime="20230705 06:29:48.074"/>
</branch>
<status status="PASS" starttime="20230705 06:29:48.073" endtime="20230705 06:29:48.074"/>
</if>
<status status="PASS" starttime="20230705 06:29:48.003" endtime="20230705 06:29:48.074"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:29:48.075" endtime="20230705 06:29:48.075"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:29:48.075" endtime="20230705 06:29:48.075"/>
</branch>
<status status="PASS" starttime="20230705 06:29:48.003" endtime="20230705 06:29:48.075"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:29:48.080" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:29:48.075" endtime="20230705 06:29:48.080"/>
</kw>
<msg timestamp="20230705 06:29:48.080" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:29:47.998" endtime="20230705 06:29:48.080"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:29:48.081" endtime="20230705 06:29:48.204"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.081" endtime="20230705 06:29:48.204"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:29:48.205" endtime="20230705 06:29:48.205"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:29:48.204" endtime="20230705 06:29:48.205"/>
</branch>
<status status="PASS" starttime="20230705 06:29:48.081" endtime="20230705 06:29:48.205"/>
</if>
<status status="PASS" starttime="20230705 06:29:47.998" endtime="20230705 06:29:48.205"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:29:48.211" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:29:48.206" endtime="20230705 06:29:48.212"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:29:48.212" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:29:48.212" endtime="20230705 06:29:48.212"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:29:48.212" endtime="20230705 06:29:48.213"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.206" endtime="20230705 06:29:48.213"/>
</kw>
<status status="PASS" starttime="20230705 06:29:33.489" endtime="20230705 06:29:48.217"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:29:48.218" endtime="20230705 06:29:48.219"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:29:48.218" endtime="20230705 06:29:48.219"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:29:48.219" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:29:48.219" endtime="20230705 06:29:48.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:29:48.220" endtime="20230705 06:29:48.521"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:29:48.575" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:29:48.522" endtime="20230705 06:29:48.575"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.522" endtime="20230705 06:29:48.575"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:29:48.576" endtime="20230705 06:29:48.825"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:29:48.849" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:29:48.825" endtime="20230705 06:29:48.849"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.219" endtime="20230705 06:29:48.849"/>
</branch>
<status status="PASS" starttime="20230705 06:29:48.218" endtime="20230705 06:29:48.850"/>
</if>
<status status="PASS" starttime="20230705 06:29:48.217" endtime="20230705 06:29:48.850"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:29:48.851" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:29:48.850" endtime="20230705 06:29:48.851"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.850" endtime="20230705 06:29:48.851"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:29:48.852" endtime="20230705 06:29:48.852"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.851" endtime="20230705 06:29:48.853"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:29:48.853" endtime="20230705 06:29:49.698"/>
</kw>
<status status="PASS" starttime="20230705 06:29:48.853" endtime="20230705 06:29:49.699"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:02.227" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:29:49.700" endtime="20230705 06:30:02.227"/>
</kw>
<status status="PASS" starttime="20230705 06:29:49.700" endtime="20230705 06:30:02.227"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:30:02.482" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:30:02.228" endtime="20230705 06:30:02.482"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:02.482" endtime="20230705 06:30:02.482"/>
</kw>
<status status="PASS" starttime="20230705 06:29:49.699" endtime="20230705 06:30:02.483"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:02.484" endtime="20230705 06:30:06.433"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:07.814" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:06.434" endtime="20230705 06:30:07.814"/>
</kw>
<status status="PASS" starttime="20230705 06:30:06.434" endtime="20230705 06:30:07.814"/>
</kw>
<status status="PASS" starttime="20230705 06:30:02.483" endtime="20230705 06:30:07.815"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:30:07.843" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:30:07.843" level="INFO">${elements} = ['element=77ffd1fd-52ea-423e-8903-2913a1a28a1b']</msg>
<status status="PASS" starttime="20230705 06:30:07.817" endtime="20230705 06:30:07.843"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:30:07.844" level="INFO">${first_element} = element=77ffd1fd-52ea-423e-8903-2913a1a28a1b</msg>
<status status="PASS" starttime="20230705 06:30:07.844" endtime="20230705 06:30:07.844"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:07.845" endtime="20230705 06:30:08.073"/>
</kw>
<status status="PASS" starttime="20230705 06:30:07.815" endtime="20230705 06:30:08.074"/>
</kw>
<status status="PASS" starttime="20230705 06:30:07.815" endtime="20230705 06:30:08.074"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:08.075" endtime="20230705 06:30:09.339"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:09.352" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:09.340" endtime="20230705 06:30:09.352"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.340" endtime="20230705 06:30:09.352"/>
</kw>
<status status="PASS" starttime="20230705 06:30:08.075" endtime="20230705 06:30:09.352"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:09.353" endtime="20230705 06:30:09.493"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:09.520" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:09.494" endtime="20230705 06:30:09.520"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.493" endtime="20230705 06:30:09.521"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.353" endtime="20230705 06:30:09.521"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:09.522" endtime="20230705 06:30:09.779"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:09.797" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:09.780" endtime="20230705 06:30:09.797"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.779" endtime="20230705 06:30:09.797"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.521" endtime="20230705 06:30:09.798"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:09.798" endtime="20230705 06:30:10.357"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:10.512" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:10.358" endtime="20230705 06:30:10.512"/>
</kw>
<status status="PASS" starttime="20230705 06:30:10.358" endtime="20230705 06:30:10.512"/>
</kw>
<status status="PASS" starttime="20230705 06:30:09.798" endtime="20230705 06:30:10.513"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:10.513" endtime="20230705 06:30:10.795"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:10.825" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:10.796" endtime="20230705 06:30:10.826"/>
</kw>
<status status="PASS" starttime="20230705 06:30:10.795" endtime="20230705 06:30:10.826"/>
</kw>
<status status="PASS" starttime="20230705 06:30:10.513" endtime="20230705 06:30:10.826"/>
</kw>
<status status="PASS" starttime="20230705 06:30:08.074" endtime="20230705 06:30:10.826"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:10.829" endtime="20230705 06:30:10.955"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:10.956" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:10.955" endtime="20230705 06:30:11.073"/>
</kw>
<status status="PASS" starttime="20230705 06:30:10.827" endtime="20230705 06:30:11.074"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:11.075" endtime="20230705 06:30:11.364"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:11.365" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:11.364" endtime="20230705 06:30:11.445"/>
</kw>
<status status="PASS" starttime="20230705 06:30:11.074" endtime="20230705 06:30:11.445"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:11.446" endtime="20230705 06:30:11.645"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:11.646" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:11.646" endtime="20230705 06:30:11.743"/>
</kw>
<status status="PASS" starttime="20230705 06:30:11.445" endtime="20230705 06:30:11.743"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:11.744" endtime="20230705 06:30:11.893"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:11.894" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:11.893" endtime="20230705 06:30:11.921"/>
</kw>
<status status="PASS" starttime="20230705 06:30:11.743" endtime="20230705 06:30:11.922"/>
</kw>
<status status="PASS" starttime="20230705 06:30:10.827" endtime="20230705 06:30:11.922"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:11.923" endtime="20230705 06:30:12.063"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:12.063" endtime="20230705 06:30:12.189"/>
</kw>
<status status="PASS" starttime="20230705 06:30:11.922" endtime="20230705 06:30:12.189"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:12.190" endtime="20230705 06:30:12.281"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:12.281" endtime="20230705 06:30:12.411"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:12.412" endtime="20230705 06:30:14.677"/>
</kw>
<status status="PASS" starttime="20230705 06:30:12.189" endtime="20230705 06:30:14.677"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:22.097" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:14.678" endtime="20230705 06:30:22.097"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:22.097" endtime="20230705 06:30:26.933"/>
</kw>
<status status="PASS" starttime="20230705 06:30:14.678" endtime="20230705 06:30:26.933"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:30.439" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:26.934" endtime="20230705 06:30:30.440"/>
</kw>
<status status="PASS" starttime="20230705 06:30:26.934" endtime="20230705 06:30:30.440"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:30.452" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:30.441" endtime="20230705 06:30:30.452"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.441" endtime="20230705 06:30:30.452"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:30.452" endtime="20230705 06:30:30.571"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.440" endtime="20230705 06:30:30.571"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:30:30.676" level="INFO">Text: 'Booking number: 159840064'</msg>
<msg timestamp="20230705 06:30:30.676" level="INFO">${str} = Booking number: 159840064</msg>
<status status="PASS" starttime="20230705 06:30:30.572" endtime="20230705 06:30:30.676"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:30:30.676" endtime="20230705 06:30:30.677"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:30:30.677" level="INFO">${str} = Booking number: 159840064</msg>
<status status="PASS" starttime="20230705 06:30:30.677" endtime="20230705 06:30:30.677"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:30:30.679" level="INFO">${str} = Booking number: 159840064</msg>
<status status="PASS" starttime="20230705 06:30:30.677" endtime="20230705 06:30:30.680"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.571" endtime="20230705 06:30:30.680"/>
</kw>
<status status="PASS" starttime="20230705 06:30:26.933" endtime="20230705 06:30:30.680"/>
</kw>
<status status="PASS" starttime="20230705 06:30:14.677" endtime="20230705 06:30:30.680"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:30.698" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:30.681" endtime="20230705 06:30:30.698"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.681" endtime="20230705 06:30:30.698"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:30.699" endtime="20230705 06:30:31.066"/>
</kw>
<status status="PASS" starttime="20230705 06:30:30.681" endtime="20230705 06:30:31.067"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:31.068" endtime="20230705 06:30:32.033"/>
</kw>
<status status="PASS" starttime="20230705 06:30:31.067" endtime="20230705 06:30:32.033"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:32.034" endtime="20230705 06:30:32.140"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='ssn']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:32.148" level="INFO">Waited for Element with selector //input[@id='ssn'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:32.141" endtime="20230705 06:30:32.148"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.140" endtime="20230705 06:30:32.149"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>020202-0202</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:32.150" level="INFO">Types the text '020202-0202' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:32.149" endtime="20230705 06:30:32.717"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.149" endtime="20230705 06:30:32.717"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='city']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:32.718" endtime="20230705 06:30:32.825"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='city']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:32.832" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:32.826" endtime="20230705 06:30:32.832"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.825" endtime="20230705 06:30:32.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='city']</arg>
<arg>Tokyo</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:32.835" level="INFO">Types the text 'Tokyo' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:32.833" endtime="20230705 06:30:33.104"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.833" endtime="20230705 06:30:33.104"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='address']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:33.104" endtime="20230705 06:30:33.230"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='address']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:33.241" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:33.231" endtime="20230705 06:30:33.241"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.230" endtime="20230705 06:30:33.242"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='address']</arg>
<arg>Paul Street</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:33.243" level="INFO">Types the text 'Paul Street' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:33.243" endtime="20230705 06:30:33.682"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.242" endtime="20230705 06:30:33.682"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='postalCode']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:33.683" endtime="20230705 06:30:33.801"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='postalCode']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:33.813" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:33.802" endtime="20230705 06:30:33.813"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.801" endtime="20230705 06:30:33.814"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='postalCode']</arg>
<arg>10000</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:33.815" level="INFO">Types the text '10000' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:33.814" endtime="20230705 06:30:34.065"/>
</kw>
<status status="PASS" starttime="20230705 06:30:33.814" endtime="20230705 06:30:34.065"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:34.075" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:34.066" endtime="20230705 06:30:34.075"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.065" endtime="20230705 06:30:34.076"/>
</kw>
<status status="PASS" starttime="20230705 06:30:32.034" endtime="20230705 06:30:34.076"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:34.077" endtime="20230705 06:30:34.276"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:34.285" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:34.277" endtime="20230705 06:30:34.285"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.276" endtime="20230705 06:30:34.285"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.076" endtime="20230705 06:30:34.286"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${True}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${True}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button//*[@data-icon='xmark']</arg>
<arg>visible</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>//button//*[@data-icon='xmark']</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:34.300" level="INFO">Waited for Element with selector //button//*[@data-icon='xmark'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:34.288" endtime="20230705 06:30:34.300"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.287" endtime="20230705 06:30:34.301"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${True}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button[normalize-space()='Cancel']</arg>
<arg>visible</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>visible</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:34.319" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:34.305" endtime="20230705 06:30:34.320"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.302" endtime="20230705 06:30:34.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${False}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button//*[@data-icon='xmark']</arg>
<arg>hidden</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:34.320" endtime="20230705 06:30:34.321"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${False}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:34.322" endtime="20230705 06:30:34.323"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.286" endtime="20230705 06:30:34.323"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//div[contains(@class,'chakra-offset-slide')]//form</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:36.978" level="INFO">Waited for Element with selector //div[contains(@class,'chakra-offset-slide')]//form at state visible</msg>
<status status="PASS" starttime="20230705 06:30:34.324" endtime="20230705 06:30:36.979"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.323" endtime="20230705 06:30:36.979"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='firstName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:36.979" endtime="20230705 06:30:37.040"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='firstName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:37.055" level="INFO">Waited for Element with selector //input[@id='firstName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:37.041" endtime="20230705 06:30:37.055"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.041" endtime="20230705 06:30:37.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='firstName']</arg>
<arg>${guestFirstname}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='firstName']</arg>
<arg>${guestFirstname}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:37.056" level="INFO">Types the text 'Shin' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:37.056" endtime="20230705 06:30:37.175"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.056" endtime="20230705 06:30:37.175"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='lastName']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:37.176" endtime="20230705 06:30:37.279"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='lastName']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:37.337" level="INFO">Waited for Element with selector //input[@id='lastName'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:37.280" endtime="20230705 06:30:37.337"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.279" endtime="20230705 06:30:37.338"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='lastName']</arg>
<arg>${guestLastname}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='lastName']</arg>
<arg>${guestLastname}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:37.339" level="INFO">Types the text 'Suke' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:37.339" endtime="20230705 06:30:37.465"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.338" endtime="20230705 06:30:37.465"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[@id='email']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:37.466" endtime="20230705 06:30:37.544"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//input[@id='email']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:37.555" level="INFO">Waited for Element with selector //input[@id='email'] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:37.545" endtime="20230705 06:30:37.555"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.545" endtime="20230705 06:30:37.556"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='email']</arg>
<arg>${guestEmail}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='email']</arg>
<arg>${guestEmail}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:30:37.557" level="INFO">Types the text 'shinsuke@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:30:37.556" endtime="20230705 06:30:37.776"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.556" endtime="20230705 06:30:37.776"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:37.777" endtime="20230705 06:30:37.857"/>
</kw>
<status status="PASS" starttime="20230705 06:30:34.323" endtime="20230705 06:30:37.857"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${False}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${True}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button//*[@data-icon='xmark']</arg>
<arg>visible</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:37.858" endtime="20230705 06:30:37.859"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${True}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button[normalize-space()='Cancel']</arg>
<arg>visible</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:37.859" endtime="20230705 06:30:37.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${False}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button//*[@data-icon='xmark']</arg>
<arg>hidden</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>//button//*[@data-icon='xmark']</arg>
<arg>hidden</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:39.180" level="INFO">Waited for Element with selector //button//*[@data-icon='xmark'] at state hidden</msg>
<status status="PASS" starttime="20230705 06:30:37.862" endtime="20230705 06:30:39.181"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.861" endtime="20230705 06:30:39.181"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown == ${False}}</arg>
<arg>Wait For Elements State</arg>
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>//button[normalize-space()='Cancel']</arg>
<arg>hidden</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:39.190" level="INFO">Waited for Element with selector //button[normalize-space()='Cancel'] at state hidden</msg>
<status status="PASS" starttime="20230705 06:30:39.183" endtime="20230705 06:30:39.190"/>
</kw>
<status status="PASS" starttime="20230705 06:30:39.181" endtime="20230705 06:30:39.191"/>
</kw>
<status status="PASS" starttime="20230705 06:30:37.857" endtime="20230705 06:30:39.191"/>
</kw>
<kw name="Open Edit booker info" library="booking">
<kw name="Click" library="Browser">
<arg>//p[text()='Booked by']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:30:39.192" endtime="20230705 06:30:43.039"/>
</kw>
<status status="PASS" starttime="20230705 06:30:39.191" endtime="20230705 06:30:43.039"/>
</kw>
<kw name="Verify All information is disbled" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='email' and @disabled]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:43.844" level="INFO">Waited for Element with selector //input[@id='email' and @disabled] at state visible</msg>
<status status="PASS" starttime="20230705 06:30:43.041" endtime="20230705 06:30:43.844"/>
</kw>
<msg timestamp="20230705 06:30:43.844" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230705 06:30:43.040" endtime="20230705 06:30:43.844"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:30:43.845" endtime="20230705 06:30:43.846"/>
</kw>
<status status="PASS" starttime="20230705 06:30:43.845" endtime="20230705 06:30:43.846"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:30:43.846" endtime="20230705 06:30:43.847"/>
</kw>
<status status="PASS" starttime="20230705 06:30:43.040" endtime="20230705 06:30:43.847"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Verify Element Presence</arg>
<arg>//input[@id='firstName' and @disabled]</arg>
<arg>${True}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='firstName' and @disabled]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:49.945" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:30:49.945" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:30:49.946" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id=\'firstName\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:30:43.848" endtime="20230705 06:30:49.967"/>
</kw>
<msg timestamp="20230705 06:30:49.967" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:30:43.848" endtime="20230705 06:30:49.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230705 06:30:49.969" level="FAIL">'False==True' should be true.</msg>
<status status="FAIL" starttime="20230705 06:30:49.968" endtime="20230705 06:30:49.969"/>
</kw>
<status status="FAIL" starttime="20230705 06:30:49.967" endtime="20230705 06:30:49.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230705 06:30:49.973" endtime="20230705 06:30:49.973"/>
</kw>
<status status="FAIL" starttime="20230705 06:30:43.847" endtime="20230705 06:30:49.974"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='firstName' and @disabled]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:30:58.064" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:30:58.064" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:30:58.064" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id=\'firstName\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:30:51.976" endtime="20230705 06:30:58.065"/>
</kw>
<msg timestamp="20230705 06:30:58.065" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:30:51.975" endtime="20230705 06:30:58.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230705 06:30:58.066" level="FAIL">'False==True' should be true.</msg>
<status status="FAIL" starttime="20230705 06:30:58.066" endtime="20230705 06:30:58.067"/>
</kw>
<status status="FAIL" starttime="20230705 06:30:58.065" endtime="20230705 06:30:58.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230705 06:30:58.068" endtime="20230705 06:30:58.069"/>
</kw>
<status status="FAIL" starttime="20230705 06:30:51.975" endtime="20230705 06:30:58.070"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='firstName' and @disabled]</arg>
<arg>${True}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:06.289" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:31:06.289" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:31:06.290" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id=\'firstName\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:31:00.071" endtime="20230705 06:31:06.290"/>
</kw>
<msg timestamp="20230705 06:31:06.290" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:31:00.071" endtime="20230705 06:31:06.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230705 06:31:06.296" level="FAIL">'False==True' should be true.</msg>
<status status="FAIL" starttime="20230705 06:31:06.291" endtime="20230705 06:31:06.296"/>
</kw>
<status status="FAIL" starttime="20230705 06:31:06.291" endtime="20230705 06:31:06.297"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230705 06:31:06.297" endtime="20230705 06:31:06.297"/>
</kw>
<status status="FAIL" starttime="20230705 06:31:00.070" endtime="20230705 06:31:06.298"/>
</kw>
<msg timestamp="20230705 06:31:06.298" level="FAIL">Keyword 'Verify Element Presence' failed after retrying for 20 seconds. The last error was: 'False==True' should be true.</msg>
<status status="FAIL" starttime="20230705 06:30:43.847" endtime="20230705 06:31:06.299"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='lastName' and @disabled]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230705 06:31:06.309" endtime="20230705 06:31:06.309"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='ssn' and @disabled]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230705 06:31:06.309" endtime="20230705 06:31:06.309"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='city' and @disabled]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230705 06:31:06.309" endtime="20230705 06:31:06.310"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='address' and @disabled]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230705 06:31:06.310" endtime="20230705 06:31:06.310"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='postalCode' and @disabled]</arg>
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230705 06:31:06.310" endtime="20230705 06:31:06.310"/>
</kw>
<kw name="Get Attribute" library="Browser">
<var>${style}</var>
<arg>//input[@id='phoneNumber']/parent::div</arg>
<arg>style</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230705 06:31:06.310" endtime="20230705 06:31:06.311"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>'${style}' == 'border-color: rgb(153, 163, 182);'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="NOT RUN" starttime="20230705 06:31:06.311" endtime="20230705 06:31:06.311"/>
</kw>
<status status="FAIL" starttime="20230705 06:30:43.039" endtime="20230705 06:31:06.311"/>
</kw>
<kw name="Check Add organization check box" library="booking">
<status status="NOT RUN" starttime="20230705 06:31:06.321" endtime="20230705 06:31:06.323"/>
</kw>
<kw name="Verify all information are save" library="booking">
<status status="NOT RUN" starttime="20230705 06:31:06.323" endtime="20230705 06:31:06.325"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:31:07.047" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:31:06.326" endtime="20230705 06:31:07.047"/>
</kw>
<status status="FAIL" starttime="20230705 06:29:33.487" endtime="20230705 06:31:07.048">Keyword 'Verify Element Presence' failed after retrying for 20 seconds. The last error was: 'False==True' should be true.</status>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Validation shows msg for fields marked" line="36">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:31:07.055" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/69fee0a2-64ee-4371-8247-bb297a3780f0"}</msg>
<msg timestamp="20230705 06:31:07.685" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/69fee0a2-64ee-4371-8247-bb297a3780f0"}</msg>
<status status="PASS" starttime="20230705 06:31:07.054" endtime="20230705 06:31:07.685"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:31:07.685" endtime="20230705 06:31:07.686"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:31:07.686" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:31:07.746" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:31:07.746" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:31:07.686" endtime="20230705 06:31:07.746"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:31:12.873" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:31:07.747" endtime="20230705 06:31:12.873"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:31:12.874" endtime="20230705 06:31:14.181"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:14.186" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:31:14.182" endtime="20230705 06:31:14.186"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:31:14.267" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:31:14.268" level="INFO">${els} = ['element=f86fe4b2-c70a-442c-b16c-f0c46d9cc60d']</msg>
<status status="PASS" starttime="20230705 06:31:14.187" endtime="20230705 06:31:14.268"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:31:14.268" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:31:14.268" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:31:14.268" endtime="20230705 06:31:14.269"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:31:14.269" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:31:14.269" endtime="20230705 06:31:14.269"/>
</kw>
<status status="PASS" starttime="20230705 06:31:14.269" endtime="20230705 06:31:14.270"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:14.270" endtime="20230705 06:31:14.270"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:14.270" endtime="20230705 06:31:14.270"/>
</branch>
<status status="PASS" starttime="20230705 06:31:14.269" endtime="20230705 06:31:14.270"/>
</if>
<status status="PASS" starttime="20230705 06:31:14.187" endtime="20230705 06:31:14.270"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:31:14.271" endtime="20230705 06:31:14.271"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:14.271" endtime="20230705 06:31:14.271"/>
</branch>
<status status="PASS" starttime="20230705 06:31:14.186" endtime="20230705 06:31:14.271"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:31:14.277" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:31:14.271" endtime="20230705 06:31:14.277"/>
</kw>
<msg timestamp="20230705 06:31:14.278" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:31:14.182" endtime="20230705 06:31:14.278"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:14.279" endtime="20230705 06:31:14.376"/>
</kw>
<status status="PASS" starttime="20230705 06:31:14.278" endtime="20230705 06:31:14.376"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:14.377" endtime="20230705 06:31:14.377"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:14.376" endtime="20230705 06:31:14.377"/>
</branch>
<status status="PASS" starttime="20230705 06:31:14.278" endtime="20230705 06:31:14.377"/>
</if>
<status status="PASS" starttime="20230705 06:31:14.181" endtime="20230705 06:31:14.377"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:31:14.382" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:31:14.378" endtime="20230705 06:31:14.382"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:31:14.383" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:31:14.382" endtime="20230705 06:31:14.383"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:31:14.388" endtime="20230705 06:31:14.389"/>
</kw>
<status status="PASS" starttime="20230705 06:31:14.378" endtime="20230705 06:31:14.389"/>
</kw>
<status status="PASS" starttime="20230705 06:31:07.053" endtime="20230705 06:31:14.389"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:31:14.391" endtime="20230705 06:31:14.391"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:31:14.390" endtime="20230705 06:31:14.391"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:14.391" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:31:14.391" endtime="20230705 06:31:14.392"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:14.392" endtime="20230705 06:31:14.499"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:14.510" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:14.501" endtime="20230705 06:31:14.511"/>
</kw>
<status status="PASS" starttime="20230705 06:31:14.500" endtime="20230705 06:31:14.511"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:14.511" endtime="20230705 06:31:15.718"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:15.729" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:31:15.719" endtime="20230705 06:31:15.730"/>
</kw>
<status status="PASS" starttime="20230705 06:31:14.391" endtime="20230705 06:31:15.730"/>
</branch>
<status status="PASS" starttime="20230705 06:31:14.390" endtime="20230705 06:31:15.730"/>
</if>
<status status="PASS" starttime="20230705 06:31:14.390" endtime="20230705 06:31:15.730"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:31:15.731" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:31:15.731" endtime="20230705 06:31:15.731"/>
</kw>
<status status="PASS" starttime="20230705 06:31:15.731" endtime="20230705 06:31:15.732"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:31:15.733" endtime="20230705 06:31:15.734"/>
</kw>
<status status="PASS" starttime="20230705 06:31:15.733" endtime="20230705 06:31:15.734"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:15.735" endtime="20230705 06:31:16.627"/>
</kw>
<status status="PASS" starttime="20230705 06:31:15.734" endtime="20230705 06:31:16.627"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:21.403" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:16.630" endtime="20230705 06:31:21.403"/>
</kw>
<status status="PASS" starttime="20230705 06:31:16.629" endtime="20230705 06:31:21.404"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:31:21.656" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:31:21.404" endtime="20230705 06:31:21.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:31:21.657" endtime="20230705 06:31:21.657"/>
</kw>
<status status="PASS" starttime="20230705 06:31:16.627" endtime="20230705 06:31:21.657"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:21.658" endtime="20230705 06:31:25.012"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:26.344" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:25.013" endtime="20230705 06:31:26.344"/>
</kw>
<status status="PASS" starttime="20230705 06:31:25.012" endtime="20230705 06:31:26.345"/>
</kw>
<status status="PASS" starttime="20230705 06:31:21.658" endtime="20230705 06:31:26.345"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:31:26.365" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:31:26.366" level="INFO">${elements} = ['element=59b8faaf-7078-48ba-8620-e9b999e5d609']</msg>
<status status="PASS" starttime="20230705 06:31:26.346" endtime="20230705 06:31:26.366"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:31:26.367" level="INFO">${first_element} = element=59b8faaf-7078-48ba-8620-e9b999e5d609</msg>
<status status="PASS" starttime="20230705 06:31:26.366" endtime="20230705 06:31:26.367"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:26.367" endtime="20230705 06:31:26.626"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.346" endtime="20230705 06:31:26.627"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.345" endtime="20230705 06:31:26.627"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:26.628" endtime="20230705 06:31:28.614"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:28.767" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:28.615" endtime="20230705 06:31:28.767"/>
</kw>
<status status="PASS" starttime="20230705 06:31:28.614" endtime="20230705 06:31:28.767"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.628" endtime="20230705 06:31:28.768"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:28.768" endtime="20230705 06:31:29.096"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:29.181" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:29.097" endtime="20230705 06:31:29.182"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.097" endtime="20230705 06:31:29.182"/>
</kw>
<status status="PASS" starttime="20230705 06:31:28.768" endtime="20230705 06:31:29.182"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:29.183" endtime="20230705 06:31:29.362"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:29.426" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:29.363" endtime="20230705 06:31:29.426"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.362" endtime="20230705 06:31:29.426"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.183" endtime="20230705 06:31:29.427"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:29.427" endtime="20230705 06:31:29.639"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:29.759" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:29.640" endtime="20230705 06:31:29.759"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.639" endtime="20230705 06:31:29.759"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.427" endtime="20230705 06:31:29.759"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:29.760" endtime="20230705 06:31:29.888"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:29.899" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:29.889" endtime="20230705 06:31:29.899"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.888" endtime="20230705 06:31:29.899"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.760" endtime="20230705 06:31:29.899"/>
</kw>
<status status="PASS" starttime="20230705 06:31:26.627" endtime="20230705 06:31:29.900"/>
</kw>
<kw name="Fill in Contact Information 1" library="booking">
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:29.902" endtime="20230705 06:31:29.972"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:29.973" level="INFO">Fills the text 'Bich' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:29.972" endtime="20230705 06:31:30.040"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.901" endtime="20230705 06:31:30.040"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:30.041" endtime="20230705 06:31:30.381"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:30.382" level="INFO">Fills the text 'Ngoc' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:30.381" endtime="20230705 06:31:30.475"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.041" endtime="20230705 06:31:30.475"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:30.476" endtime="20230705 06:31:30.655"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:30.656" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:30.656" endtime="20230705 06:31:30.729"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.475" endtime="20230705 06:31:30.730"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:30.730" endtime="20230705 06:31:30.881"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:31:30.882" level="INFO">Fills the text '040123942' in the given field.</msg>
<status status="PASS" starttime="20230705 06:31:30.881" endtime="20230705 06:31:30.938"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.730" endtime="20230705 06:31:30.938"/>
</kw>
<status status="PASS" starttime="20230705 06:31:29.900" endtime="20230705 06:31:30.939"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:30.939" endtime="20230705 06:31:31.138"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:31.138" endtime="20230705 06:31:31.322"/>
</kw>
<status status="PASS" starttime="20230705 06:31:30.939" endtime="20230705 06:31:31.322"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:31.323" endtime="20230705 06:31:31.430"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:31.430" endtime="20230705 06:31:31.697"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:31.697" endtime="20230705 06:31:33.883"/>
</kw>
<status status="PASS" starttime="20230705 06:31:31.322" endtime="20230705 06:31:33.883"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:39.325" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:33.885" endtime="20230705 06:31:39.325"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:39.326" endtime="20230705 06:31:43.604"/>
</kw>
<status status="PASS" starttime="20230705 06:31:33.884" endtime="20230705 06:31:43.604"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:46.700" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:43.606" endtime="20230705 06:31:46.700"/>
</kw>
<status status="PASS" starttime="20230705 06:31:43.605" endtime="20230705 06:31:46.700"/>
</kw>
<kw name="Close Dialog" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:46.724" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:46.701" endtime="20230705 06:31:46.725"/>
</kw>
<status status="PASS" starttime="20230705 06:31:46.701" endtime="20230705 06:31:46.725"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:46.725" endtime="20230705 06:31:46.925"/>
</kw>
<status status="PASS" starttime="20230705 06:31:46.701" endtime="20230705 06:31:46.925"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230705 06:31:47.134" level="INFO">Text: 'Booking number: 920279398'</msg>
<msg timestamp="20230705 06:31:47.134" level="INFO">${str} = Booking number: 920279398</msg>
<status status="PASS" starttime="20230705 06:31:46.926" endtime="20230705 06:31:47.134"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:31:47.134" endtime="20230705 06:31:47.135"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230705 06:31:47.135" level="INFO">${str} = Booking number: 920279398</msg>
<status status="PASS" starttime="20230705 06:31:47.135" endtime="20230705 06:31:47.135"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230705 06:31:47.137" level="INFO">${str} = Booking number: 920279398</msg>
<status status="PASS" starttime="20230705 06:31:47.136" endtime="20230705 06:31:47.137"/>
</kw>
<status status="PASS" starttime="20230705 06:31:46.926" endtime="20230705 06:31:47.138"/>
</kw>
<status status="PASS" starttime="20230705 06:31:43.604" endtime="20230705 06:31:47.138"/>
</kw>
<status status="PASS" starttime="20230705 06:31:33.884" endtime="20230705 06:31:47.138"/>
</kw>
<kw name="Click Check In Button" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:47.168" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:47.139" endtime="20230705 06:31:47.168"/>
</kw>
<status status="PASS" starttime="20230705 06:31:47.139" endtime="20230705 06:31:47.168"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:47.169" endtime="20230705 06:31:47.342"/>
</kw>
<status status="PASS" starttime="20230705 06:31:47.138" endtime="20230705 06:31:47.342"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:47.343" endtime="20230705 06:31:48.308"/>
</kw>
<status status="PASS" starttime="20230705 06:31:47.343" endtime="20230705 06:31:48.308"/>
</kw>
<kw name="Click Save and invite" library="booking">
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:31:48.309" endtime="20230705 06:31:48.414"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[normalize-space()='Save and invite']</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:48.423" level="INFO">Waited for Element with selector //button[normalize-space()='Save and invite'] at state visible</msg>
<status status="PASS" starttime="20230705 06:31:48.415" endtime="20230705 06:31:48.423"/>
</kw>
<status status="PASS" starttime="20230705 06:31:48.414" endtime="20230705 06:31:48.423"/>
</kw>
<status status="PASS" starttime="20230705 06:31:48.309" endtime="20230705 06:31:48.424"/>
</kw>
<kw name="Verify msg The field is required" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:31:54.547" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:31:54.548" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:31:54.548" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'ssn\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:31:48.425" endtime="20230705 06:31:54.548"/>
</kw>
<msg timestamp="20230705 06:31:54.549" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:31:48.425" endtime="20230705 06:31:54.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:31:54.549" endtime="20230705 06:31:54.549"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:31:54.550" endtime="20230705 06:31:54.551"/>
</kw>
<status status="PASS" starttime="20230705 06:31:54.550" endtime="20230705 06:31:54.551"/>
</kw>
<status status="PASS" starttime="20230705 06:31:48.424" endtime="20230705 06:31:54.551"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:00.655" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:00.655" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:00.655" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'city\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:31:54.552" endtime="20230705 06:32:00.656"/>
</kw>
<msg timestamp="20230705 06:32:00.656" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:31:54.552" endtime="20230705 06:32:00.656"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:00.656" endtime="20230705 06:32:00.657"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:00.658" endtime="20230705 06:32:00.658"/>
</kw>
<status status="PASS" starttime="20230705 06:32:00.657" endtime="20230705 06:32:00.658"/>
</kw>
<status status="PASS" starttime="20230705 06:31:54.551" endtime="20230705 06:32:00.658"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:06.790" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:06.791" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:06.791" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'address\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:00.659" endtime="20230705 06:32:06.791"/>
</kw>
<msg timestamp="20230705 06:32:06.792" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:32:00.659" endtime="20230705 06:32:06.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:06.792" endtime="20230705 06:32:06.792"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:06.793" endtime="20230705 06:32:06.793"/>
</kw>
<status status="PASS" starttime="20230705 06:32:06.793" endtime="20230705 06:32:06.794"/>
</kw>
<status status="PASS" starttime="20230705 06:32:00.659" endtime="20230705 06:32:06.794"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:12.905" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:12.905" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:12.906" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'postalCode\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:06.795" endtime="20230705 06:32:12.906"/>
</kw>
<msg timestamp="20230705 06:32:12.906" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:32:06.795" endtime="20230705 06:32:12.906"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:12.906" endtime="20230705 06:32:12.914"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:12.915" endtime="20230705 06:32:12.915"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.914" endtime="20230705 06:32:12.918"/>
</kw>
<status status="PASS" starttime="20230705 06:32:06.794" endtime="20230705 06:32:12.919"/>
</kw>
<status status="PASS" starttime="20230705 06:31:48.424" endtime="20230705 06:32:12.919"/>
</kw>
<kw name="Fill invalid phone format" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='phoneNumber']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:12.919" endtime="20230705 06:32:13.094"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='phoneNumber']</arg>
<arg>suke6545</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='phoneNumber']</arg>
<arg>suke6545</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:13.095" level="INFO">Types the text 'suke6545' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:13.095" endtime="20230705 06:32:13.549"/>
</kw>
<status status="PASS" starttime="20230705 06:32:13.095" endtime="20230705 06:32:13.549"/>
</kw>
<status status="PASS" starttime="20230705 06:32:12.919" endtime="20230705 06:32:13.549"/>
</kw>
<kw name="Verify msg &quot;Invalid phone number!&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[text()='Invalid phone number!' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:19.677" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:19.677" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:19.677" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Invalid phone number!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:13.551" endtime="20230705 06:32:19.678"/>
</kw>
<msg timestamp="20230705 06:32:19.678" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:32:13.551" endtime="20230705 06:32:19.678"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:19.678" endtime="20230705 06:32:19.679"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:19.679" endtime="20230705 06:32:19.680"/>
</kw>
<status status="PASS" starttime="20230705 06:32:19.679" endtime="20230705 06:32:19.680"/>
</kw>
<status status="PASS" starttime="20230705 06:32:13.550" endtime="20230705 06:32:19.680"/>
</kw>
<status status="PASS" starttime="20230705 06:32:13.550" endtime="20230705 06:32:19.680"/>
</kw>
<kw name="Fill invalid SSN" library="booking">
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:19.681" endtime="20230705 06:32:19.793"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>suke6545</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>suke6545</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:19.794" level="INFO">Types the text 'suke6545' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:19.794" endtime="20230705 06:32:20.106"/>
</kw>
<status status="PASS" starttime="20230705 06:32:19.793" endtime="20230705 06:32:20.106"/>
</kw>
<status status="PASS" starttime="20230705 06:32:19.681" endtime="20230705 06:32:20.106"/>
</kw>
<kw name="Verify msg &quot;Please check! This is not a Finnish social security number&quot;" library="booking">
<kw name="Verify Element Presence" library="booking">
<arg>//div[text()='Please check! This is not a Finnish social security number' and @disabled]</arg>
<arg>${False}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:26.231" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:32:26.232" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:32:26.232" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Please check! This is not a Finnish social security number\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:20.108" endtime="20230705 06:32:26.232"/>
</kw>
<msg timestamp="20230705 06:32:26.233" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230705 06:32:20.108" endtime="20230705 06:32:26.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:26.233" endtime="20230705 06:32:26.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" starttime="20230705 06:32:26.234" endtime="20230705 06:32:26.235"/>
</kw>
<status status="PASS" starttime="20230705 06:32:26.234" endtime="20230705 06:32:26.235"/>
</kw>
<status status="PASS" starttime="20230705 06:32:20.107" endtime="20230705 06:32:26.235"/>
</kw>
<status status="PASS" starttime="20230705 06:32:20.107" endtime="20230705 06:32:26.235"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:32:27.274" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:32:26.236" endtime="20230705 06:32:27.274"/>
</kw>
<status status="PASS" starttime="20230705 06:31:07.051" endtime="20230705 06:32:27.275"/>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Showing imported passport when the National is not Finland" line="58">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230705 06:32:27.281" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "deprecated_pos_args": [], "tracesDir": "/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/338dcfe5-298b-4ec6-9b59-8d8938ed66e3"}</msg>
<msg timestamp="20230705 06:32:28.178" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"deprecated_pos_args":[],"tracesDir":"/home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/browser/traces/338dcfe5-298b-4ec6-9b59-8d8938ed66e3"}</msg>
<status status="PASS" starttime="20230705 06:32:27.279" endtime="20230705 06:32:28.179"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20230705 06:32:28.179" endtime="20230705 06:32:28.180"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230705 06:32:28.180" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20230705 06:32:28.258" level="INFO">Successfully created context. </msg>
<msg timestamp="20230705 06:32:28.259" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20230705 06:32:28.180" endtime="20230705 06:32:28.259"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230705 06:32:31.954" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/</msg>
<status status="PASS" starttime="20230705 06:32:28.259" endtime="20230705 06:32:31.954"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="PASS" starttime="20230705 06:32:31.955" endtime="20230705 06:32:33.649"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:32:33.653" level="INFO">Set timeout to: 10000</msg>
<status status="PASS" starttime="20230705 06:32:33.651" endtime="20230705 06:32:33.653"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:32:33.695" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:32:33.695" level="INFO">${els} = ['element=451da9d0-59f9-4aa0-9308-34129ee74b5d']</msg>
<status status="PASS" starttime="20230705 06:32:33.653" endtime="20230705 06:32:33.695"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230705 06:32:33.696" level="INFO">Length is 1</msg>
<msg timestamp="20230705 06:32:33.696" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230705 06:32:33.695" endtime="20230705 06:32:33.696"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:32:33.697" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230705 06:32:33.696" endtime="20230705 06:32:33.697"/>
</kw>
<status status="PASS" starttime="20230705 06:32:33.696" endtime="20230705 06:32:33.697"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:32:33.697" endtime="20230705 06:32:33.697"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:33.697" endtime="20230705 06:32:33.698"/>
</branch>
<status status="PASS" starttime="20230705 06:32:33.696" endtime="20230705 06:32:33.698"/>
</if>
<status status="PASS" starttime="20230705 06:32:33.653" endtime="20230705 06:32:33.698"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230705 06:32:33.698" endtime="20230705 06:32:33.698"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:33.698" endtime="20230705 06:32:33.698"/>
</branch>
<status status="PASS" starttime="20230705 06:32:33.653" endtime="20230705 06:32:33.699"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230705 06:32:33.701" level="INFO">Set timeout to: 90000</msg>
<status status="PASS" starttime="20230705 06:32:33.699" endtime="20230705 06:32:33.701"/>
</kw>
<msg timestamp="20230705 06:32:33.701" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230705 06:32:33.650" endtime="20230705 06:32:33.701"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:33.702" endtime="20230705 06:32:33.776"/>
</kw>
<status status="PASS" starttime="20230705 06:32:33.702" endtime="20230705 06:32:33.776"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:32:33.776" endtime="20230705 06:32:33.776"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:33.776" endtime="20230705 06:32:33.777"/>
</branch>
<status status="PASS" starttime="20230705 06:32:33.702" endtime="20230705 06:32:33.777"/>
</if>
<status status="PASS" starttime="20230705 06:32:33.650" endtime="20230705 06:32:33.777"/>
</kw>
<kw name="Set Environment" library="common">
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230705 06:32:33.781" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230705 06:32:33.778" endtime="20230705 06:32:33.781"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230705 06:32:33.782" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230705 06:32:33.781" endtime="20230705 06:32:33.782"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230705 06:32:33.782" endtime="20230705 06:32:33.782"/>
</kw>
<status status="PASS" starttime="20230705 06:32:33.777" endtime="20230705 06:32:33.782"/>
</kw>
<status status="PASS" starttime="20230705 06:32:27.279" endtime="20230705 06:32:33.783"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230705 06:32:33.785" endtime="20230705 06:32:33.785"/>
</kw>
<status status="NOT RUN" starttime="20230705 06:32:33.784" endtime="20230705 06:32:33.785"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:32:33.785" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<status status="PASS" starttime="20230705 06:32:33.785" endtime="20230705 06:32:33.785"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:33.786" endtime="20230705 06:32:33.885"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:33.899" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:33.886" endtime="20230705 06:32:33.899"/>
</kw>
<status status="PASS" starttime="20230705 06:32:33.886" endtime="20230705 06:32:33.899"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:33.900" endtime="20230705 06:32:34.124"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:34.197" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<status status="PASS" starttime="20230705 06:32:34.124" endtime="20230705 06:32:34.197"/>
</kw>
<status status="PASS" starttime="20230705 06:32:33.785" endtime="20230705 06:32:34.197"/>
</branch>
<status status="PASS" starttime="20230705 06:32:33.784" endtime="20230705 06:32:34.197"/>
</if>
<status status="PASS" starttime="20230705 06:32:33.784" endtime="20230705 06:32:34.198"/>
</kw>
<kw name="Select Dates" library="booking">
<kw name="Log" library="BuiltIn">
<arg>Skipping date selection for now</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230705 06:32:34.199" level="INFO">Skipping date selection for now</msg>
<status status="PASS" starttime="20230705 06:32:34.198" endtime="20230705 06:32:34.199"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.198" endtime="20230705 06:32:34.199"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Not yet implemented</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230705 06:32:34.200" endtime="20230705 06:32:34.200"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.199" endtime="20230705 06:32:34.200"/>
</kw>
<kw name="Click Book Button" library="booking">
<kw name="Click" library="Browser">
<arg>//div[@data-nelson-btn='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:34.201" endtime="20230705 06:32:34.950"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.201" endtime="20230705 06:32:34.950"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:39.991" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:34.952" endtime="20230705 06:32:39.992"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.951" endtime="20230705 06:32:39.992"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230705 06:32:40.248" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230705 06:32:39.992" endtime="20230705 06:32:40.248"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230705 06:32:40.248" endtime="20230705 06:32:40.249"/>
</kw>
<status status="PASS" starttime="20230705 06:32:34.951" endtime="20230705 06:32:40.249"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:40.250" endtime="20230705 06:32:43.548"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:44.879" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:43.549" endtime="20230705 06:32:44.879"/>
</kw>
<status status="PASS" starttime="20230705 06:32:43.549" endtime="20230705 06:32:44.880"/>
</kw>
<status status="PASS" starttime="20230705 06:32:40.249" endtime="20230705 06:32:44.880"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230705 06:32:44.907" level="INFO">Found 1 Locators successfully.</msg>
<msg timestamp="20230705 06:32:44.907" level="INFO">${elements} = ['element=975620bb-a822-4c93-9bc1-0173536546c7']</msg>
<status status="PASS" starttime="20230705 06:32:44.881" endtime="20230705 06:32:44.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230705 06:32:44.908" level="INFO">${first_element} = element=975620bb-a822-4c93-9bc1-0173536546c7</msg>
<status status="PASS" starttime="20230705 06:32:44.907" endtime="20230705 06:32:44.908"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:44.908" endtime="20230705 06:32:45.237"/>
</kw>
<status status="PASS" starttime="20230705 06:32:44.881" endtime="20230705 06:32:45.238"/>
</kw>
<status status="PASS" starttime="20230705 06:32:44.880" endtime="20230705 06:32:45.238"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:45.239" endtime="20230705 06:32:48.080"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:48.093" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:48.081" endtime="20230705 06:32:48.094"/>
</kw>
<status status="PASS" starttime="20230705 06:32:48.081" endtime="20230705 06:32:48.094"/>
</kw>
<status status="PASS" starttime="20230705 06:32:45.239" endtime="20230705 06:32:48.094"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:48.095" endtime="20230705 06:32:48.549"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:48.562" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:48.549" endtime="20230705 06:32:48.563"/>
</kw>
<status status="PASS" starttime="20230705 06:32:48.549" endtime="20230705 06:32:48.563"/>
</kw>
<status status="PASS" starttime="20230705 06:32:48.094" endtime="20230705 06:32:48.563"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:48.564" endtime="20230705 06:32:48.893"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:49.031" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:48.894" endtime="20230705 06:32:49.031"/>
</kw>
<status status="PASS" starttime="20230705 06:32:48.894" endtime="20230705 06:32:49.031"/>
</kw>
<status status="PASS" starttime="20230705 06:32:48.563" endtime="20230705 06:32:49.032"/>
</kw>
<kw name="Check Join as Member" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:49.032" endtime="20230705 06:32:49.321"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:49.338" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:49.322" endtime="20230705 06:32:49.338"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.321" endtime="20230705 06:32:49.339"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.032" endtime="20230705 06:32:49.339"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:49.340" endtime="20230705 06:32:49.789"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230705 06:32:49.824" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<status status="PASS" starttime="20230705 06:32:49.790" endtime="20230705 06:32:49.824"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.789" endtime="20230705 06:32:49.824"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.339" endtime="20230705 06:32:49.824"/>
</kw>
<status status="PASS" starttime="20230705 06:32:45.238" endtime="20230705 06:32:49.825"/>
</kw>
<kw name="Fill contact info with the National not Finland" library="booking">
<doc>TBD: Use test data instead of hardcoded values</doc>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:49.826" endtime="20230705 06:32:50.037"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:50.038" level="INFO">Fills the text 'Mos' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:50.038" endtime="20230705 06:32:50.113"/>
</kw>
<status status="PASS" starttime="20230705 06:32:49.825" endtime="20230705 06:32:50.113"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:50.114" endtime="20230705 06:32:50.273"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:50.274" level="INFO">Fills the text 'Def' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:50.273" endtime="20230705 06:32:50.341"/>
</kw>
<status status="PASS" starttime="20230705 06:32:50.113" endtime="20230705 06:32:50.341"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:50.342" endtime="20230705 06:32:50.483"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230705 06:32:50.484" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20230705 06:32:50.483" endtime="20230705 06:32:50.558"/>
</kw>
<status status="PASS" starttime="20230705 06:32:50.341" endtime="20230705 06:32:50.559"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[text()="Enter your info"]/ancestor::form//*[name()='svg']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20230705 06:32:50.559" endtime="20230705 06:32:51.789"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[normalize-space()='(+84) Vietnam']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230705 06:34:21.896" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230705 06:34:21.896" level="INFO">See also file:///home/runner/work/nelson-test-automation/nelson-test-automation/reports/test3/pabot_results/1/playwright-log.txt for additional details.</msg>
<msg timestamp="20230705 06:34:21.897" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[normalize-space()=\'(+84) Vietnam\']')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230705 06:32:51.789" endtime="20230705 06:34:21.897"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230705 06:34:21.898" endtime="20230705 06:34:21.898"/>
</kw>
<status status="FAIL" starttime="20230705 06:32:49.825" endtime="20230705 06:34:21.899"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.899" endtime="20230705 06:34:21.899"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.899" endtime="20230705 06:34:21.900"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.900" endtime="20230705 06:34:21.900"/>
</kw>
<kw name="Click Check In Button" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.900" endtime="20230705 06:34:21.900"/>
</kw>
<kw name="Fill Booker Info with the national is not Finland" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.900" endtime="20230705 06:34:21.900"/>
</kw>
<kw name="Click Save and Sign Button 2" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.901" endtime="20230705 06:34:21.901"/>
</kw>
<kw name="Verify booker information with national" library="booking">
<status status="NOT RUN" starttime="20230705 06:34:21.901" endtime="20230705 06:34:21.901"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230705 06:34:22.458" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20230705 06:34:21.901" endtime="20230705 06:34:22.459"/>
</kw>
<status status="FAIL" starttime="20230705 06:32:27.278" endtime="20230705 06:34:22.459">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//p[normalize-space()=\'(+84) Vietnam\']')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<status status="FAIL" starttime="20230705 06:29:32.488" endtime="20230705 06:34:22.462"/>
</suite>
<status status="FAIL" starttime="20230705 06:29:32.487" endtime="20230705 06:34:22.467"/>
</suite>
<status status="FAIL" starttime="20230705 06:29:32.485" endtime="20230705 06:34:22.468"/>
</suite>
<status status="FAIL" starttime="20230705 06:29:32.484" endtime="20230705 06:34:22.470"/>
</suite>
<doc>Argument file for running tests on Omena test environmen (test4)</doc>
<status status="FAIL" starttime="20230705 06:29:32.467" endtime="20230705 06:34:22.471"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="2" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="2" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="1" fail="2" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-557">Testsuites.BUI.Feature.Online Check In.BUI2-557</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
