<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.16 on darwin)" generated="20230815 08:11:03.881" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/Users/sara/code/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/Users/sara/code/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Feature" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature">
<suite id="s1-s1-s1-s1" name="Online Check In" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in">
<suite id="s1-s1-s1-s1-s1" name="BUI2-556" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-556.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:11:04.596" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:11:04.597" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:11:04.597" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:11:04.598" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/4640ea76-c056-45dd-afc4-ecc0c61abf8d"}</msg>
<msg timestamp="20230815 08:11:04.956" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/4640ea76-c056-45dd-afc4-ecc0c61abf8d"}</msg>
<msg timestamp="20230815 08:11:04.957" level="TRACE">Return: 'browser=76c62e6b-6c29-4688-9d1e-e5bcb3023953'</msg>
<status status="PASS" starttime="20230815 08:11:04.597" endtime="20230815 08:11:04.957"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:11:04.957" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:11:04.959" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:11:04.959" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:11:04.957" endtime="20230815 08:11:04.959"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:11:04.959" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:11:04.959" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:11:04.975" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:11:04.975" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:11:04.975" level="TRACE">Return: 'context=b555cc6a-12ee-4352-a6f8-5bf1184ebb84'</msg>
<status status="PASS" starttime="20230815 08:11:04.959" endtime="20230815 08:11:04.975"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:11:04.975" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:11:05.677" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:11:05.677" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:11:05.677" level="TRACE">Return: {'page_id': 'page=0b52c425-7070-4d4b-bf68-68b6dd3cf550', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:11:04.975" endtime="20230815 08:11:05.677"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:11:05.678" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:11:05.678" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:11:05.680" level="DEBUG">https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:11:05.680" level="TRACE">Return: 'https://test3.omenahotels.com/en'</msg>
<msg timestamp="20230815 08:11:05.680" level="INFO">${currentUrl} = https://test3.omenahotels.com/en</msg>
<status status="PASS" starttime="20230815 08:11:05.678" endtime="20230815 08:11:05.680"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:11:05.680" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:11:05.680" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:11:05.680" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:11:05.680" endtime="20230815 08:11:05.680"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:11:05.680" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:11:05.680" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:11:05.680" endtime="20230815 08:11:05.680"/>
</kw>
<msg timestamp="20230815 08:11:05.681" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:05.677" endtime="20230815 08:11:05.681"/>
</kw>
<msg timestamp="20230815 08:11:05.681" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:04.596" endtime="20230815 08:11:05.681"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:11:05.681" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:11:05.681" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:11:05.681" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:11:05.683" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:11:05.683" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:11:05.681" endtime="20230815 08:11:05.683"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:11:05.684" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:11:15.700" level="INFO">Found  Locators successfully.</msg>
<msg timestamp="20230815 08:11:15.700" level="DEBUG">[]</msg>
<msg timestamp="20230815 08:11:15.700" level="TRACE">Return: []</msg>
<msg timestamp="20230815 08:11:15.701" level="INFO">${els} = []</msg>
<status status="PASS" starttime="20230815 08:11:05.683" endtime="20230815 08:11:15.701"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:11:15.701" level="TRACE">Arguments: [ [] ]</msg>
<msg timestamp="20230815 08:11:15.701" level="INFO">Length is 0</msg>
<msg timestamp="20230815 08:11:15.701" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:11:15.701" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230815 08:11:15.701" endtime="20230815 08:11:15.701"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:11:15.702" endtime="20230815 08:11:15.702"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:11:15.702" endtime="20230815 08:11:15.702"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:11:15.702" level="TRACE">Arguments: [ 'False' ]</msg>
<msg timestamp="20230815 08:11:15.702" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:11:15.702" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:11:15.702" endtime="20230815 08:11:15.702"/>
</kw>
<status status="PASS" starttime="20230815 08:11:15.702" endtime="20230815 08:11:15.702"/>
</branch>
<status status="PASS" starttime="20230815 08:11:15.701" endtime="20230815 08:11:15.702"/>
</if>
<status status="PASS" starttime="20230815 08:11:05.683" endtime="20230815 08:11:15.702"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:11:15.703" endtime="20230815 08:11:15.703"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:11:15.703" endtime="20230815 08:11:15.703"/>
</branch>
<status status="PASS" starttime="20230815 08:11:05.683" endtime="20230815 08:11:15.703"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:11:15.704" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:11:15.708" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:11:15.708" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:11:15.703" endtime="20230815 08:11:15.708"/>
</kw>
<msg timestamp="20230815 08:11:15.708" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:11:15.708" level="INFO">${cookieModalVisible} = False</msg>
<status status="PASS" starttime="20230815 08:11:05.681" endtime="20230815 08:11:15.708"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:11:15.709" endtime="20230815 08:11:15.709"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:11:15.709" endtime="20230815 08:11:15.709"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:11:15.710" level="TRACE">Arguments: [ 'No Cookie Modal Visible' ]</msg>
<msg timestamp="20230815 08:11:15.710" level="INFO">No Cookie Modal Visible</msg>
<msg timestamp="20230815 08:11:15.710" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:15.710" endtime="20230815 08:11:15.710"/>
</kw>
<status status="PASS" starttime="20230815 08:11:15.709" endtime="20230815 08:11:15.710"/>
</branch>
<status status="PASS" starttime="20230815 08:11:15.709" endtime="20230815 08:11:15.710"/>
</if>
<msg timestamp="20230815 08:11:15.710" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:05.681" endtime="20230815 08:11:15.710"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:11:15.711" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:11:15.711" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:11:15.713" level="DEBUG">https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:11:15.713" level="TRACE">Return: 'https://test3.omenahotels.com/en'</msg>
<msg timestamp="20230815 08:11:15.713" level="INFO">${currentUrl} = https://test3.omenahotels.com/en</msg>
<status status="PASS" starttime="20230815 08:11:15.711" endtime="20230815 08:11:15.713"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:11:15.713" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:11:15.713" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:11:15.714" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:11:15.713" endtime="20230815 08:11:15.714"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:11:15.714" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:11:15.714" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:11:15.714" endtime="20230815 08:11:15.714"/>
</kw>
<msg timestamp="20230815 08:11:15.714" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:15.710" endtime="20230815 08:11:15.714"/>
</kw>
<msg timestamp="20230815 08:11:15.714" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:04.596" endtime="20230815 08:11:15.714"/>
</kw>
<test id="s1-s1-s1-s1-s1-t1" name="Select Hotel, Dates and Guests" line="14">
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:11:15.716" level="TRACE">Arguments: [ ${hotel}='Helsinki, Lönnrotinkatu' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:11:15.716" endtime="20230815 08:11:15.716"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:11:15.716" endtime="20230815 08:11:15.716"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:11:15.717" level="TRACE">Arguments: [ 'Selecting Hotel: Helsinki, Lönnrotinkatu' ]</msg>
<msg timestamp="20230815 08:11:15.717" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<msg timestamp="20230815 08:11:15.717" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:11:15.717" endtime="20230815 08:11:15.717"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:11:15.717" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:11:15.718" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:12:45.770" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-1.png</msg>
<msg timestamp="20230815 08:12:45.770" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:12:45.770" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:12:45.771" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:12:45.778" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//div[contains(@data-nelson-btn, \"hotels\")]\')\n============================================================", grpc_status:4, created_time:"2023-08-15T08:12:45.732944+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:11:15.717" endtime="20230815 08:12:45.778"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230815 08:12:45.779" endtime="20230815 08:12:45.779"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:12:45.779" endtime="20230815 08:12:45.779"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20230815 08:12:45.779" endtime="20230815 08:12:45.780"/>
</kw>
<status status="FAIL" starttime="20230815 08:11:15.716" endtime="20230815 08:12:45.780"/>
</branch>
<status status="FAIL" starttime="20230815 08:11:15.716" endtime="20230815 08:12:45.780"/>
</if>
<status status="FAIL" starttime="20230815 08:11:15.716" endtime="20230815 08:12:45.780"/>
</kw>
<kw name="Select Dates" library="booking">
<status status="NOT RUN" starttime="20230815 08:12:45.780" endtime="20230815 08:12:45.781"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<status status="NOT RUN" starttime="20230815 08:12:45.781" endtime="20230815 08:12:45.781"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:11:15.715" endtime="20230815 08:12:45.781">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t2" name="Check Available Rooms and Select a Standard Room" line="19">
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20230815 08:12:45.784" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:12:45.785" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:12:45.786" level="DEBUG">https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:12:45.786" level="TRACE">Return: 'https://test3.omenahotels.com/en'</msg>
<msg timestamp="20230815 08:12:45.787" level="INFO">${url} = https://test3.omenahotels.com/en</msg>
<status status="PASS" starttime="20230815 08:12:45.785" endtime="20230815 08:12:45.787"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20230815 08:12:45.787" level="TRACE">Arguments: [ ${string}='https://test3.omenahotels.com/en' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230815 08:12:45.788" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' | '/booking/' ]</msg>
<msg timestamp="20230815 08:12:45.788" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:12:45.788" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230815 08:12:45.788" endtime="20230815 08:12:45.788"/>
</kw>
<msg timestamp="20230815 08:12:45.788" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:12:45.788" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230815 08:12:45.787" endtime="20230815 08:12:45.788"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:12:45.788" endtime="20230815 08:12:45.788"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:12:45.788" endtime="20230815 08:12:45.788"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:12:45.789" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20230815 08:12:45.789" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:14:15.836" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-2.png</msg>
<msg timestamp="20230815 08:14:15.837" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:14:15.837" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:14:15.838" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[contains(@class, \'booking-form-button\') and contains(text(), \'Book\')]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:14:15.840" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[contains(@class, \'booking-form-button\') and contains(text(), \'Book\')]')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//button[contains(@class, \\\'booking-form-button\\\') and contains(text(), \\\'Book\\\')]\')\n============================================================", grpc_status:4, created_time:"2023-08-15T08:14:15.800129+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[contains(@class, \'booking-form-button\') and contains(text(), \'Book\')]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:12:45.789" endtime="20230815 08:14:15.841"/>
</kw>
<status status="FAIL" starttime="20230815 08:12:45.789" endtime="20230815 08:14:15.841"/>
</branch>
<status status="FAIL" starttime="20230815 08:12:45.788" endtime="20230815 08:14:15.841"/>
</if>
<status status="FAIL" starttime="20230815 08:12:45.784" endtime="20230815 08:14:15.842"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<status status="NOT RUN" starttime="20230815 08:14:15.843" endtime="20230815 08:14:15.843"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:12:45.784" endtime="20230815 08:14:15.843">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[contains(@class, \'booking-form-button\') and contains(text(), \'Book\')]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t3" name="Continue to Extras and Select Join for Free" line="23">
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:14:15.848" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:14:15.848" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:14:15.849" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:15:45.851" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-3.png</msg>
<msg timestamp="20230815 08:15:45.852" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:15:45.852" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:15:45.852" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:15:45.855" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:15:45.817085+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=(//div[contains(@view,\"booking\")]//button[contains(text(), \"Continue to extras\")])[1]\')\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:14:15.848" endtime="20230815 08:15:45.855"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230815 08:15:45.856" endtime="20230815 08:15:45.856"/>
</kw>
<status status="FAIL" starttime="20230815 08:14:15.847" endtime="20230815 08:15:45.856"/>
</kw>
<kw name="Continue to Payment" library="booking">
<status status="NOT RUN" starttime="20230815 08:15:45.857" endtime="20230815 08:15:45.857"/>
</kw>
<kw name="Select Join for Free" library="booking">
<status status="NOT RUN" starttime="20230815 08:15:45.857" endtime="20230815 08:15:45.857"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:14:15.847" endtime="20230815 08:15:45.857">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t4" name="Fill in Booker Contact Information" line="28">
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20230815 08:15:45.861" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='040123942' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20230815 08:15:45.861" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230815 08:15:45.862" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:15:47.201" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x103649d60&gt;
{'created_at': datetime.datetime(2023, 8, 15, 5, 15, 47, 97000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '982e2894-94df-4248-a26b-644f9da7dd38@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '982e2894-94df-4248-a26b-644f9da7dd38',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x103649fa0&gt;</msg>
<msg timestamp="20230815 08:15:47.202" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 15, 47, 97000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '982e2894-94df-4248-a26b-644f9da7dd38@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '982e2894-94df-4248-a26b-644f9da7dd38',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:15:47.204" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 15, 47, 97000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '982e2894-94df-4248-a26b-644f9da7dd38@mailslurp.com',
 'exp...</msg>
<status status="PASS" starttime="20230815 08:15:45.862" endtime="20230815 08:15:47.204"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:15:47.207" level="TRACE">Arguments: [ '982e2894-94df-4248-a26b-644f9da7dd38' ]</msg>
<msg timestamp="20230815 08:15:47.207" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:15:47.205" endtime="20230815 08:15:47.207"/>
</kw>
<msg timestamp="20230815 08:15:47.207" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 15, 47, 97000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '982e2894-94df-4248-a26b-644f9da7dd38@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '982e2894-94df-4248-a26b-644f9da7dd38',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:15:47.208" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 15, 47, 97000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '982e2894-94df-4248-a26b-644f9da7dd38@mailslurp.com',
 'exp...</msg>
<status status="PASS" starttime="20230815 08:15:45.861" endtime="20230815 08:15:47.208"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:15:47.209" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:15:47.209" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:15:47.210" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:17:17.250" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-4.png</msg>
<msg timestamp="20230815 08:17:17.251" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:17:17.252" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:17:17.253" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=firstName')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:17:17.255" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=firstName')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:17:17.213207+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'id=firstName\')\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=firstName')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:15:47.209" endtime="20230815 08:17:17.255"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.256" endtime="20230815 08:17:17.256"/>
</kw>
<status status="FAIL" starttime="20230815 08:15:47.208" endtime="20230815 08:17:17.257"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.257" endtime="20230815 08:17:17.257"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.257" endtime="20230815 08:17:17.257"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.258" endtime="20230815 08:17:17.258"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<status status="NOT RUN" starttime="20230815 08:17:17.258" endtime="20230815 08:17:17.258"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</branch>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.259" endtime="20230815 08:17:17.259"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</branch>
<status status="NOT RUN" starttime="20230815 08:17:17.260" endtime="20230815 08:17:17.260"/>
</if>
<status status="FAIL" starttime="20230815 08:15:45.861" endtime="20230815 08:17:17.261"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230815 08:17:17.261" endtime="20230815 08:17:17.261"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:15:45.860" endtime="20230815 08:17:17.262">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=firstName')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t5" name="Pay using Web Bank and Nordea" line="32">
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20230815 08:17:17.265" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:17:17.265" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20230815 08:17:17.266" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:18:47.319" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-5.png</msg>
<msg timestamp="20230815 08:18:47.320" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-5.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-5.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:18:47.321" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:18:47.321" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:18:47.323" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:18:47.274365+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//div[contains(text(), \"Web bank payment\")]\')\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:17:17.265" endtime="20230815 08:18:47.323"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:18:47.325" endtime="20230815 08:18:47.325"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:18:47.325" endtime="20230815 08:18:47.325"/>
</kw>
<status status="FAIL" starttime="20230815 08:17:17.265" endtime="20230815 08:18:47.326"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230815 08:18:47.326" endtime="20230815 08:18:47.326"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:17:17.264" endtime="20230815 08:18:47.326">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(text(), "Web bank payment")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t6" name="Check In Online" line="36">
<kw name="Click Check In Button" library="booking">
<msg timestamp="20230815 08:18:47.330" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:18:47.330" level="TRACE">Arguments: [ ${element}='(//button[text()="Check in"])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:18:47.331" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:20:17.388" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-6.png</msg>
<msg timestamp="20230815 08:20:17.389" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-6.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-6.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:20:17.390" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:20:17.391" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:20:17.394" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:20:17.340901+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.waitFor: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=(//button[text()=\"Check in\"])[1]\') to be visible\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:18:47.330" endtime="20230815 08:20:17.395"/>
</kw>
<status status="FAIL" starttime="20230815 08:18:47.330" endtime="20230815 08:20:17.396"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:20:17.397" endtime="20230815 08:20:17.397"/>
</kw>
<status status="FAIL" starttime="20230815 08:18:47.329" endtime="20230815 08:20:17.398"/>
</kw>
<kw name="Fill Check in Slide" library="booking">
<status status="NOT RUN" starttime="20230815 08:20:17.398" endtime="20230815 08:20:17.398"/>
</kw>
<kw name="Click Save and Sign Button and Sign if Required" library="booking">
<status status="NOT RUN" starttime="20230815 08:20:17.398" endtime="20230815 08:20:17.399"/>
</kw>
<kw name="Complete Check in" library="booking">
<status status="NOT RUN" starttime="20230815 08:20:17.399" endtime="20230815 08:20:17.399"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:18:47.329" endtime="20230815 08:20:17.399">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s1-t7" name="Wait for Door Code and Verify Page" line="42">
<kw name="Wait Until Door Code is Available" library="checkin">
<msg timestamp="20230815 08:20:17.403" level="TRACE">Arguments: [  ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>5 minutes</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:20:17.404" level="TRACE">Arguments: [ datetime.timedelta(seconds=300) ]</msg>
<msg timestamp="20230815 08:20:17.406" level="INFO">Set timeout to: 300000</msg>
<msg timestamp="20230815 08:20:17.406" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:20:17.404" endtime="20230815 08:20:17.406"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:20:17.406" level="TRACE">Arguments: [ ${selector}='//p[contains(text(), "Available in")]' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:20:17.407" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:20:17.408" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:20:17.408" level="TRACE">Return: '5 minutes'</msg>
<status status="PASS" starttime="20230815 08:20:17.407" endtime="20230815 08:20:17.408"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:20:17.409" level="TRACE">Arguments: [ '//p[contains(text(), "Available in")]' ]</msg>
<msg timestamp="20230815 08:20:27.418" level="INFO">Found  Locators successfully.</msg>
<msg timestamp="20230815 08:20:27.418" level="DEBUG">[]</msg>
<msg timestamp="20230815 08:20:27.419" level="TRACE">Return: []</msg>
<msg timestamp="20230815 08:20:27.419" level="INFO">${els} = []</msg>
<status status="PASS" starttime="20230815 08:20:17.408" endtime="20230815 08:20:27.419"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:20:27.421" level="TRACE">Arguments: [ [] ]</msg>
<msg timestamp="20230815 08:20:27.421" level="INFO">Length is 0</msg>
<msg timestamp="20230815 08:20:27.421" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:20:27.421" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230815 08:20:27.420" endtime="20230815 08:20:27.421"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.422" endtime="20230815 08:20:27.422"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:20:27.422" endtime="20230815 08:20:27.423"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:20:27.424" level="TRACE">Arguments: [ 'False' ]</msg>
<msg timestamp="20230815 08:20:27.424" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:20:27.424" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:20:27.423" endtime="20230815 08:20:27.424"/>
</kw>
<status status="PASS" starttime="20230815 08:20:27.423" endtime="20230815 08:20:27.424"/>
</branch>
<status status="PASS" starttime="20230815 08:20:27.421" endtime="20230815 08:20:27.424"/>
</if>
<status status="PASS" starttime="20230815 08:20:17.408" endtime="20230815 08:20:27.424"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.425" endtime="20230815 08:20:27.425"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:20:27.425" endtime="20230815 08:20:27.425"/>
</branch>
<status status="PASS" starttime="20230815 08:20:17.408" endtime="20230815 08:20:27.425"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:20:27.426" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:20:27.432" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:20:27.432" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:20:27.426" endtime="20230815 08:20:27.432"/>
</kw>
<msg timestamp="20230815 08:20:27.433" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:20:27.434" level="INFO">${availableInFound} = False</msg>
<status status="PASS" starttime="20230815 08:20:17.406" endtime="20230815 08:20:27.434"/>
</kw>
<while condition="${availableInFound}">
<iter>
<kw name="Sleep" library="BuiltIn">
<arg>15s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.435" endtime="20230815 08:20:27.435"/>
</kw>
<kw name="Reload" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Reloads current active page.</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.435" endtime="20230815 08:20:27.435"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.435" endtime="20230815 08:20:27.435"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:20:27.434" endtime="20230815 08:20:27.436"/>
</iter>
<status status="NOT RUN" starttime="20230815 08:20:27.434" endtime="20230815 08:20:27.436"/>
</while>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:20:27.437" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:20:27.437" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:20:27.436" endtime="20230815 08:20:27.437"/>
</kw>
<kw name="Check for Payment Ok Modal" library="checkin">
<doc>Workaround to closing modal until it is fixed</doc>
<msg timestamp="20230815 08:20:27.437" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Visible" library="common">
<var>${modalIsVisible}</var>
<arg>//section[contains(@class, 'chakra')]</arg>
<msg timestamp="20230815 08:20:27.438" level="TRACE">Arguments: [ ${selector}="//section[contains(@class, 'chakra')]" ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:20:27.439" level="TRACE">Arguments: [ "//section[contains(@class, 'chakra')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:20:27.695" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:20:27.695" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.2562520503997803 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:20:27.695" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:20:27.696" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:20:27.438" endtime="20230815 08:20:27.696"/>
</kw>
<msg timestamp="20230815 08:20:27.696" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:20:27.696" level="INFO">${modalIsVisible} = False</msg>
<status status="PASS" starttime="20230815 08:20:27.438" endtime="20230815 08:20:27.696"/>
</kw>
<if>
<branch type="IF" condition="${modalIsVisible}">
<kw name="Click" library="Browser">
<arg>//button[contains(text(),'Ok')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:20:27.698" endtime="20230815 08:20:27.698"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:20:27.697" endtime="20230815 08:20:27.698"/>
</branch>
<status status="PASS" starttime="20230815 08:20:27.696" endtime="20230815 08:20:27.698"/>
</if>
<msg timestamp="20230815 08:20:27.699" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:20:27.437" endtime="20230815 08:20:27.699"/>
</kw>
<msg timestamp="20230815 08:20:27.699" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:20:17.403" endtime="20230815 08:20:27.700"/>
</kw>
<kw name="Check Door Code and verify it is not empty" library="checkin">
<msg timestamp="20230815 08:20:27.701" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Text" library="Browser">
<var>${doorCode}</var>
<arg>//*[contains(text(), "Door code")]/following-sibling::*</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230815 08:20:27.702" level="TRACE">Arguments: [ '//*[contains(text(), "Door code")]/following-sibling::*' ]</msg>
<msg timestamp="20230815 08:21:57.753" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-7.png</msg>
<msg timestamp="20230815 08:21:57.754" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-7.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-7.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:21:57.754" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:21:57.754" level="FAIL">TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:21:57.759" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/getters.py", line 193, in _get_text
    return stub.GetText(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//*[contains(text(), \"Door code\")]/following-sibling::*\')\n============================================================", grpc_status:4, created_time:"2023-08-15T08:21:57.714839+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/assertion_engine.py", line 62, in with_assertion_polling
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/assertion_engine.py", line 55, in with_assertion_polling
    return wrapped(*args, **kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/getters.py", line 178, in get_text
    response = self._get_text(selector)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/getters.py", line 193, in _get_text
    return stub.GetText(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:20:27.701" endtime="20230815 08:21:57.759"/>
</kw>
<kw name="Is Element Found" library="common">
<var>${availableInFound}</var>
<arg>//p[contains(text(), "Available in")]</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<status status="NOT RUN" starttime="20230815 08:21:57.760" endtime="20230815 08:21:57.760"/>
</kw>
<if>
<branch type="IF" condition="${availableInFound} != 'True'">
<kw name="Should Be String" library="String">
<arg>${doorCode}</arg>
<doc>Fails if the given ``item`` is not a string.</doc>
<status status="NOT RUN" starttime="20230815 08:21:57.761" endtime="20230815 08:21:57.761"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:21:57.760" endtime="20230815 08:21:57.761"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Door code is not visible</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230815 08:21:57.761" endtime="20230815 08:21:57.761"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:21:57.761" endtime="20230815 08:21:57.761"/>
</branch>
<status status="NOT RUN" starttime="20230815 08:21:57.760" endtime="20230815 08:21:57.761"/>
</if>
<status status="FAIL" starttime="20230815 08:20:27.700" endtime="20230815 08:21:57.762"/>
</kw>
<kw name="Verify Page Elements after Check-in" library="checkin">
<status status="NOT RUN" starttime="20230815 08:21:57.762" endtime="20230815 08:21:57.762"/>
</kw>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20230815 08:20:17.402" endtime="20230815 08:21:57.762">TimeoutError: locator.elementHandle: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//*[contains(text(), "Door code")]/following-sibling::*')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:21:57.765" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:21:57.875" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:21:57.875" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:21:57.765" endtime="20230815 08:21:57.875"/>
</kw>
<doc>This is a test suite for booking a room and checking in online</doc>
<status status="FAIL" starttime="20230815 08:11:03.892" endtime="20230815 08:21:57.875"/>
</suite>
<suite id="s1-s1-s1-s1-s2" name="BUI2-557" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/feature/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s1-s2-t1" name="Create a new Booking" line="11">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:21:57.904" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:21:57.904" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:21:57.904" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:21:57.905" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/6920c0b8-f2aa-470b-9c8b-abda1d9a6356"}</msg>
<msg timestamp="20230815 08:21:58.276" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/6920c0b8-f2aa-470b-9c8b-abda1d9a6356"}</msg>
<msg timestamp="20230815 08:21:58.276" level="TRACE">Return: 'browser=1610c18b-6e6b-4803-8467-90231faae9cc'</msg>
<status status="PASS" starttime="20230815 08:21:57.904" endtime="20230815 08:21:58.276"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:21:58.277" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:21:58.278" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:21:58.278" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:21:58.277" endtime="20230815 08:21:58.278"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:21:58.279" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:21:58.279" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:21:58.294" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:21:58.294" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:21:58.294" level="TRACE">Return: 'context=9be227e1-e768-4cf8-98e8-2ace45f79e8f'</msg>
<status status="PASS" starttime="20230815 08:21:58.279" endtime="20230815 08:21:58.294"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:21:58.294" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:21:59.269" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:21:59.269" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:21:59.269" level="TRACE">Return: {'page_id': 'page=e8c890af-f48b-40e4-97b6-8386f46ea3e5', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:21:58.294" endtime="20230815 08:21:59.269"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:21:59.270" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:21:59.270" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:21:59.271" level="DEBUG">https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Return: 'https://test3.omenahotels.com/en'</msg>
<msg timestamp="20230815 08:21:59.271" level="INFO">${currentUrl} = https://test3.omenahotels.com/en</msg>
<status status="PASS" starttime="20230815 08:21:59.270" endtime="20230815 08:21:59.271"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:21:59.271" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:21:59.271" endtime="20230815 08:21:59.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:21:59.271" endtime="20230815 08:21:59.271"/>
</kw>
<msg timestamp="20230815 08:21:59.271" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:21:59.270" endtime="20230815 08:21:59.271"/>
</kw>
<msg timestamp="20230815 08:21:59.272" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:21:57.904" endtime="20230815 08:21:59.272"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:21:59.272" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:21:59.272" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:21:59.272" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:21:59.273" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:21:59.273" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:21:59.272" endtime="20230815 08:21:59.273"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:21:59.273" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:22:09.283" level="INFO">Found  Locators successfully.</msg>
<msg timestamp="20230815 08:22:09.283" level="DEBUG">[]</msg>
<msg timestamp="20230815 08:22:09.283" level="TRACE">Return: []</msg>
<msg timestamp="20230815 08:22:09.284" level="INFO">${els} = []</msg>
<status status="PASS" starttime="20230815 08:21:59.273" endtime="20230815 08:22:09.284"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:22:09.284" level="TRACE">Arguments: [ [] ]</msg>
<msg timestamp="20230815 08:22:09.284" level="INFO">Length is 0</msg>
<msg timestamp="20230815 08:22:09.284" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:22:09.285" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20230815 08:22:09.284" endtime="20230815 08:22:09.285"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:22:09.285" endtime="20230815 08:22:09.285"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:22:09.285" endtime="20230815 08:22:09.285"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:22:09.286" level="TRACE">Arguments: [ 'False' ]</msg>
<msg timestamp="20230815 08:22:09.287" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:22:09.287" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:22:09.286" endtime="20230815 08:22:09.287"/>
</kw>
<status status="PASS" starttime="20230815 08:22:09.286" endtime="20230815 08:22:09.288"/>
</branch>
<status status="PASS" starttime="20230815 08:22:09.285" endtime="20230815 08:22:09.288"/>
</if>
<status status="PASS" starttime="20230815 08:21:59.273" endtime="20230815 08:22:09.288"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:22:09.289" endtime="20230815 08:22:09.289"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:22:09.288" endtime="20230815 08:22:09.289"/>
</branch>
<status status="PASS" starttime="20230815 08:21:59.273" endtime="20230815 08:22:09.289"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:22:09.290" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:22:09.295" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:22:09.295" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:22:09.289" endtime="20230815 08:22:09.295"/>
</kw>
<msg timestamp="20230815 08:22:09.296" level="TRACE">Return: 'False'</msg>
<msg timestamp="20230815 08:22:09.296" level="INFO">${cookieModalVisible} = False</msg>
<status status="PASS" starttime="20230815 08:21:59.272" endtime="20230815 08:22:09.296"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:22:09.297" endtime="20230815 08:22:09.297"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:22:09.296" endtime="20230815 08:22:09.297"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:22:09.297" level="TRACE">Arguments: [ 'No Cookie Modal Visible' ]</msg>
<msg timestamp="20230815 08:22:09.297" level="INFO">No Cookie Modal Visible</msg>
<msg timestamp="20230815 08:22:09.297" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:22:09.297" endtime="20230815 08:22:09.297"/>
</kw>
<status status="PASS" starttime="20230815 08:22:09.297" endtime="20230815 08:22:09.297"/>
</branch>
<status status="PASS" starttime="20230815 08:22:09.296" endtime="20230815 08:22:09.298"/>
</if>
<msg timestamp="20230815 08:22:09.298" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:21:59.272" endtime="20230815 08:22:09.298"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:22:09.298" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:22:09.299" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:22:09.301" level="DEBUG">https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:22:09.301" level="TRACE">Return: 'https://test3.omenahotels.com/en'</msg>
<msg timestamp="20230815 08:22:09.301" level="INFO">${currentUrl} = https://test3.omenahotels.com/en</msg>
<status status="PASS" starttime="20230815 08:22:09.298" endtime="20230815 08:22:09.301"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:22:09.301" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:22:09.301" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:22:09.301" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:22:09.301" endtime="20230815 08:22:09.302"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:22:09.302" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:22:09.302" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:22:09.302" endtime="20230815 08:22:09.302"/>
</kw>
<msg timestamp="20230815 08:22:09.302" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:22:09.298" endtime="20230815 08:22:09.302"/>
</kw>
<msg timestamp="20230815 08:22:09.302" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:21:57.904" endtime="20230815 08:22:09.302"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:22:09.303" level="TRACE">Arguments: [ ${hotel}='Helsinki, Lönnrotinkatu' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:22:09.304" endtime="20230815 08:22:09.304"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:22:09.303" endtime="20230815 08:22:09.304"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:22:09.304" level="TRACE">Arguments: [ 'Selecting Hotel: Helsinki, Lönnrotinkatu' ]</msg>
<msg timestamp="20230815 08:22:09.304" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<msg timestamp="20230815 08:22:09.304" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:22:09.304" endtime="20230815 08:22:09.304"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:22:09.305" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:22:09.306" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:23:39.353" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-8.png</msg>
<msg timestamp="20230815 08:23:39.354" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-8.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-8.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:23:39.354" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:23:39.355" level="FAIL">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:23:39.358" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.click: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//div[contains(@data-nelson-btn, \"hotels\")]\')\n============================================================", grpc_status:4, created_time:"2023-08-15T08:23:39.31642+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:22:09.305" endtime="20230815 08:23:39.358"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.359" endtime="20230815 08:23:39.359"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.360" endtime="20230815 08:23:39.360"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.360" endtime="20230815 08:23:39.360"/>
</kw>
<status status="FAIL" starttime="20230815 08:22:09.304" endtime="20230815 08:23:39.360"/>
</branch>
<status status="FAIL" starttime="20230815 08:22:09.303" endtime="20230815 08:23:39.360"/>
</if>
<status status="FAIL" starttime="20230815 08:22:09.303" endtime="20230815 08:23:39.361"/>
</kw>
<kw name="Select Dates" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.361" endtime="20230815 08:23:39.361"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.362" endtime="20230815 08:23:39.362"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<status status="NOT RUN" starttime="20230815 08:23:39.363" endtime="20230815 08:23:39.363"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.363" endtime="20230815 08:23:39.363"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.363" endtime="20230815 08:23:39.363"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230815 08:23:39.363" endtime="20230815 08:23:39.363"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:23:39.364" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:23:39.629" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:23:39.629" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:39.363" endtime="20230815 08:23:39.629"/>
</kw>
<status status="FAIL" starttime="20230815 08:21:57.904" endtime="20230815 08:23:39.629">TimeoutError: locator.click: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[contains(@data-nelson-btn, "hotels")]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s2-t2" name="Add Someone Else as the Main Guest" line="25">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:23:39.631" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:23:39.631" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:23:39.632" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:23:39.632" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/457fe6bc-0d96-4813-a274-af6a7b5c8890"}</msg>
<msg timestamp="20230815 08:23:40.066" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/457fe6bc-0d96-4813-a274-af6a7b5c8890"}</msg>
<msg timestamp="20230815 08:23:40.067" level="TRACE">Return: 'browser=b7489c3d-cf86-458d-9748-0adc3f96bf3b'</msg>
<status status="PASS" starttime="20230815 08:23:39.631" endtime="20230815 08:23:40.067"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:23:40.067" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:23:40.067" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:23:40.067" endtime="20230815 08:23:40.067"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:23:40.067" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:23:40.068" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:23:40.083" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:23:40.083" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:23:40.085" level="TRACE">Return: 'context=5dbbf038-733f-4034-9b0b-f5efad1b7da5'</msg>
<status status="PASS" starttime="20230815 08:23:40.067" endtime="20230815 08:23:40.085"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:23:40.087" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:23:42.552" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:23:42.552" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:23:42.552" level="TRACE">Return: {'page_id': 'page=3b83d5b8-a575-4b8d-a041-99711f8c98b2', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:23:40.085" endtime="20230815 08:23:42.552"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:23:42.553" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:23:42.553" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:23:42.554" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:23:42.554" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:23:42.554" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:23:42.553" endtime="20230815 08:23:42.554"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:23:42.554" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:23:42.554" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:23:42.554" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:23:42.554" endtime="20230815 08:23:42.554"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:23:42.554" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:23:42.554" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:23:42.554" endtime="20230815 08:23:42.554"/>
</kw>
<msg timestamp="20230815 08:23:42.555" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:42.552" endtime="20230815 08:23:42.555"/>
</kw>
<msg timestamp="20230815 08:23:42.555" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:39.631" endtime="20230815 08:23:42.555"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:23:42.555" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:23:42.555" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:23:42.555" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:23:42.556" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:23:42.556" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:23:42.555" endtime="20230815 08:23:42.556"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:23:42.557" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:23:42.621" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:23:42.621" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:23:42.621" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:23:42.621" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:23:42.556" endtime="20230815 08:23:42.621"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:23:42.621" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20230815 08:23:42.621" level="INFO">Length is 1</msg>
<msg timestamp="20230815 08:23:42.621" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:23:42.621" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230815 08:23:42.621" endtime="20230815 08:23:42.621"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:23:42.621" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20230815 08:23:42.621" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:23:42.621" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230815 08:23:42.621" endtime="20230815 08:23:42.621"/>
</kw>
<status status="PASS" starttime="20230815 08:23:42.621" endtime="20230815 08:23:42.622"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:23:42.622" endtime="20230815 08:23:42.622"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:23:42.622" endtime="20230815 08:23:42.622"/>
</branch>
<status status="PASS" starttime="20230815 08:23:42.621" endtime="20230815 08:23:42.622"/>
</if>
<status status="PASS" starttime="20230815 08:23:42.556" endtime="20230815 08:23:42.622"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:23:42.622" endtime="20230815 08:23:42.622"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:23:42.622" endtime="20230815 08:23:42.622"/>
</branch>
<status status="PASS" starttime="20230815 08:23:42.556" endtime="20230815 08:23:42.622"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:23:42.622" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:23:42.623" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:23:42.623" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:23:42.622" endtime="20230815 08:23:42.623"/>
</kw>
<msg timestamp="20230815 08:23:42.624" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:23:42.624" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230815 08:23:42.555" endtime="20230815 08:23:42.624"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:23:42.624" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:23:42.624" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:23:42.695" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:23:42.695" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:42.624" endtime="20230815 08:23:42.696"/>
</kw>
<status status="PASS" starttime="20230815 08:23:42.624" endtime="20230815 08:23:42.696"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:23:42.696" endtime="20230815 08:23:42.696"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:23:42.696" endtime="20230815 08:23:42.696"/>
</branch>
<status status="PASS" starttime="20230815 08:23:42.624" endtime="20230815 08:23:42.696"/>
</if>
<msg timestamp="20230815 08:23:42.696" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:42.555" endtime="20230815 08:23:42.696"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:23:42.696" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:23:42.697" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:23:42.698" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:23:42.698" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:23:42.697" endtime="20230815 08:23:42.698"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:23:42.698" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:23:42.698" endtime="20230815 08:23:42.698"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:23:42.698" endtime="20230815 08:23:42.698"/>
</kw>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:42.696" endtime="20230815 08:23:42.698"/>
</kw>
<msg timestamp="20230815 08:23:42.698" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:23:39.631" endtime="20230815 08:23:42.698"/>
</kw>
<kw name="Click Check In Button" library="booking">
<msg timestamp="20230815 08:23:42.699" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:23:42.699" level="TRACE">Arguments: [ ${element}='(//button[text()="Check in"])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:23:42.699" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:12.876" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-9.png</msg>
<msg timestamp="20230815 08:25:12.877" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-9.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-9.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:25:12.877" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:25:12.877" level="FAIL">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:25:12.880" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.waitFor: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=(//button[text()=\"Check in\"])[1]\') to be visible\n============================================================", grpc_status:4, created_time:"2023-08-15T08:25:12.707316+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:23:42.699" endtime="20230815 08:25:12.880"/>
</kw>
<status status="FAIL" starttime="20230815 08:23:42.699" endtime="20230815 08:25:12.880"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:25:12.881" endtime="20230815 08:25:12.881"/>
</kw>
<status status="FAIL" starttime="20230815 08:23:42.698" endtime="20230815 08:25:12.881"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Fill In Booker info" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Click Save and invite" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${True}</arg>
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Create Email and Return Inbox" library="common">
<var>${email}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Fill Invite guest info and click invite button" library="booking">
<arg>${guestFirstname}</arg>
<arg>${guestLastname}</arg>
<arg>${email}</arg>
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Wait for invite guest page" library="booking">
<arg>${False}</arg>
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Open Edit booker info" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Verify All information is disbled" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.882" endtime="20230815 08:25:12.882"/>
</kw>
<kw name="Check Add organization check box" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.883" endtime="20230815 08:25:12.883"/>
</kw>
<kw name="Fill organization info" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.883" endtime="20230815 08:25:12.883"/>
</kw>
<kw name="Verify all information are save" library="booking">
<status status="NOT RUN" starttime="20230815 08:25:12.883" endtime="20230815 08:25:12.883"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:25:12.883" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:13.167" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:25:13.167" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:12.883" endtime="20230815 08:25:13.167"/>
</kw>
<status status="FAIL" starttime="20230815 08:23:39.630" endtime="20230815 08:25:13.168">TimeoutError: locator.waitFor: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=(//button[text()="Check in"])[1]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s1-s1-s1-s2-t3" name="Validation shows msg for fields marked" line="40">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:25:13.169" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:25:13.170" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:25:13.170" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:13.170" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/ebfa690b-056e-4158-9382-c790c0432aa4"}</msg>
<msg timestamp="20230815 08:25:13.629" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/ebfa690b-056e-4158-9382-c790c0432aa4"}</msg>
<msg timestamp="20230815 08:25:13.629" level="TRACE">Return: 'browser=c82e2609-0cf0-43aa-9c50-a53a387c66e1'</msg>
<status status="PASS" starttime="20230815 08:25:13.170" endtime="20230815 08:25:13.629"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:25:13.630" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:13.630" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:25:13.629" endtime="20230815 08:25:13.630"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:25:13.630" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:13.630" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:25:13.642" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:25:13.642" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:25:13.642" level="TRACE">Return: 'context=ab7f11d4-d257-4fde-a409-5fbcd21b3162'</msg>
<status status="PASS" starttime="20230815 08:25:13.630" endtime="20230815 08:25:13.642"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:25:13.643" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:25:15.286" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:25:15.286" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:25:15.286" level="TRACE">Return: {'page_id': 'page=e970cb25-4336-49f6-89a5-6ecf01800315', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:25:13.643" endtime="20230815 08:25:15.286"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:25:15.287" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:25:15.287" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:15.289" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:25:15.289" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:25:15.289" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:25:15.287" endtime="20230815 08:25:15.289"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:25:15.289" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:25:15.289" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:25:15.289" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:25:15.289" endtime="20230815 08:25:15.289"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:25:15.290" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:25:15.290" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:25:15.289" endtime="20230815 08:25:15.290"/>
</kw>
<msg timestamp="20230815 08:25:15.290" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.286" endtime="20230815 08:25:15.290"/>
</kw>
<msg timestamp="20230815 08:25:15.290" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:13.169" endtime="20230815 08:25:15.290"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:25:15.290" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:25:15.291" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:25:15.291" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:25:15.293" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:25:15.293" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:25:15.291" endtime="20230815 08:25:15.293"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:25:15.293" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:25:15.356" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:25:15.356" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:25:15.357" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:25:15.357" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:25:15.293" endtime="20230815 08:25:15.357"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:25:15.357" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20230815 08:25:15.357" level="INFO">Length is 1</msg>
<msg timestamp="20230815 08:25:15.357" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:25:15.357" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230815 08:25:15.357" endtime="20230815 08:25:15.357"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:25:15.357" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20230815 08:25:15.357" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:25:15.357" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230815 08:25:15.357" endtime="20230815 08:25:15.357"/>
</kw>
<status status="PASS" starttime="20230815 08:25:15.357" endtime="20230815 08:25:15.357"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:25:15.358" endtime="20230815 08:25:15.358"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:15.357" endtime="20230815 08:25:15.358"/>
</branch>
<status status="PASS" starttime="20230815 08:25:15.357" endtime="20230815 08:25:15.358"/>
</if>
<status status="PASS" starttime="20230815 08:25:15.293" endtime="20230815 08:25:15.358"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:25:15.358" endtime="20230815 08:25:15.358"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:15.358" endtime="20230815 08:25:15.358"/>
</branch>
<status status="PASS" starttime="20230815 08:25:15.293" endtime="20230815 08:25:15.358"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:25:15.358" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:15.359" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:25:15.359" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:25:15.358" endtime="20230815 08:25:15.359"/>
</kw>
<msg timestamp="20230815 08:25:15.359" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:25:15.359" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230815 08:25:15.290" endtime="20230815 08:25:15.359"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:15.360" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:25:15.360" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:15.419" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:15.419" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.360" endtime="20230815 08:25:15.419"/>
</kw>
<status status="PASS" starttime="20230815 08:25:15.360" endtime="20230815 08:25:15.420"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:25:15.420" endtime="20230815 08:25:15.420"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:15.420" endtime="20230815 08:25:15.420"/>
</branch>
<status status="PASS" starttime="20230815 08:25:15.359" endtime="20230815 08:25:15.420"/>
</if>
<msg timestamp="20230815 08:25:15.420" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.290" endtime="20230815 08:25:15.420"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:25:15.420" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:25:15.420" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:15.421" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:25:15.421" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:25:15.421" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:25:15.420" endtime="20230815 08:25:15.421"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:25:15.421" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:25:15.421" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:25:15.421" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:25:15.421" endtime="20230815 08:25:15.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:25:15.421" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:25:15.421" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:25:15.421" endtime="20230815 08:25:15.421"/>
</kw>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.420" endtime="20230815 08:25:15.422"/>
</kw>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:13.169" endtime="20230815 08:25:15.422"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Arguments: [ ${hotel}='Helsinki, Lönnrotinkatu' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.422"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.422"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Arguments: [ 'Selecting Hotel: Helsinki, Lönnrotinkatu' ]</msg>
<msg timestamp="20230815 08:25:15.422" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.422"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:15.422" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:25:15.423" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:15.487" level="DEBUG">Clicked element: '//div[contains(@data-nelson-btn, "hotels")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:15.487" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.487"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:15.487" level="TRACE">Arguments: [ ${element}="//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:15.488" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:15.490" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<msg timestamp="20230815 08:25:15.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.488" endtime="20230815 08:25:15.490"/>
</kw>
<msg timestamp="20230815 08:25:15.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.487" endtime="20230815 08:25:15.490"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:15.491" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<msg timestamp="20230815 08:25:15.491" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:15.770" level="DEBUG">Clicked element: '//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:15.771" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.490" endtime="20230815 08:25:15.771"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:15.771" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.hidden: 8&gt; | timeout=datetime.timedelta(seconds=3) ]</msg>
<msg timestamp="20230815 08:25:15.775" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<msg timestamp="20230815 08:25:15.776" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.771" endtime="20230815 08:25:15.776"/>
</kw>
<status status="PASS" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.776"/>
</branch>
<status status="PASS" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.776"/>
</if>
<msg timestamp="20230815 08:25:15.776" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.422" endtime="20230815 08:25:15.776"/>
</kw>
<kw name="Select Dates" library="booking">
<msg timestamp="20230815 08:25:15.776" level="TRACE">Arguments: [  ]</msg>
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:25:15.777" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:25:15.777" level="INFO"/>
<msg timestamp="20230815 08:25:15.777" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.776" endtime="20230815 08:25:15.777"/>
</kw>
<msg timestamp="20230815 08:25:15.777" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.776" endtime="20230815 08:25:15.777"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<msg timestamp="20230815 08:25:15.778" level="TRACE">Arguments: [ ${rooms}='1' | ${persons}='1' | ${children}='0' ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:25:15.778" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:25:15.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.778" endtime="20230815 08:25:15.778"/>
</kw>
<msg timestamp="20230815 08:25:15.778" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.777" endtime="20230815 08:25:15.778"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20230815 08:25:15.778" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:25:15.779" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:15.780" level="DEBUG">https://test3.omenahotels.com/en/#</msg>
<msg timestamp="20230815 08:25:15.780" level="TRACE">Return: 'https://test3.omenahotels.com/en/#'</msg>
<msg timestamp="20230815 08:25:15.780" level="INFO">${url} = https://test3.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230815 08:25:15.779" endtime="20230815 08:25:15.780"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20230815 08:25:15.780" level="TRACE">Arguments: [ ${string}='https://test3.omenahotels.com/en/#' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230815 08:25:15.781" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/#' | '/booking/' ]</msg>
<msg timestamp="20230815 08:25:15.781" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:15.781" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230815 08:25:15.780" endtime="20230815 08:25:15.781"/>
</kw>
<msg timestamp="20230815 08:25:15.781" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:15.781" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230815 08:25:15.780" endtime="20230815 08:25:15.781"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:25:15.782" endtime="20230815 08:25:15.782"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:15.782" endtime="20230815 08:25:15.782"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:15.782" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20230815 08:25:15.782" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:15.941" level="DEBUG">Clicked element: '//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:15.941" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.782" endtime="20230815 08:25:15.941"/>
</kw>
<status status="PASS" starttime="20230815 08:25:15.782" endtime="20230815 08:25:15.942"/>
</branch>
<status status="PASS" starttime="20230815 08:25:15.781" endtime="20230815 08:25:15.942"/>
</if>
<msg timestamp="20230815 08:25:15.942" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.778" endtime="20230815 08:25:15.942"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20230815 08:25:15.942" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:15.942" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:15.943" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:17.258" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20230815 08:25:17.258" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.942" endtime="20230815 08:25:17.258"/>
</kw>
<msg timestamp="20230815 08:25:17.259" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.942" endtime="20230815 08:25:17.259"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:17.259" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:25:17.512" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:25:17.512" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.2526073455810547 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:25:17.512" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:17.512" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:25:17.259" endtime="20230815 08:25:17.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:17.513" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20230815 08:25:17.513" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:17.512" endtime="20230815 08:25:17.513"/>
</kw>
<msg timestamp="20230815 08:25:17.513" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:15.942" endtime="20230815 08:25:17.513"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:25:17.514" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:17.514" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:25:17.515" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:19.932" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:19.932" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:17.514" endtime="20230815 08:25:19.932"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:19.932" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:19.933" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:20.726" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20230815 08:25:20.727" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:19.932" endtime="20230815 08:25:20.727"/>
</kw>
<msg timestamp="20230815 08:25:20.727" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:19.932" endtime="20230815 08:25:20.727"/>
</kw>
<msg timestamp="20230815 08:25:20.728" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:17.513" endtime="20230815 08:25:20.728"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<msg timestamp="20230815 08:25:20.729" level="TRACE">Arguments: [  ]</msg>
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<msg timestamp="20230815 08:25:20.729" level="TRACE">Arguments: [ ${xpath}="//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']" ]</msg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:25:20.730" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']" ]</msg>
<msg timestamp="20230815 08:25:20.737" level="INFO">Found Locator@//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:25:20.737" level="DEBUG">["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:25:20.737" level="TRACE">Return: ["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:25:20.738" level="INFO">${elements} = ["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<status status="PASS" starttime="20230815 08:25:20.729" endtime="20230815 08:25:20.738"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:25:20.739" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0" ]</msg>
<msg timestamp="20230815 08:25:20.739" level="TRACE">Return: "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"</msg>
<msg timestamp="20230815 08:25:20.739" level="INFO">${first_element} = //div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0</msg>
<status status="PASS" starttime="20230815 08:25:20.739" endtime="20230815 08:25:20.739"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:20.739" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0" ]</msg>
<msg timestamp="20230815 08:25:20.740" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:20.802" level="DEBUG">Clicked element: '//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:20.802" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.739" endtime="20230815 08:25:20.802"/>
</kw>
<msg timestamp="20230815 08:25:20.803" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.729" endtime="20230815 08:25:20.803"/>
</kw>
<msg timestamp="20230815 08:25:20.803" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.728" endtime="20230815 08:25:20.803"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<msg timestamp="20230815 08:25:20.803" level="TRACE">Arguments: [  ]</msg>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:25:20.803" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:20.804" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:25:20.804" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:21.686" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:21.686" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.803" endtime="20230815 08:25:21.686"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:21.686" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:21.686" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:21.691" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:25:21.691" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.686" endtime="20230815 08:25:21.691"/>
</kw>
<msg timestamp="20230815 08:25:21.691" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.686" endtime="20230815 08:25:21.691"/>
</kw>
<msg timestamp="20230815 08:25:21.691" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.803" endtime="20230815 08:25:21.691"/>
</kw>
<kw name="Check Join as Member" library="booking">
<msg timestamp="20230815 08:25:21.691" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:21.691" level="TRACE">Arguments: [ "//p[contains(text(),'Join for free and')]" ]</msg>
<msg timestamp="20230815 08:25:21.692" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:21.822" level="DEBUG">Clicked element: '//p[contains(text(),'Join for free and')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:21.822" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.691" endtime="20230815 08:25:21.822"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:21.822" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:21.822" level="TRACE">Arguments: [ "//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:21.827" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:25:21.827" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.822" endtime="20230815 08:25:21.827"/>
</kw>
<msg timestamp="20230815 08:25:21.828" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.822" endtime="20230815 08:25:21.828"/>
</kw>
<msg timestamp="20230815 08:25:21.828" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.691" endtime="20230815 08:25:21.828"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:25:21.828" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:21.828" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:25:21.828" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:21.944" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:21.944" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.828" endtime="20230815 08:25:21.944"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:21.944" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:21.945" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:21.978" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:25:21.978" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.944" endtime="20230815 08:25:21.978"/>
</kw>
<msg timestamp="20230815 08:25:21.979" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.944" endtime="20230815 08:25:21.979"/>
</kw>
<msg timestamp="20230815 08:25:21.979" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.828" endtime="20230815 08:25:21.979"/>
</kw>
<kw name="Check Join as Member" library="booking">
<msg timestamp="20230815 08:25:21.979" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:21.979" level="TRACE">Arguments: [ "//p[contains(text(),'Join for free and')]" ]</msg>
<msg timestamp="20230815 08:25:21.979" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:22.081" level="DEBUG">Clicked element: '//p[contains(text(),'Join for free and')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:22.081" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.979" endtime="20230815 08:25:22.081"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:22.081" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:22.082" level="TRACE">Arguments: [ "//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:22.086" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:25:22.086" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.081" endtime="20230815 08:25:22.086"/>
</kw>
<msg timestamp="20230815 08:25:22.086" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.081" endtime="20230815 08:25:22.086"/>
</kw>
<msg timestamp="20230815 08:25:22.086" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:21.979" endtime="20230815 08:25:22.086"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:25:22.086" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:22.086" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:25:22.087" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:22.179" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:22.180" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.086" endtime="20230815 08:25:22.180"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:22.180" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:22.180" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:22.198" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:25:22.198" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.180" endtime="20230815 08:25:22.198"/>
</kw>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.180" endtime="20230815 08:25:22.199"/>
</kw>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.086" endtime="20230815 08:25:22.199"/>
</kw>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:20.803" endtime="20230815 08:25:22.199"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='040123942' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230815 08:25:22.199" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:23.479" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x103649d60&gt;
{'created_at': datetime.datetime(2023, 8, 15, 5, 25, 23, 339000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '52c73548-8277-4ca4-b920-5a854670d3cd',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x103649fa0&gt;</msg>
<msg timestamp="20230815 08:25:23.479" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 25, 23, 339000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '52c73548-8277-4ca4-b920-5a854670d3cd',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:25:23.480" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 25, 23, 339000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com',
 'ex...</msg>
<status status="PASS" starttime="20230815 08:25:22.199" endtime="20230815 08:25:23.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:25:23.483" level="TRACE">Arguments: [ '52c73548-8277-4ca4-b920-5a854670d3cd' ]</msg>
<msg timestamp="20230815 08:25:23.484" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.481" endtime="20230815 08:25:23.484"/>
</kw>
<msg timestamp="20230815 08:25:23.484" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 25, 23, 339000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '52c73548-8277-4ca4-b920-5a854670d3cd',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:25:23.485" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 25, 23, 339000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com',
 'ex...</msg>
<status status="PASS" starttime="20230815 08:25:22.199" endtime="20230815 08:25:23.485"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:25:23.486" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.486" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:25:23.488" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:23.538" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:23.538" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.486" endtime="20230815 08:25:23.538"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.538" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:25:23.539" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:25:23.567" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:25:23.567" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.538" endtime="20230815 08:25:23.568"/>
</kw>
<msg timestamp="20230815 08:25:23.568" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.485" endtime="20230815 08:25:23.568"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:25:23.568" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.568" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20230815 08:25:23.569" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:23.662" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:23.662" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.568" endtime="20230815 08:25:23.662"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.663" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:25:23.663" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:25:23.692" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:25:23.692" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.662" endtime="20230815 08:25:23.692"/>
</kw>
<msg timestamp="20230815 08:25:23.692" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.568" endtime="20230815 08:25:23.692"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:25:23.693" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.693" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:25:23.694" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:23.781" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:23.782" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.693" endtime="20230815 08:25:23.782"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.782" level="TRACE">Arguments: [ 'id=email' | '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com' ]</msg>
<msg timestamp="20230815 08:25:23.782" level="INFO">Fills the text '52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com' in the given field.</msg>
<msg timestamp="20230815 08:25:23.803" level="DEBUG">Fill text 52c73548-8277-4ca4-b920-5a854670d3cd@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20230815 08:25:23.803" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.782" endtime="20230815 08:25:23.803"/>
</kw>
<msg timestamp="20230815 08:25:23.803" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.692" endtime="20230815 08:25:23.803"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:25:23.804" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:25:23.804" level="DEBUG">https://test3.omenahotels.com/en/booking/#/payment</msg>
<msg timestamp="20230815 08:25:23.804" level="TRACE">Return: 'https://test3.omenahotels.com/en/booking/#/payment'</msg>
<msg timestamp="20230815 08:25:23.804" level="INFO">${u} = https://test3.omenahotels.com/en/booking/#/payment</msg>
<status status="PASS" starttime="20230815 08:25:23.803" endtime="20230815 08:25:23.804"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<msg timestamp="20230815 08:25:23.805" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/booking/#/payment' ]</msg>
<msg timestamp="20230815 08:25:23.805" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:25:23.805" level="INFO">${e} = test-omena</msg>
<status status="PASS" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.805"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.805"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.805"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:25:23.805" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='040123942' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.805" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20230815 08:25:23.806" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:23.881" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:23.881" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.881"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.882" level="TRACE">Arguments: [ 'id=phoneNumber' | '040123942' ]</msg>
<msg timestamp="20230815 08:25:23.882" level="INFO">Fills the text '040123942' in the given field.</msg>
<msg timestamp="20230815 08:25:23.890" level="DEBUG">Fill text 040123942 on id=phoneNumber with force: false</msg>
<msg timestamp="20230815 08:25:23.890" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.882" endtime="20230815 08:25:23.890"/>
</kw>
<msg timestamp="20230815 08:25:23.890" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.890"/>
</kw>
<status status="PASS" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.890"/>
</branch>
<status status="PASS" starttime="20230815 08:25:23.805" endtime="20230815 08:25:23.890"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:25:23.891" level="TRACE">Arguments: [ '52c73548-8277-4ca4-b920-5a854670d3cd' ]</msg>
<msg timestamp="20230815 08:25:23.891" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.890" endtime="20230815 08:25:23.891"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 08:25:23.891" level="TRACE">Arguments: [ '$ID' | '${inbox.id}' ]</msg>
<msg timestamp="20230815 08:25:23.892" level="INFO">${ID} = 52c73548-8277-4ca4-b920-5a854670d3cd</msg>
<msg timestamp="20230815 08:25:23.892" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.891" endtime="20230815 08:25:23.892"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230815 08:25:23.892" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20230815 08:25:23.900" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:25:23.901" level="INFO">${passwordVisible} = 0</msg>
<status status="PASS" starttime="20230815 08:25:23.892" endtime="20230815 08:25:23.901"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:25:23.902" endtime="20230815 08:25:23.902"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:25:23.902" endtime="20230815 08:25:23.902"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:25:23.902" level="TRACE">Arguments: [ 'No password filled' ]</msg>
<msg timestamp="20230815 08:25:23.902" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.902" endtime="20230815 08:25:23.902"/>
</kw>
<status status="PASS" starttime="20230815 08:25:23.902" endtime="20230815 08:25:23.902"/>
</branch>
<status status="PASS" starttime="20230815 08:25:23.901" endtime="20230815 08:25:23.903"/>
</if>
<msg timestamp="20230815 08:25:23.903" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:22.199" endtime="20230815 08:25:23.903"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20230815 08:25:23.903" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.903" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20230815 08:25:23.904" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:23.988" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:23.989" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.903" endtime="20230815 08:25:23.989"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:23.989" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20230815 08:25:23.989" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:24.099" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:24.099" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.989" endtime="20230815 08:25:24.099"/>
</kw>
<msg timestamp="20230815 08:25:24.099" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:23.903" endtime="20230815 08:25:24.099"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20230815 08:25:24.100" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:24.100" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20230815 08:25:24.100" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:24.156" level="DEBUG">Clicked element: '//div[contains(text(), "Web bank payment")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:24.156" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.100" endtime="20230815 08:25:24.156"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:24.156" level="TRACE">Arguments: [ "//p[contains(text(), 'Nordea')]" ]</msg>
<msg timestamp="20230815 08:25:24.156" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:24.235" level="DEBUG">Clicked element: '//p[contains(text(), 'Nordea')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:24.236" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.156" endtime="20230815 08:25:24.236"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:24.236" level="TRACE">Arguments: [ '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' ]</msg>
<msg timestamp="20230815 08:25:24.236" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:24.303" level="DEBUG">Clicked element: '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:24.303" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.236" endtime="20230815 08:25:24.303"/>
</kw>
<msg timestamp="20230815 08:25:24.303" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.100" endtime="20230815 08:25:24.303"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<msg timestamp="20230815 08:25:24.303" level="TRACE">Arguments: [  ]</msg>
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<msg timestamp="20230815 08:25:24.303" level="TRACE">Arguments: [ ${which}='success' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:24.304" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:29.719" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<msg timestamp="20230815 08:25:29.719" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.304" endtime="20230815 08:25:29.719"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:29.719" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" ]</msg>
<msg timestamp="20230815 08:25:29.720" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:35.108" level="DEBUG">Clicked element: '//a[contains(text(), 'Simulate success to merchant')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:35.108" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:29.719" endtime="20230815 08:25:35.108"/>
</kw>
<msg timestamp="20230815 08:25:35.109" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.303" endtime="20230815 08:25:35.109"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<msg timestamp="20230815 08:25:35.110" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:35.110" level="TRACE">Arguments: [ ${element}="//p[contains(text(), 'Payment was successful')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:35.111" level="TRACE">Arguments: [ "//p[contains(text(), 'Payment was successful')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:38.478" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<msg timestamp="20230815 08:25:38.478" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:35.111" endtime="20230815 08:25:38.478"/>
</kw>
<msg timestamp="20230815 08:25:38.478" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:35.110" endtime="20230815 08:25:38.478"/>
</kw>
<kw name="Close Dialog" library="booking">
<msg timestamp="20230815 08:25:38.478" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:38.478" level="TRACE">Arguments: [ ${element}='//button[contains(text(), "Ok")]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:38.479" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:38.481" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<msg timestamp="20230815 08:25:38.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.478" endtime="20230815 08:25:38.481"/>
</kw>
<msg timestamp="20230815 08:25:38.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.478" endtime="20230815 08:25:38.481"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:38.482" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' ]</msg>
<msg timestamp="20230815 08:25:38.482" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:38.607" level="DEBUG">Clicked element: '//button[contains(text(), "Ok")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:38.607" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.482" endtime="20230815 08:25:38.607"/>
</kw>
<msg timestamp="20230815 08:25:38.607" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.478" endtime="20230815 08:25:38.607"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<msg timestamp="20230815 08:25:38.608" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:38.608" level="TRACE">Arguments: [ "//p[contains(text(),'Booking number')]" ]</msg>
<msg timestamp="20230815 08:25:38.623" level="DEBUG">Text received successfully.</msg>
<msg timestamp="20230815 08:25:38.623" level="INFO">Text: 'Booking number: 948101467'</msg>
<msg timestamp="20230815 08:25:38.623" level="TRACE">Return: 'Booking number: 948101467'</msg>
<msg timestamp="20230815 08:25:38.623" level="INFO">${str} = Booking number: 948101467</msg>
<status status="PASS" starttime="20230815 08:25:38.608" endtime="20230815 08:25:38.623"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.624" endtime="20230815 08:25:38.624"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Arguments: [ 'Booking number: 948101467' | 'Booking code ' ]</msg>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: 'Booking number: 948101467'</msg>
<msg timestamp="20230815 08:25:38.624" level="INFO">${str} = Booking number: 948101467</msg>
<status status="PASS" starttime="20230815 08:25:38.624" endtime="20230815 08:25:38.624"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Arguments: [ 'Booking number: 948101467' ]</msg>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: 'Booking number: 948101467'</msg>
<msg timestamp="20230815 08:25:38.624" level="INFO">${str} = Booking number: 948101467</msg>
<status status="PASS" starttime="20230815 08:25:38.624" endtime="20230815 08:25:38.624"/>
</kw>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.608" endtime="20230815 08:25:38.624"/>
</kw>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:35.110" endtime="20230815 08:25:38.624"/>
</kw>
<msg timestamp="20230815 08:25:38.624" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:24.303" endtime="20230815 08:25:38.624"/>
</kw>
<kw name="Click Check In Button" library="booking">
<msg timestamp="20230815 08:25:38.625" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:25:38.625" level="TRACE">Arguments: [ ${element}='(//button[text()="Check in"])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:38.625" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:25:38.627" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<msg timestamp="20230815 08:25:38.627" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.625" endtime="20230815 08:25:38.627"/>
</kw>
<msg timestamp="20230815 08:25:38.627" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.625" endtime="20230815 08:25:38.627"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:38.628" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' ]</msg>
<msg timestamp="20230815 08:25:38.628" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:38.772" level="DEBUG">Clicked element: '(//button[text()="Check in"])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:38.772" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.627" endtime="20230815 08:25:38.772"/>
</kw>
<msg timestamp="20230815 08:25:38.773" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.625" endtime="20230815 08:25:38.773"/>
</kw>
<kw name="Click Someone else checkbox" library="booking">
<msg timestamp="20230815 08:25:38.773" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//span[normalize-space()='Someone else will be the main guest']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:38.773" level="TRACE">Arguments: [ "//span[normalize-space()='Someone else will be the main guest']" ]</msg>
<msg timestamp="20230815 08:25:38.773" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:39.622" level="DEBUG">Clicked element: '//span[normalize-space()='Someone else will be the main guest']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:39.622" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.773" endtime="20230815 08:25:39.622"/>
</kw>
<msg timestamp="20230815 08:25:39.623" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:38.773" endtime="20230815 08:25:39.623"/>
</kw>
<kw name="Click Save and invite" library="booking">
<msg timestamp="20230815 08:25:39.623" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and invite']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:25:39.624" level="TRACE">Arguments: [ "//button[normalize-space()='Save and invite']" ]</msg>
<msg timestamp="20230815 08:25:39.624" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:25:39.689" level="DEBUG">Clicked element: '//button[normalize-space()='Save and invite']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:25:39.689" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:39.623" endtime="20230815 08:25:39.689"/>
</kw>
<msg timestamp="20230815 08:25:39.689" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:39.623" endtime="20230815 08:25:39.689"/>
</kw>
<kw name="Verify msg The field is required" library="booking">
<msg timestamp="20230815 08:25:39.690" level="TRACE">Arguments: [  ]</msg>
<kw name="Create List" library="BuiltIn">
<var>@{listOfElements}</var>
<arg>//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<arg>//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230815 08:25:39.690" level="TRACE">Arguments: [ "//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | "//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | "//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | "//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" ]</msg>
<msg timestamp="20230815 08:25:39.690" level="TRACE">Return: ["//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]"]</msg>
<msg timestamp="20230815 08:25:39.690" level="INFO">@{listOfElements} = [ //input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled] | //input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled] |...</msg>
<status status="PASS" starttime="20230815 08:25:39.690" endtime="20230815 08:25:39.690"/>
</kw>
<kw name="Verify Elements are Visible/Invisible" library="booking">
<arg>@{listOfElements}</arg>
<arg>visible=False</arg>
<msg timestamp="20230815 08:25:39.690" level="TRACE">Arguments: [ @{listOfElements}=["//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]",
 "//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]"] ]</msg>
<for flavor="IN">
<var>${element}</var>
<value>@{listOfElements}</value>
<iter>
<var name="${element}">//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:25:39.690" level="TRACE">Arguments: [ 'Wait For Elements State' | '${element}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:39.691" level="TRACE">Arguments: [ "//input[(@id='ssn')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:25:45.772" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-10.png</msg>
<msg timestamp="20230815 08:25:45.772" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-10.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-10.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:25:45.772" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:25:45.772" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'ssn\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:25:45.775" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'ssn\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//input[(@id=\\\'ssn\\\')]/parent::div//div[normalize-space()=\\\'This field is required!\\\' and @disabled]\') to be visible\n============================================================", grpc_status:4, created_time:"2023-08-15T08:25:45.692667+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'ssn\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:25:39.690" endtime="20230815 08:25:45.775"/>
</kw>
<msg timestamp="20230815 08:25:45.775" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:45.775" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:25:39.690" endtime="20230815 08:25:45.775"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${True}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:45.775" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:25:45.775" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:45.775" endtime="20230815 08:25:45.775"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${False}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:45.776" endtime="20230815 08:25:45.776"/>
</kw>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:45.775" endtime="20230815 08:25:45.776"/>
</kw>
<status status="PASS" starttime="20230815 08:25:39.690" endtime="20230815 08:25:45.776"/>
</iter>
<iter>
<var name="${element}">//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Arguments: [ 'Wait For Elements State' | '${element}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:45.776" level="TRACE">Arguments: [ "//input[(@id='city')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:25:51.857" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-11.png</msg>
<msg timestamp="20230815 08:25:51.857" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-11.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-11.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:25:51.857" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:25:51.858" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'city\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:25:51.858" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'city\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:25:51.779594+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//input[(@id=\\\'city\\\')]/parent::div//div[normalize-space()=\\\'This field is required!\\\' and @disabled]\') to be visible\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'city\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:25:45.776" endtime="20230815 08:25:51.858"/>
</kw>
<msg timestamp="20230815 08:25:51.858" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:51.858" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:25:45.776" endtime="20230815 08:25:51.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${True}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:51.858" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:25:51.858" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:51.858" endtime="20230815 08:25:51.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${False}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:51.859" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:25:51.859" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:25:51.859" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:51.859" endtime="20230815 08:25:51.859"/>
</kw>
<msg timestamp="20230815 08:25:51.859" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:51.859" endtime="20230815 08:25:51.859"/>
</kw>
<status status="PASS" starttime="20230815 08:25:45.776" endtime="20230815 08:25:51.859"/>
</iter>
<iter>
<var name="${element}">//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:25:51.859" level="TRACE">Arguments: [ 'Wait For Elements State' | '${element}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:51.860" level="TRACE">Arguments: [ "//input[(@id='address')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:25:57.936" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-12.png</msg>
<msg timestamp="20230815 08:25:57.937" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-12.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-12.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:25:57.937" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:25:57.937" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'address\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:25:57.938" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'address\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:25:57.863672+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//input[(@id=\\\'address\\\')]/parent::div//div[normalize-space()=\\\'This field is required!\\\' and @disabled]\') to be visible\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'address\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:25:51.859" endtime="20230815 08:25:57.938"/>
</kw>
<msg timestamp="20230815 08:25:57.938" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:25:57.938" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:25:51.859" endtime="20230815 08:25:57.938"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${True}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:57.938" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:57.938" endtime="20230815 08:25:57.939"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${False}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:57.939" endtime="20230815 08:25:57.939"/>
</kw>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:57.939" endtime="20230815 08:25:57.939"/>
</kw>
<status status="PASS" starttime="20230815 08:25:51.859" endtime="20230815 08:25:57.939"/>
</iter>
<iter>
<var name="${element}">//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]</var>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:25:57.939" level="TRACE">Arguments: [ 'Wait For Elements State' | '${element}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:25:57.940" level="TRACE">Arguments: [ "//input[(@id='postalCode')]/parent::div//div[normalize-space()='This field is required!' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:04.014" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-13.png</msg>
<msg timestamp="20230815 08:26:04.015" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-13.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-13.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:26:04.015" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:26:04.015" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'postalCode\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:26:04.015" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'postalCode\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:26:03.942558+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//input[(@id=\\\'postalCode\\\')]/parent::div//div[normalize-space()=\\\'This field is required!\\\' and @disabled]\') to be visible\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[(@id=\'postalCode\')]/parent::div//div[normalize-space()=\'This field is required!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:25:57.940" endtime="20230815 08:26:04.015"/>
</kw>
<msg timestamp="20230815 08:26:04.015" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:04.015" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:25:57.939" endtime="20230815 08:26:04.015"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${True}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.016" endtime="20230815 08:26:04.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible} == ${False}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.016" endtime="20230815 08:26:04.016"/>
</kw>
<msg timestamp="20230815 08:26:04.016" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.016" endtime="20230815 08:26:04.016"/>
</kw>
<status status="PASS" starttime="20230815 08:25:57.939" endtime="20230815 08:26:04.016"/>
</iter>
<status status="PASS" starttime="20230815 08:25:39.690" endtime="20230815 08:26:04.017"/>
</for>
<msg timestamp="20230815 08:26:04.017" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:39.690" endtime="20230815 08:26:04.017"/>
</kw>
<msg timestamp="20230815 08:26:04.017" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:25:39.689" endtime="20230815 08:26:04.017"/>
</kw>
<kw name="Fill invalid phone format" library="booking">
<msg timestamp="20230815 08:26:04.017" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//input[@id='phoneNumber']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:04.017" level="TRACE">Arguments: [ "//input[@id='phoneNumber']" ]</msg>
<msg timestamp="20230815 08:26:04.018" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:04.099" level="DEBUG">Clicked element: '//input[@id='phoneNumber']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:04.099" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.017" endtime="20230815 08:26:04.099"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='phoneNumber']</arg>
<arg>suke6545</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20230815 08:26:04.099" level="TRACE">Arguments: [ '20s' | '2s' | 'Type Text' | "//input[@id='phoneNumber']" | 'suke6545' ]</msg>
<kw name="Type Text" library="Browser">
<arg>//input[@id='phoneNumber']</arg>
<arg>suke6545</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:04.099" level="TRACE">Arguments: [ "//input[@id='phoneNumber']" | 'suke6545' ]</msg>
<msg timestamp="20230815 08:26:04.099" level="INFO">Types the text 'suke6545' in the given field.</msg>
<msg timestamp="20230815 08:26:04.200" level="DEBUG">Typed text "suke6545" on "//input[@id='phoneNumber']"</msg>
<msg timestamp="20230815 08:26:04.200" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.099" endtime="20230815 08:26:04.200"/>
</kw>
<msg timestamp="20230815 08:26:04.200" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.099" endtime="20230815 08:26:04.200"/>
</kw>
<msg timestamp="20230815 08:26:04.200" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.017" endtime="20230815 08:26:04.200"/>
</kw>
<kw name="Verify msg &quot;Invalid phone number!&quot;" library="booking">
<msg timestamp="20230815 08:26:04.201" level="TRACE">Arguments: [  ]</msg>
<kw name="Verify Element Presence" library="booking">
<arg>//div[text()='Invalid phone number!' and @disabled]</arg>
<arg>${False}</arg>
<msg timestamp="20230815 08:26:04.201" level="TRACE">Arguments: [ ${path}="//div[text()='Invalid phone number!' and @disabled]" | ${shown}=False ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:04.201" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:04.201" level="TRACE">Arguments: [ "//div[text()='Invalid phone number!' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:10.260" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-14.png</msg>
<msg timestamp="20230815 08:26:10.261" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-14.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-14.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:26:10.261" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:26:10.261" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Invalid phone number!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:26:10.261" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Invalid phone number!\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//div[text()=\\\'Invalid phone number!\\\' and @disabled]\') to be visible\n============================================================", grpc_status:4, created_time:"2023-08-15T08:26:10.204974+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Invalid phone number!\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:26:04.201" endtime="20230815 08:26:10.261"/>
</kw>
<msg timestamp="20230815 08:26:10.261" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:10.261" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:26:04.201" endtime="20230815 08:26:10.261"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Arguments: [ "//div[text()='Invalid phone number!' and @disabled]" ]</msg>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.261" endtime="20230815 08:26:10.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.262" endtime="20230815 08:26:10.262"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:10.262" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:26:10.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.262" endtime="20230815 08:26:10.263"/>
</kw>
<msg timestamp="20230815 08:26:10.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.262" endtime="20230815 08:26:10.263"/>
</kw>
<msg timestamp="20230815 08:26:10.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.201" endtime="20230815 08:26:10.263"/>
</kw>
<msg timestamp="20230815 08:26:10.263" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:04.200" endtime="20230815 08:26:10.263"/>
</kw>
<kw name="Fill invalid SSN" library="booking">
<msg timestamp="20230815 08:26:10.263" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//input[@id='ssn']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:10.263" level="TRACE">Arguments: [ "//input[@id='ssn']" ]</msg>
<msg timestamp="20230815 08:26:10.264" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:10.323" level="DEBUG">Clicked element: '//input[@id='ssn']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:10.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.263" endtime="20230815 08:26:10.323"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>20s</arg>
<arg>2s</arg>
<arg>Type Text</arg>
<arg>//input[@id='ssn']</arg>
<arg>suke6545</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20230815 08:26:10.323" level="TRACE">Arguments: [ '20s' | '2s' | 'Type Text' | "//input[@id='ssn']" | 'suke6545' ]</msg>
<kw name="Type Text" library="Browser">
<arg>//input[@id='ssn']</arg>
<arg>suke6545</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Types the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:10.323" level="TRACE">Arguments: [ "//input[@id='ssn']" | 'suke6545' ]</msg>
<msg timestamp="20230815 08:26:10.323" level="INFO">Types the text 'suke6545' in the given field.</msg>
<msg timestamp="20230815 08:26:10.404" level="DEBUG">Typed text "suke6545" on "//input[@id='ssn']"</msg>
<msg timestamp="20230815 08:26:10.404" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.323" endtime="20230815 08:26:10.404"/>
</kw>
<msg timestamp="20230815 08:26:10.404" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.323" endtime="20230815 08:26:10.404"/>
</kw>
<msg timestamp="20230815 08:26:10.404" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.263" endtime="20230815 08:26:10.404"/>
</kw>
<kw name="Verify msg &quot;Please check! This is not a Finnish social security number&quot;" library="booking">
<msg timestamp="20230815 08:26:10.405" level="TRACE">Arguments: [  ]</msg>
<kw name="Verify Element Presence" library="booking">
<arg>//div[text()='Please check! This is not a Finnish social security number' and @disabled]</arg>
<arg>${False}</arg>
<msg timestamp="20230815 08:26:10.405" level="TRACE">Arguments: [ ${path}="//div[text()='Please check! This is not a Finnish social security number' and @disabled]" | ${shown}=False ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:10.405" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:10.405" level="TRACE">Arguments: [ "//div[text()='Please check! This is not a Finnish social security number' and @disabled]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:16.479" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-15.png</msg>
<msg timestamp="20230815 08:26:16.479" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-15.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-15.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:26:16.479" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:26:16.479" level="FAIL">TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Please check! This is not a Finnish social security number\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:26:16.480" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 140, in _wait_for_elements_state
    response = stub.WaitForElementsState(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Please check! This is not a Finnish social security number\' and @disabled]') to be visible
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"TimeoutError: locator.waitFor: Timeout 6000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'xpath=//div[text()=\\\'Please check! This is not a Finnish social security number\\\' and @disabled]\') to be visible\n============================================================", grpc_status:4, created_time:"2023-08-15T08:26:16.408713+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 102, in wait_for_elements_state
    return self._wait_for_elements_state(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/waiter.py", line 145, in _wait_for_elements_state
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.waitFor: Timeout 6000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//div[text()=\'Please check! This is not a Finnish social security number\' and @disabled]') to be visible
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:26:10.405" endtime="20230815 08:26:16.480"/>
</kw>
<msg timestamp="20230815 08:26:16.480" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:16.480" level="INFO">${check} = False</msg>
<status status="PASS" starttime="20230815 08:26:10.405" endtime="20230815 08:26:16.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:16.480" level="TRACE">Arguments: [ "//div[text()='Please check! This is not a Finnish social security number' and @disabled]" ]</msg>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.480" endtime="20230815 08:26:16.481"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Arguments: [ 'False == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.481" endtime="20230815 08:26:16.481"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Arguments: [ 'False == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${False}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Arguments: [ 'False==False' ]</msg>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.481" endtime="20230815 08:26:16.481"/>
</kw>
<msg timestamp="20230815 08:26:16.481" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.481" endtime="20230815 08:26:16.481"/>
</kw>
<msg timestamp="20230815 08:26:16.482" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.405" endtime="20230815 08:26:16.482"/>
</kw>
<msg timestamp="20230815 08:26:16.482" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:10.405" endtime="20230815 08:26:16.482"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:26:16.482" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:16.773" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:26:16.773" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.482" endtime="20230815 08:26:16.773"/>
</kw>
<status status="PASS" starttime="20230815 08:25:13.169" endtime="20230815 08:26:16.773"/>
</test>
<test id="s1-s1-s1-s1-s2-t4" name="Showing imported passport when the National is not Finland" line="63">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:26:16.775" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:26:16.775" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:26:16.775" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:16.775" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/5968a091-6cea-47b4-9295-6c3acd9fa9b2"}</msg>
<msg timestamp="20230815 08:26:17.212" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/5968a091-6cea-47b4-9295-6c3acd9fa9b2"}</msg>
<msg timestamp="20230815 08:26:17.212" level="TRACE">Return: 'browser=5c7d4170-ae97-4311-890f-834dee8749dc'</msg>
<status status="PASS" starttime="20230815 08:26:16.775" endtime="20230815 08:26:17.212"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:17.212" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:17.212" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:17.212" endtime="20230815 08:26:17.212"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:26:17.213" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:17.213" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:26:17.225" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:26:17.225" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:26:17.225" level="TRACE">Return: 'context=b5336c2b-fc60-49cc-8e88-98679e2739e3'</msg>
<status status="PASS" starttime="20230815 08:26:17.213" endtime="20230815 08:26:17.225"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:26:17.226" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:26:19.148" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:26:19.148" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:26:19.148" level="TRACE">Return: {'page_id': 'page=492d355d-642f-4b61-8197-3e17aced6604', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:26:17.225" endtime="20230815 08:26:19.148"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:26:19.149" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:19.149" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:19.150" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:26:19.150" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:26:19.150" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:26:19.149" endtime="20230815 08:26:19.150"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:26:19.150" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:26:19.150" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:26:19.151" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:26:19.150" endtime="20230815 08:26:19.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:26:19.151" endtime="20230815 08:26:19.151"/>
</kw>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.149" endtime="20230815 08:26:19.151"/>
</kw>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.775" endtime="20230815 08:26:19.151"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:26:19.151" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:19.152" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:26:19.153" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:26:19.153" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:19.151" endtime="20230815 08:26:19.153"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:26:19.153" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:26:19.253" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:26:19.253" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:26:19.253" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:26:19.253" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:26:19.153" endtime="20230815 08:26:19.253"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:26:19.253" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20230815 08:26:19.254" level="INFO">Length is 1</msg>
<msg timestamp="20230815 08:26:19.254" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:26:19.254" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230815 08:26:19.253" endtime="20230815 08:26:19.254"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:19.254" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20230815 08:26:19.254" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:26:19.254" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</kw>
<status status="PASS" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</branch>
<status status="PASS" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</if>
<status status="PASS" starttime="20230815 08:26:19.153" endtime="20230815 08:26:19.254"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.254"/>
</branch>
<status status="PASS" starttime="20230815 08:26:19.153" endtime="20230815 08:26:19.254"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:19.255" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:19.256" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:26:19.256" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:19.254" endtime="20230815 08:26:19.256"/>
</kw>
<msg timestamp="20230815 08:26:19.256" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:26:19.256" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230815 08:26:19.151" endtime="20230815 08:26:19.256"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:19.256" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:26:19.256" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:19.320" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:19.320" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.256" endtime="20230815 08:26:19.320"/>
</kw>
<status status="PASS" starttime="20230815 08:26:19.256" endtime="20230815 08:26:19.320"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:26:19.321" endtime="20230815 08:26:19.321"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:19.320" endtime="20230815 08:26:19.321"/>
</branch>
<status status="PASS" starttime="20230815 08:26:19.256" endtime="20230815 08:26:19.321"/>
</if>
<msg timestamp="20230815 08:26:19.321" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.151" endtime="20230815 08:26:19.321"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:26:19.321" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:19.321" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:19.322" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:26:19.322" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:26:19.322" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:26:19.321" endtime="20230815 08:26:19.322"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:26:19.322" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:26:19.322" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:26:19.322" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:26:19.322" endtime="20230815 08:26:19.322"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:19.322" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:26:19.322" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:26:19.322" endtime="20230815 08:26:19.322"/>
</kw>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.321" endtime="20230815 08:26:19.323"/>
</kw>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:16.775" endtime="20230815 08:26:19.323"/>
</kw>
<kw name="Select Hotel" library="booking">
<arg>Helsinki, Lönnrotinkatu</arg>
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Arguments: [ ${hotel}='Helsinki, Lönnrotinkatu' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.323"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.323"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Arguments: [ 'Selecting Hotel: Helsinki, Lönnrotinkatu' ]</msg>
<msg timestamp="20230815 08:26:19.323" level="INFO">Selecting Hotel: Helsinki, Lönnrotinkatu</msg>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.323"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:19.323" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:26:19.324" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:19.388" level="DEBUG">Clicked element: '//div[contains(@data-nelson-btn, "hotels")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:19.388" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.388"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:19.388" level="TRACE">Arguments: [ ${element}="//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:19.389" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:19.391" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state visible</msg>
<msg timestamp="20230815 08:26:19.391" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.389" endtime="20230815 08:26:19.391"/>
</kw>
<msg timestamp="20230815 08:26:19.392" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.388" endtime="20230815 08:26:19.392"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:19.392" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" ]</msg>
<msg timestamp="20230815 08:26:19.392" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:19.663" level="DEBUG">Clicked element: '//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:19.663" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.392" endtime="20230815 08:26:19.663"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:19.664" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')]" | &lt;ElementState.hidden: 8&gt; | timeout=datetime.timedelta(seconds=3) ]</msg>
<msg timestamp="20230815 08:26:19.667" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Helsinki, Lönnrotinkatu')] at state hidden</msg>
<msg timestamp="20230815 08:26:19.667" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.663" endtime="20230815 08:26:19.667"/>
</kw>
<status status="PASS" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.667"/>
</branch>
<status status="PASS" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.667"/>
</if>
<msg timestamp="20230815 08:26:19.667" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.323" endtime="20230815 08:26:19.667"/>
</kw>
<kw name="Select Dates" library="booking">
<msg timestamp="20230815 08:26:19.667" level="TRACE">Arguments: [  ]</msg>
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:26:19.668" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:26:19.668" level="INFO"/>
<msg timestamp="20230815 08:26:19.668" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.667" endtime="20230815 08:26:19.668"/>
</kw>
<msg timestamp="20230815 08:26:19.668" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.667" endtime="20230815 08:26:19.668"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<msg timestamp="20230815 08:26:19.668" level="TRACE">Arguments: [ ${rooms}='1' | ${persons}='1' | ${children}='0' ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:19.669" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:26:19.669" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.668" endtime="20230815 08:26:19.669"/>
</kw>
<msg timestamp="20230815 08:26:19.669" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.668" endtime="20230815 08:26:19.669"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20230815 08:26:19.669" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:19.669" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:19.670" level="DEBUG">https://test3.omenahotels.com/en/#</msg>
<msg timestamp="20230815 08:26:19.670" level="TRACE">Return: 'https://test3.omenahotels.com/en/#'</msg>
<msg timestamp="20230815 08:26:19.670" level="INFO">${url} = https://test3.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230815 08:26:19.669" endtime="20230815 08:26:19.670"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20230815 08:26:19.670" level="TRACE">Arguments: [ ${string}='https://test3.omenahotels.com/en/#' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230815 08:26:19.671" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/#' | '/booking/' ]</msg>
<msg timestamp="20230815 08:26:19.671" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:19.671" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230815 08:26:19.670" endtime="20230815 08:26:19.671"/>
</kw>
<msg timestamp="20230815 08:26:19.671" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:19.671" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230815 08:26:19.670" endtime="20230815 08:26:19.671"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:26:19.671" endtime="20230815 08:26:19.671"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:19.671" endtime="20230815 08:26:19.671"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:19.671" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20230815 08:26:19.671" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:20.025" level="DEBUG">Clicked element: '//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:20.025" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.671" endtime="20230815 08:26:20.025"/>
</kw>
<status status="PASS" starttime="20230815 08:26:19.671" endtime="20230815 08:26:20.025"/>
</branch>
<status status="PASS" starttime="20230815 08:26:19.671" endtime="20230815 08:26:20.025"/>
</if>
<msg timestamp="20230815 08:26:20.025" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:19.669" endtime="20230815 08:26:20.025"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20230815 08:26:20.026" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:20.026" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:20.026" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:21.399" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20230815 08:26:21.399" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:20.026" endtime="20230815 08:26:21.399"/>
</kw>
<msg timestamp="20230815 08:26:21.400" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:20.026" endtime="20230815 08:26:21.400"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:21.400" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:26:21.650" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:26:21.651" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.25052332878112793 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:26:21.651" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:21.651" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:26:21.400" endtime="20230815 08:26:21.651"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:21.651" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20230815 08:26:21.651" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:21.651" endtime="20230815 08:26:21.651"/>
</kw>
<msg timestamp="20230815 08:26:21.651" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:20.025" endtime="20230815 08:26:21.651"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:26:21.652" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:21.652" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:26:21.652" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:23.891" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:23.891" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:21.652" endtime="20230815 08:26:23.891"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:23.892" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:23.892" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:24.685" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20230815 08:26:24.686" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:23.892" endtime="20230815 08:26:24.686"/>
</kw>
<msg timestamp="20230815 08:26:24.686" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:23.892" endtime="20230815 08:26:24.686"/>
</kw>
<msg timestamp="20230815 08:26:24.686" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:21.651" endtime="20230815 08:26:24.686"/>
</kw>
<kw name="Click Continue to Payment" library="booking">
<msg timestamp="20230815 08:26:24.687" level="TRACE">Arguments: [  ]</msg>
<kw name="Click First Element Found" library="common">
<arg>//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']</arg>
<msg timestamp="20230815 08:26:24.687" level="TRACE">Arguments: [ ${xpath}="//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']" ]</msg>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>${xpath}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:26:24.687" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment']" ]</msg>
<msg timestamp="20230815 08:26:24.693" level="INFO">Found Locator@//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:26:24.694" level="DEBUG">["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:26:24.694" level="TRACE">Return: ["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:26:24.694" level="INFO">${elements} = ["//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"]</msg>
<status status="PASS" starttime="20230815 08:26:24.687" endtime="20230815 08:26:24.694"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_element}</var>
<arg>${elements}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:24.695" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0" ]</msg>
<msg timestamp="20230815 08:26:24.695" level="TRACE">Return: "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0"</msg>
<msg timestamp="20230815 08:26:24.695" level="INFO">${first_element} = //div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0</msg>
<status status="PASS" starttime="20230815 08:26:24.694" endtime="20230815 08:26:24.695"/>
</kw>
<kw name="Click" library="Browser">
<arg>${first_element}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:24.696" level="TRACE">Arguments: [ "//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0" ]</msg>
<msg timestamp="20230815 08:26:24.697" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:24.745" level="DEBUG">Clicked element: '//div[@class='css-1t415z1']//button[@type='button'][normalize-space()='Continue to payment'] &gt;&gt; nth=0' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:24.745" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.696" endtime="20230815 08:26:24.745"/>
</kw>
<msg timestamp="20230815 08:26:24.745" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.687" endtime="20230815 08:26:24.745"/>
</kw>
<msg timestamp="20230815 08:26:24.745" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.687" endtime="20230815 08:26:24.745"/>
</kw>
<kw name="Check Regular Rate 2" library="booking">
<msg timestamp="20230815 08:26:24.746" level="TRACE">Arguments: [  ]</msg>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:26:24.746" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:24.746" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:26:24.746" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:25.668" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:25.668" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.746" endtime="20230815 08:26:25.668"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:25.669" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:25.669" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:25.673" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:26:25.673" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.669" endtime="20230815 08:26:25.673"/>
</kw>
<msg timestamp="20230815 08:26:25.673" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.668" endtime="20230815 08:26:25.673"/>
</kw>
<msg timestamp="20230815 08:26:25.674" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.746" endtime="20230815 08:26:25.674"/>
</kw>
<kw name="Check Join as Member" library="booking">
<msg timestamp="20230815 08:26:25.674" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:25.674" level="TRACE">Arguments: [ "//p[contains(text(),'Join for free and')]" ]</msg>
<msg timestamp="20230815 08:26:25.674" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:25.766" level="DEBUG">Clicked element: '//p[contains(text(),'Join for free and')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:25.767" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.674" endtime="20230815 08:26:25.767"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:25.767" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:25.767" level="TRACE">Arguments: [ "//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:25.819" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:26:25.819" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.767" endtime="20230815 08:26:25.819"/>
</kw>
<msg timestamp="20230815 08:26:25.819" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.767" endtime="20230815 08:26:25.819"/>
</kw>
<msg timestamp="20230815 08:26:25.819" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.674" endtime="20230815 08:26:25.819"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:26:25.820" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:25.820" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:26:25.820" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:25.925" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:25.926" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.820" endtime="20230815 08:26:25.926"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:25.926" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:25.926" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:25.930" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:26:25.931" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.926" endtime="20230815 08:26:25.931"/>
</kw>
<msg timestamp="20230815 08:26:25.931" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.926" endtime="20230815 08:26:25.931"/>
</kw>
<msg timestamp="20230815 08:26:25.931" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.820" endtime="20230815 08:26:25.931"/>
</kw>
<kw name="Check Join as Member" library="booking">
<msg timestamp="20230815 08:26:25.931" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Join for free and')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:25.931" level="TRACE">Arguments: [ "//p[contains(text(),'Join for free and')]" ]</msg>
<msg timestamp="20230815 08:26:25.931" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:25.999" level="DEBUG">Clicked element: '//p[contains(text(),'Join for free and')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:25.999" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.931" endtime="20230815 08:26:25.999"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:25.999" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:26.000" level="TRACE">Arguments: [ "//div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:26.004" level="INFO">Waited for Element with selector //div//*[normalize-space()='Join for free and get the member rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:26:26.004" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.999" endtime="20230815 08:26:26.004"/>
</kw>
<msg timestamp="20230815 08:26:26.004" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.999" endtime="20230815 08:26:26.004"/>
</kw>
<msg timestamp="20230815 08:26:26.004" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:25.931" endtime="20230815 08:26:26.004"/>
</kw>
<kw name="Check Regular Rate" library="booking">
<msg timestamp="20230815 08:26:26.004" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//p[contains(text(),'Continue with regular rate')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.004" level="TRACE">Arguments: [ "//p[contains(text(),'Continue with regular rate')]" ]</msg>
<msg timestamp="20230815 08:26:26.005" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.082" level="DEBUG">Clicked element: '//p[contains(text(),'Continue with regular rate')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.082" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.004" endtime="20230815 08:26:26.082"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:26.082" level="TRACE">Arguments: [ ${element}="//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:26.082" level="TRACE">Arguments: [ "//div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:26.087" level="INFO">Waited for Element with selector //div//*[normalize-space()='Continue with regular rate']/following-sibling::div[@data-checked] at state visible</msg>
<msg timestamp="20230815 08:26:26.087" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.082" endtime="20230815 08:26:26.087"/>
</kw>
<msg timestamp="20230815 08:26:26.087" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.082" endtime="20230815 08:26:26.087"/>
</kw>
<msg timestamp="20230815 08:26:26.087" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.004" endtime="20230815 08:26:26.087"/>
</kw>
<msg timestamp="20230815 08:26:26.087" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:24.746" endtime="20230815 08:26:26.087"/>
</kw>
<kw name="Fill contact info with the National not Finland" library="booking">
<doc>TBD: Use test data instead of hardcoded values</doc>
<msg timestamp="20230815 08:26:26.087" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='915036410' | ${ssn}='170479-371J' | ${env}='bui' | ${email}='bichngoc9995@gmail.com' ]</msg>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:26.088" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.088" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:26:26.088" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.134" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.134" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.088" endtime="20230815 08:26:26.134"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.134" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:26:26.134" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:26:26.153" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:26:26.153" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.134" endtime="20230815 08:26:26.153"/>
</kw>
<msg timestamp="20230815 08:26:26.153" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.087" endtime="20230815 08:26:26.153"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:26.154" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.154" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20230815 08:26:26.154" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.281" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.281" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.154" endtime="20230815 08:26:26.281"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.282" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:26:26.282" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:26:26.303" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:26:26.303" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.281" endtime="20230815 08:26:26.303"/>
</kw>
<msg timestamp="20230815 08:26:26.303" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.154" endtime="20230815 08:26:26.303"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${email}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:26.303" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='bichngoc9995@gmail.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.303" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:26:26.304" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.382" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.382" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.303" endtime="20230815 08:26:26.382"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.382" level="TRACE">Arguments: [ 'id=email' | 'bichngoc9995@gmail.com' ]</msg>
<msg timestamp="20230815 08:26:26.382" level="INFO">Fills the text 'bichngoc9995@gmail.com' in the given field.</msg>
<msg timestamp="20230815 08:26:26.404" level="DEBUG">Fill text bichngoc9995@gmail.com on id=email with force: false</msg>
<msg timestamp="20230815 08:26:26.404" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.382" endtime="20230815 08:26:26.404"/>
</kw>
<msg timestamp="20230815 08:26:26.404" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.303" endtime="20230815 08:26:26.404"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(@id,'popover-trigger-')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.404" level="TRACE">Arguments: [ "//button[contains(@id,'popover-trigger-')]" ]</msg>
<msg timestamp="20230815 08:26:26.404" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.595" level="DEBUG">Clicked element: '//button[contains(@id,'popover-trigger-')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.595" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.404" endtime="20230815 08:26:26.595"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=[object Object]FR</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.595" level="TRACE">Arguments: [ 'id=[object Object]FR' ]</msg>
<msg timestamp="20230815 08:26:26.596" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.861" level="DEBUG">Clicked element: 'id=[object Object]FR' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.861" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.595" endtime="20230815 08:26:26.861"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:26.862" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='915036410' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.862" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20230815 08:26:26.862" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:26.936" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:26.936" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.862" endtime="20230815 08:26:26.936"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.937" level="TRACE">Arguments: [ 'id=phoneNumber' | '915036410' ]</msg>
<msg timestamp="20230815 08:26:26.937" level="INFO">Fills the text '915036410' in the given field.</msg>
<msg timestamp="20230815 08:26:26.945" level="DEBUG">Fill text 915036410 on id=phoneNumber with force: false</msg>
<msg timestamp="20230815 08:26:26.945" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.936" endtime="20230815 08:26:26.946"/>
</kw>
<msg timestamp="20230815 08:26:26.946" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.862" endtime="20230815 08:26:26.946"/>
</kw>
<msg timestamp="20230815 08:26:26.946" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.087" endtime="20230815 08:26:26.946"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20230815 08:26:26.946" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:26.946" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20230815 08:26:26.946" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:27.033" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:27.033" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.946" endtime="20230815 08:26:27.033"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:27.033" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20230815 08:26:27.034" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:27.107" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:27.107" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.033" endtime="20230815 08:26:27.107"/>
</kw>
<msg timestamp="20230815 08:26:27.107" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:26.946" endtime="20230815 08:26:27.107"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20230815 08:26:27.108" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:27.108" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20230815 08:26:27.108" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:27.173" level="DEBUG">Clicked element: '//div[contains(text(), "Web bank payment")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:27.174" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.108" endtime="20230815 08:26:27.174"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:27.174" level="TRACE">Arguments: [ "//p[contains(text(), 'Nordea')]" ]</msg>
<msg timestamp="20230815 08:26:27.174" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:27.252" level="DEBUG">Clicked element: '//p[contains(text(), 'Nordea')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:27.252" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.174" endtime="20230815 08:26:27.252"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:27.253" level="TRACE">Arguments: [ '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' ]</msg>
<msg timestamp="20230815 08:26:27.253" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:27.328" level="DEBUG">Clicked element: '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:27.328" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.252" endtime="20230815 08:26:27.328"/>
</kw>
<msg timestamp="20230815 08:26:27.329" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.108" endtime="20230815 08:26:27.329"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<msg timestamp="20230815 08:26:27.329" level="TRACE">Arguments: [  ]</msg>
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<msg timestamp="20230815 08:26:27.329" level="TRACE">Arguments: [ ${which}='success' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:27.329" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:32.216" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<msg timestamp="20230815 08:26:32.217" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.329" endtime="20230815 08:26:32.217"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:32.217" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" ]</msg>
<msg timestamp="20230815 08:26:32.218" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:38.222" level="DEBUG">Clicked element: '//a[contains(text(), 'Simulate success to merchant')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:38.222" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:32.217" endtime="20230815 08:26:38.222"/>
</kw>
<msg timestamp="20230815 08:26:38.223" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.329" endtime="20230815 08:26:38.223"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<msg timestamp="20230815 08:26:38.223" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:38.224" level="TRACE">Arguments: [ ${element}="//p[contains(text(), 'Payment was successful')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:38.225" level="TRACE">Arguments: [ "//p[contains(text(), 'Payment was successful')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:41.084" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<msg timestamp="20230815 08:26:41.084" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:38.224" endtime="20230815 08:26:41.084"/>
</kw>
<msg timestamp="20230815 08:26:41.085" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:38.223" endtime="20230815 08:26:41.085"/>
</kw>
<kw name="Close Dialog" library="booking">
<msg timestamp="20230815 08:26:41.085" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:41.085" level="TRACE">Arguments: [ ${element}='//button[contains(text(), "Ok")]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:41.085" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:41.088" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<msg timestamp="20230815 08:26:41.088" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.085" endtime="20230815 08:26:41.088"/>
</kw>
<msg timestamp="20230815 08:26:41.088" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.085" endtime="20230815 08:26:41.088"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:41.088" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' ]</msg>
<msg timestamp="20230815 08:26:41.089" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:41.141" level="DEBUG">Clicked element: '//button[contains(text(), "Ok")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:41.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.088" endtime="20230815 08:26:41.141"/>
</kw>
<msg timestamp="20230815 08:26:41.142" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.085" endtime="20230815 08:26:41.142"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<msg timestamp="20230815 08:26:41.142" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:41.142" level="TRACE">Arguments: [ "//p[contains(text(),'Booking number')]" ]</msg>
<msg timestamp="20230815 08:26:41.157" level="DEBUG">Text received successfully.</msg>
<msg timestamp="20230815 08:26:41.157" level="INFO">Text: 'Booking number: 250073091'</msg>
<msg timestamp="20230815 08:26:41.157" level="TRACE">Return: 'Booking number: 250073091'</msg>
<msg timestamp="20230815 08:26:41.157" level="INFO">${str} = Booking number: 250073091</msg>
<status status="PASS" starttime="20230815 08:26:41.142" endtime="20230815 08:26:41.157"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:41.157" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:26:41.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.157" endtime="20230815 08:26:41.157"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Arguments: [ 'Booking number: 250073091' | 'Booking code ' ]</msg>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Return: 'Booking number: 250073091'</msg>
<msg timestamp="20230815 08:26:41.158" level="INFO">${str} = Booking number: 250073091</msg>
<status status="PASS" starttime="20230815 08:26:41.157" endtime="20230815 08:26:41.158"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Arguments: [ 'Booking number: 250073091' ]</msg>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Return: 'Booking number: 250073091'</msg>
<msg timestamp="20230815 08:26:41.158" level="INFO">${str} = Booking number: 250073091</msg>
<status status="PASS" starttime="20230815 08:26:41.158" endtime="20230815 08:26:41.158"/>
</kw>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.142" endtime="20230815 08:26:41.158"/>
</kw>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:38.223" endtime="20230815 08:26:41.158"/>
</kw>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:27.329" endtime="20230815 08:26:41.158"/>
</kw>
<kw name="Click Check In Button" library="booking">
<msg timestamp="20230815 08:26:41.158" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>(//button[text()="Check in"])[1]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:41.158" level="TRACE">Arguments: [ ${element}='(//button[text()="Check in"])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:41.159" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:41.161" level="INFO">Waited for Element with selector (//button[text()="Check in"])[1] at state visible</msg>
<msg timestamp="20230815 08:26:41.161" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.159" endtime="20230815 08:26:41.161"/>
</kw>
<msg timestamp="20230815 08:26:41.161" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.158" endtime="20230815 08:26:41.161"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()="Check in"])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:41.161" level="TRACE">Arguments: [ '(//button[text()="Check in"])[1]' ]</msg>
<msg timestamp="20230815 08:26:41.161" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:41.307" level="DEBUG">Clicked element: '(//button[text()="Check in"])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:41.308" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.161" endtime="20230815 08:26:41.308"/>
</kw>
<msg timestamp="20230815 08:26:41.308" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.158" endtime="20230815 08:26:41.308"/>
</kw>
<kw name="Fill Booker Info with the national is not Finland" library="booking">
<msg timestamp="20230815 08:26:41.308" level="TRACE">Arguments: [  ]</msg>
<kw name="Click and Fill" library="common">
<arg>id=passportNumber</arg>
<arg>A42354623546235</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:41.308" level="TRACE">Arguments: [ ${selector}='id=passportNumber' | ${text}='A42354623546235' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:41.308" level="TRACE">Arguments: [ 'id=passportNumber' ]</msg>
<msg timestamp="20230815 08:26:41.309" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.156" level="DEBUG">Clicked element: 'id=passportNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.308" endtime="20230815 08:26:42.157"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.157" level="TRACE">Arguments: [ 'id=passportNumber' | 'A42354623546235' ]</msg>
<msg timestamp="20230815 08:26:42.157" level="INFO">Fills the text 'A42354623546235' in the given field.</msg>
<msg timestamp="20230815 08:26:42.177" level="DEBUG">Fill text A42354623546235 on id=passportNumber with force: false</msg>
<msg timestamp="20230815 08:26:42.177" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.157" endtime="20230815 08:26:42.177"/>
</kw>
<msg timestamp="20230815 08:26:42.177" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.308" endtime="20230815 08:26:42.177"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=city</arg>
<arg>${city}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:42.178" level="TRACE">Arguments: [ ${selector}='id=city' | ${text}='Ho Chi Minh City' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.178" level="TRACE">Arguments: [ 'id=city' ]</msg>
<msg timestamp="20230815 08:26:42.179" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.264" level="DEBUG">Clicked element: 'id=city' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.264" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.178" endtime="20230815 08:26:42.264"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.264" level="TRACE">Arguments: [ 'id=city' | 'Ho Chi Minh City' ]</msg>
<msg timestamp="20230815 08:26:42.264" level="INFO">Fills the text 'Ho Chi Minh City' in the given field.</msg>
<msg timestamp="20230815 08:26:42.274" level="DEBUG">Fill text Ho Chi Minh City on id=city with force: false</msg>
<msg timestamp="20230815 08:26:42.274" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.264" endtime="20230815 08:26:42.274"/>
</kw>
<msg timestamp="20230815 08:26:42.274" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.178" endtime="20230815 08:26:42.274"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=address</arg>
<arg>${address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:42.275" level="TRACE">Arguments: [ ${selector}='id=address' | ${text}='Address 123' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.275" level="TRACE">Arguments: [ 'id=address' ]</msg>
<msg timestamp="20230815 08:26:42.275" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.341" level="DEBUG">Clicked element: 'id=address' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.341" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.275" endtime="20230815 08:26:42.341"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.342" level="TRACE">Arguments: [ 'id=address' | 'Address 123' ]</msg>
<msg timestamp="20230815 08:26:42.342" level="INFO">Fills the text 'Address 123' in the given field.</msg>
<msg timestamp="20230815 08:26:42.354" level="DEBUG">Fill text Address 123 on id=address with force: false</msg>
<msg timestamp="20230815 08:26:42.354" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.341" endtime="20230815 08:26:42.354"/>
</kw>
<msg timestamp="20230815 08:26:42.354" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.275" endtime="20230815 08:26:42.354"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=postalCode</arg>
<arg>${postalCode}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:42.355" level="TRACE">Arguments: [ ${selector}='id=postalCode' | ${text}='00700' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.355" level="TRACE">Arguments: [ 'id=postalCode' ]</msg>
<msg timestamp="20230815 08:26:42.355" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.423" level="DEBUG">Clicked element: 'id=postalCode' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.423" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.355" endtime="20230815 08:26:42.423"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.424" level="TRACE">Arguments: [ 'id=postalCode' | '00700' ]</msg>
<msg timestamp="20230815 08:26:42.424" level="INFO">Fills the text '00700' in the given field.</msg>
<msg timestamp="20230815 08:26:42.435" level="DEBUG">Fill text 00700 on id=postalCode with force: false</msg>
<msg timestamp="20230815 08:26:42.435" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.424" endtime="20230815 08:26:42.435"/>
</kw>
<msg timestamp="20230815 08:26:42.435" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.354" endtime="20230815 08:26:42.435"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and Sign']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.435" level="TRACE">Arguments: [ "//button[normalize-space()='Save and Sign']" ]</msg>
<msg timestamp="20230815 08:26:42.436" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.517" level="DEBUG">Clicked element: '//button[normalize-space()='Save and Sign']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.517" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.435" endtime="20230815 08:26:42.517"/>
</kw>
<msg timestamp="20230815 08:26:42.517" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:41.308" endtime="20230815 08:26:42.518"/>
</kw>
<kw name="Click Save and Sign Button" library="booking">
<msg timestamp="20230815 08:26:42.518" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//button[normalize-space()='Save and Sign']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:42.518" level="TRACE">Arguments: [ "//button[normalize-space()='Save and Sign']" ]</msg>
<msg timestamp="20230815 08:26:42.519" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:42.564" level="DEBUG">Clicked element: '//button[normalize-space()='Save and Sign']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:42.564" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.518" endtime="20230815 08:26:42.564"/>
</kw>
<msg timestamp="20230815 08:26:42.564" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.518" endtime="20230815 08:26:42.564"/>
</kw>
<kw name="Verify booker information with national" library="booking">
<msg timestamp="20230815 08:26:42.565" level="TRACE">Arguments: [  ]</msg>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='passportNumber']</arg>
<arg>${True}</arg>
<msg timestamp="20230815 08:26:42.565" level="TRACE">Arguments: [ ${path}="//input[@id='passportNumber']" | ${shown}=True ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:42.565" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:42.565" level="TRACE">Arguments: [ "//input[@id='passportNumber']" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:42.568" level="INFO">Waited for Element with selector //input[@id='passportNumber'] at state visible</msg>
<msg timestamp="20230815 08:26:42.568" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.565" endtime="20230815 08:26:42.568"/>
</kw>
<msg timestamp="20230815 08:26:42.568" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:26:42.568" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230815 08:26:42.565" endtime="20230815 08:26:42.568"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:42.568" level="TRACE">Arguments: [ "//input[@id='passportNumber']" ]</msg>
<msg timestamp="20230815 08:26:42.568" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.568" endtime="20230815 08:26:42.568"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Arguments: [ 'True == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Arguments: [ 'True==True' ]</msg>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.569" endtime="20230815 08:26:42.569"/>
</kw>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.569" endtime="20230815 08:26:42.569"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Arguments: [ 'True == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.569" endtime="20230815 08:26:42.569"/>
</kw>
<msg timestamp="20230815 08:26:42.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.565" endtime="20230815 08:26:42.569"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='city']</arg>
<arg>${True}</arg>
<msg timestamp="20230815 08:26:42.570" level="TRACE">Arguments: [ ${path}="//input[@id='city']" | ${shown}=True ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:42.570" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:42.570" level="TRACE">Arguments: [ "//input[@id='city']" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:42.573" level="INFO">Waited for Element with selector //input[@id='city'] at state visible</msg>
<msg timestamp="20230815 08:26:42.573" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.570" endtime="20230815 08:26:42.573"/>
</kw>
<msg timestamp="20230815 08:26:42.573" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:26:42.573" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230815 08:26:42.570" endtime="20230815 08:26:42.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:42.573" level="TRACE">Arguments: [ "//input[@id='city']" ]</msg>
<msg timestamp="20230815 08:26:42.573" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.573" endtime="20230815 08:26:42.573"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.573" level="TRACE">Arguments: [ 'True == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Arguments: [ 'True==True' ]</msg>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.573" endtime="20230815 08:26:42.574"/>
</kw>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.573" endtime="20230815 08:26:42.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Arguments: [ 'True == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.574" endtime="20230815 08:26:42.574"/>
</kw>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.569" endtime="20230815 08:26:42.574"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='address']</arg>
<arg>${True}</arg>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Arguments: [ ${path}="//input[@id='address']" | ${shown}=True ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:42.574" level="TRACE">Arguments: [ "//input[@id='address']" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:42.578" level="INFO">Waited for Element with selector //input[@id='address'] at state visible</msg>
<msg timestamp="20230815 08:26:42.578" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.574" endtime="20230815 08:26:42.578"/>
</kw>
<msg timestamp="20230815 08:26:42.578" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:26:42.578" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230815 08:26:42.574" endtime="20230815 08:26:42.578"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:42.578" level="TRACE">Arguments: [ "//input[@id='address']" ]</msg>
<msg timestamp="20230815 08:26:42.578" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.578" endtime="20230815 08:26:42.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.578" level="TRACE">Arguments: [ 'True == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Arguments: [ 'True==True' ]</msg>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.578" endtime="20230815 08:26:42.579"/>
</kw>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.578" endtime="20230815 08:26:42.579"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Arguments: [ 'True == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.579" endtime="20230815 08:26:42.579"/>
</kw>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.574" endtime="20230815 08:26:42.579"/>
</kw>
<kw name="Verify Element Presence" library="booking">
<arg>//input[@id='postalCode']</arg>
<arg>${True}</arg>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Arguments: [ ${path}="//input[@id='postalCode']" | ${shown}=True ]</msg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${check}</var>
<arg>Wait For Elements State</arg>
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:26:42.579" level="TRACE">Arguments: [ 'Wait For Elements State' | '${path}' | 'visible' | 'timeout=6' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${path}</arg>
<arg>visible</arg>
<arg>timeout=6</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:42.580" level="TRACE">Arguments: [ "//input[@id='postalCode']" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=6) ]</msg>
<msg timestamp="20230815 08:26:42.581" level="INFO">Waited for Element with selector //input[@id='postalCode'] at state visible</msg>
<msg timestamp="20230815 08:26:42.581" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.579" endtime="20230815 08:26:42.582"/>
</kw>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:26:42.582" level="INFO">${check} = True</msg>
<status status="PASS" starttime="20230815 08:26:42.579" endtime="20230815 08:26:42.582"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${path}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Arguments: [ "//input[@id='postalCode']" ]</msg>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.582" endtime="20230815 08:26:42.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${true}</arg>
<arg>Should Be True</arg>
<arg>${check}==${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Arguments: [ 'True == True' | 'Should Be True' | '${check}==${True}' ]</msg>
<kw name="Should Be True" library="BuiltIn">
<arg>${check}==${True}</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Arguments: [ 'True==True' ]</msg>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.582" endtime="20230815 08:26:42.582"/>
</kw>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.582" endtime="20230815 08:26:42.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${shown} == ${false}</arg>
<arg>Should Be True</arg>
<arg>${check}==${False}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Arguments: [ 'True == False' | 'Should Be True' | '${check}==${False}' ]</msg>
<msg timestamp="20230815 08:26:42.582" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.582" endtime="20230815 08:26:42.582"/>
</kw>
<msg timestamp="20230815 08:26:42.583" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.579" endtime="20230815 08:26:42.583"/>
</kw>
<msg timestamp="20230815 08:26:42.583" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.564" endtime="20230815 08:26:42.583"/>
</kw>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:26:42.584" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:42.893" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:26:42.893" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.583" endtime="20230815 08:26:42.893"/>
</kw>
<status status="PASS" starttime="20230815 08:26:16.774" endtime="20230815 08:26:42.893"/>
</test>
<status status="FAIL" starttime="20230815 08:21:57.878" endtime="20230815 08:26:42.894"/>
</suite>
<status status="FAIL" starttime="20230815 08:11:03.892" endtime="20230815 08:26:42.897"/>
</suite>
<status status="FAIL" starttime="20230815 08:11:03.891" endtime="20230815 08:26:42.898"/>
</suite>
<suite id="s1-s1-s2" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression">
<suite id="s1-s1-s2-s1" name="Create Booking" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/create_booking.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20230815 08:26:42.909" level="TRACE">Arguments: [  ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20230815 08:26:42.909" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:26:42.910" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:42.910" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b809de7c-1a43-42cd-9b98-068963f9537a"}</msg>
<msg timestamp="20230815 08:26:43.385" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b809de7c-1a43-42cd-9b98-068963f9537a"}</msg>
<msg timestamp="20230815 08:26:43.385" level="TRACE">Return: 'browser=1357a0cd-3299-4717-8119-ce61d1fc800d'</msg>
<status status="PASS" starttime="20230815 08:26:42.909" endtime="20230815 08:26:43.385"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:43.386" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:43.387" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:26:43.387" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:43.385" endtime="20230815 08:26:43.387"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:26:43.387" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:43.387" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:26:43.398" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:26:43.398" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:26:43.398" level="TRACE">Return: 'context=34deef5c-9512-45df-897b-fbf4278d4b1f'</msg>
<status status="PASS" starttime="20230815 08:26:43.387" endtime="20230815 08:26:43.398"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:26:43.398" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20230815 08:26:45.358" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20230815 08:26:45.358" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:26:45.358" level="TRACE">Return: {'page_id': 'page=2f78c85d-9bf2-43bb-ae46-77150a0a480f', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:26:43.398" endtime="20230815 08:26:45.358"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:26:45.359" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:45.359" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:45.361" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:26:45.361" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:26:45.362" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:26:45.359" endtime="20230815 08:26:45.362"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:26:45.362" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:26:45.362" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:26:45.362" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:26:45.362" endtime="20230815 08:26:45.362"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:45.363" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:26:45.363" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:26:45.362" endtime="20230815 08:26:45.363"/>
</kw>
<msg timestamp="20230815 08:26:45.363" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.358" endtime="20230815 08:26:45.363"/>
</kw>
<msg timestamp="20230815 08:26:45.363" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.909" endtime="20230815 08:26:45.363"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20230815 08:26:45.363" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20230815 08:26:45.364" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:45.364" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20230815 08:26:45.365" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20230815 08:26:45.365" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:45.364" endtime="20230815 08:26:45.365"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:26:45.366" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:26:45.426" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:26:45.426" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:26:45.426" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:26:45.426" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:26:45.366" endtime="20230815 08:26:45.426"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230815 08:26:45.426" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20230815 08:26:45.426" level="INFO">Length is 1</msg>
<msg timestamp="20230815 08:26:45.427" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:26:45.427" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20230815 08:26:45.426" endtime="20230815 08:26:45.427"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:45.427" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20230815 08:26:45.427" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:26:45.427" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</kw>
<status status="PASS" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</branch>
<status status="PASS" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</if>
<status status="PASS" starttime="20230815 08:26:45.366" endtime="20230815 08:26:45.427"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.427"/>
</branch>
<status status="PASS" starttime="20230815 08:26:45.366" endtime="20230815 08:26:45.427"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:26:45.428" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:45.429" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:26:45.429" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:26:45.427" endtime="20230815 08:26:45.429"/>
</kw>
<msg timestamp="20230815 08:26:45.429" level="TRACE">Return: 'True'</msg>
<msg timestamp="20230815 08:26:45.429" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20230815 08:26:45.363" endtime="20230815 08:26:45.429"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:45.429" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20230815 08:26:45.429" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:45.488" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:45.488" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.429" endtime="20230815 08:26:45.488"/>
</kw>
<status status="PASS" starttime="20230815 08:26:45.429" endtime="20230815 08:26:45.488"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:26:45.488" endtime="20230815 08:26:45.488"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:45.488" endtime="20230815 08:26:45.488"/>
</branch>
<status status="PASS" starttime="20230815 08:26:45.429" endtime="20230815 08:26:45.488"/>
</if>
<msg timestamp="20230815 08:26:45.488" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.363" endtime="20230815 08:26:45.489"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:26:45.489" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:45.489" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:45.490" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20230815 08:26:45.490" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20230815 08:26:45.489" endtime="20230815 08:26:45.490"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:26:45.490" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:26:45.490" endtime="20230815 08:26:45.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:26:45.490" endtime="20230815 08:26:45.490"/>
</kw>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.489" endtime="20230815 08:26:45.490"/>
</kw>
<msg timestamp="20230815 08:26:45.490" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:42.909" endtime="20230815 08:26:45.490"/>
</kw>
<test id="s1-s1-s2-s1-t1" name="Create A New Booking as" line="12">
<kw name="Select Hotel" library="booking">
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20230815 08:26:45.491" level="TRACE">Arguments: [ ${hotel}='Lönnrotin' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;test-exhibition&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.491"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.491"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:26:45.491" level="TRACE">Arguments: [ 'Selecting Hotel: Lönnrotin' ]</msg>
<msg timestamp="20230815 08:26:45.491" level="INFO">Selecting Hotel: Lönnrotin</msg>
<msg timestamp="20230815 08:26:45.491" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.491"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:45.491" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20230815 08:26:45.492" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:45.554" level="DEBUG">Clicked element: '//div[contains(@data-nelson-btn, "hotels")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:45.554" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.554"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:45.554" level="TRACE">Arguments: [ ${element}="//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:45.555" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:45.557" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state visible</msg>
<msg timestamp="20230815 08:26:45.557" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.555" endtime="20230815 08:26:45.557"/>
</kw>
<msg timestamp="20230815 08:26:45.557" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.554" endtime="20230815 08:26:45.557"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:45.558" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" ]</msg>
<msg timestamp="20230815 08:26:45.558" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:45.838" level="DEBUG">Clicked element: '//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:45.839" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.557" endtime="20230815 08:26:45.839"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:45.839" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" | &lt;ElementState.hidden: 8&gt; | timeout=datetime.timedelta(seconds=3) ]</msg>
<msg timestamp="20230815 08:26:45.844" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state hidden</msg>
<msg timestamp="20230815 08:26:45.844" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.839" endtime="20230815 08:26:45.844"/>
</kw>
<status status="PASS" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.844"/>
</branch>
<status status="PASS" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.844"/>
</if>
<msg timestamp="20230815 08:26:45.844" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.491" endtime="20230815 08:26:45.844"/>
</kw>
<kw name="Select Dates" library="booking">
<msg timestamp="20230815 08:26:45.844" level="TRACE">Arguments: [  ]</msg>
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230815 08:26:45.845" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:26:45.845" level="INFO"/>
<msg timestamp="20230815 08:26:45.845" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.844" endtime="20230815 08:26:45.845"/>
</kw>
<msg timestamp="20230815 08:26:45.845" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.844" endtime="20230815 08:26:45.845"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<msg timestamp="20230815 08:26:45.845" level="TRACE">Arguments: [ ${rooms}='1' | ${persons}='1' | ${children}='0' ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:45.846" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:26:45.846" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.845" endtime="20230815 08:26:45.846"/>
</kw>
<msg timestamp="20230815 08:26:45.846" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.845" endtime="20230815 08:26:45.846"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20230815 08:26:45.846" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:45.846" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:45.847" level="DEBUG">https://test3.omenahotels.com/en/#</msg>
<msg timestamp="20230815 08:26:45.847" level="TRACE">Return: 'https://test3.omenahotels.com/en/#'</msg>
<msg timestamp="20230815 08:26:45.847" level="INFO">${url} = https://test3.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20230815 08:26:45.846" endtime="20230815 08:26:45.847"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20230815 08:26:45.847" level="TRACE">Arguments: [ ${string}='https://test3.omenahotels.com/en/#' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20230815 08:26:45.847" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/#' | '/booking/' ]</msg>
<msg timestamp="20230815 08:26:45.848" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:45.848" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20230815 08:26:45.847" endtime="20230815 08:26:45.848"/>
</kw>
<msg timestamp="20230815 08:26:45.848" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:45.848" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20230815 08:26:45.847" endtime="20230815 08:26:45.848"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:26:45.848" endtime="20230815 08:26:45.848"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:45.848" endtime="20230815 08:26:45.848"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:45.848" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20230815 08:26:45.848" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:46.211" level="DEBUG">Clicked element: '//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:46.211" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.848" endtime="20230815 08:26:46.211"/>
</kw>
<status status="PASS" starttime="20230815 08:26:45.848" endtime="20230815 08:26:46.211"/>
</branch>
<status status="PASS" starttime="20230815 08:26:45.848" endtime="20230815 08:26:46.211"/>
</if>
<msg timestamp="20230815 08:26:46.211" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:45.846" endtime="20230815 08:26:46.211"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20230815 08:26:46.211" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:46.212" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:46.212" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:47.545" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20230815 08:26:47.545" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:46.212" endtime="20230815 08:26:47.545"/>
</kw>
<msg timestamp="20230815 08:26:47.545" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:46.211" endtime="20230815 08:26:47.545"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:47.546" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:26:47.797" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:26:47.797" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.2511579990386963 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:26:47.797" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:26:47.797" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:26:47.545" endtime="20230815 08:26:47.797"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:26:47.797" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20230815 08:26:47.797" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:47.797" endtime="20230815 08:26:47.797"/>
</kw>
<msg timestamp="20230815 08:26:47.797" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:46.211" endtime="20230815 08:26:47.797"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:26:47.798" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:47.798" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:26:47.799" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:49.850" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:49.850" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:47.798" endtime="20230815 08:26:49.850"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:26:49.851" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:49.851" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:50.645" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20230815 08:26:50.646" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:49.851" endtime="20230815 08:26:50.646"/>
</kw>
<msg timestamp="20230815 08:26:50.647" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:49.851" endtime="20230815 08:26:50.647"/>
</kw>
<msg timestamp="20230815 08:26:50.647" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:47.798" endtime="20230815 08:26:50.647"/>
</kw>
<kw name="Continue to Payment" library="booking">
<msg timestamp="20230815 08:26:50.648" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:50.648" level="TRACE">Arguments: [ "(//button[normalize-space()='Continue to payment'])[1]" ]</msg>
<msg timestamp="20230815 08:26:50.649" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:50.707" level="DEBUG">Clicked element: '(//button[normalize-space()='Continue to payment'])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:50.707" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:50.648" endtime="20230815 08:26:50.707"/>
</kw>
<msg timestamp="20230815 08:26:50.708" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:50.648" endtime="20230815 08:26:50.708"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20230815 08:26:50.708" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='040123942' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20230815 08:26:50.709" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230815 08:26:50.709" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:51.652" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x103649d60&gt;
{'created_at': datetime.datetime(2023, 8, 15, 5, 26, 51, 526000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x103649fa0&gt;</msg>
<msg timestamp="20230815 08:26:51.653" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 26, 51, 526000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:26:51.653" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 26, 51, 526000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com',
 'ex...</msg>
<status status="PASS" starttime="20230815 08:26:50.709" endtime="20230815 08:26:51.653"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:51.655" level="TRACE">Arguments: [ '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037' ]</msg>
<msg timestamp="20230815 08:26:51.655" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:51.653" endtime="20230815 08:26:51.655"/>
</kw>
<msg timestamp="20230815 08:26:51.655" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 26, 51, 526000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:26:51.655" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 26, 51, 526000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com',
 'ex...</msg>
<status status="PASS" starttime="20230815 08:26:50.708" endtime="20230815 08:26:51.655"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:51.656" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:51.656" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:26:51.657" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.001" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.001" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:51.656" endtime="20230815 08:26:52.001"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.002" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:26:52.002" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:26:52.024" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:26:52.024" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.001" endtime="20230815 08:26:52.024"/>
</kw>
<msg timestamp="20230815 08:26:52.025" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:51.656" endtime="20230815 08:26:52.025"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:52.025" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.025" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20230815 08:26:52.026" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.140" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.140" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.025" endtime="20230815 08:26:52.141"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.141" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:26:52.141" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:26:52.168" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:26:52.168" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.141" endtime="20230815 08:26:52.168"/>
</kw>
<msg timestamp="20230815 08:26:52.168" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.025" endtime="20230815 08:26:52.168"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:52.169" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.170" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:26:52.170" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.252" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.253" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.170" endtime="20230815 08:26:52.253"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.253" level="TRACE">Arguments: [ 'id=email' | '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com' ]</msg>
<msg timestamp="20230815 08:26:52.253" level="INFO">Fills the text '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com' in the given field.</msg>
<msg timestamp="20230815 08:26:52.277" level="DEBUG">Fill text 1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20230815 08:26:52.277" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.253" endtime="20230815 08:26:52.277"/>
</kw>
<msg timestamp="20230815 08:26:52.277" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.168" endtime="20230815 08:26:52.277"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:26:52.278" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:26:52.279" level="DEBUG">https://test3.omenahotels.com/en/booking/#/payment</msg>
<msg timestamp="20230815 08:26:52.279" level="TRACE">Return: 'https://test3.omenahotels.com/en/booking/#/payment'</msg>
<msg timestamp="20230815 08:26:52.279" level="INFO">${u} = https://test3.omenahotels.com/en/booking/#/payment</msg>
<status status="PASS" starttime="20230815 08:26:52.278" endtime="20230815 08:26:52.279"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<msg timestamp="20230815 08:26:52.279" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/booking/#/payment' ]</msg>
<msg timestamp="20230815 08:26:52.279" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:26:52.279" level="INFO">${e} = test-omena</msg>
<status status="PASS" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.279"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.279"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.279"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:52.279" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='040123942' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.280" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20230815 08:26:52.280" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.356" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.356" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.280" endtime="20230815 08:26:52.356"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.356" level="TRACE">Arguments: [ 'id=phoneNumber' | '040123942' ]</msg>
<msg timestamp="20230815 08:26:52.356" level="INFO">Fills the text '040123942' in the given field.</msg>
<msg timestamp="20230815 08:26:52.377" level="DEBUG">Fill text 040123942 on id=phoneNumber with force: false</msg>
<msg timestamp="20230815 08:26:52.377" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.356" endtime="20230815 08:26:52.377"/>
</kw>
<msg timestamp="20230815 08:26:52.377" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.377"/>
</kw>
<status status="PASS" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.377"/>
</branch>
<status status="PASS" starttime="20230815 08:26:52.279" endtime="20230815 08:26:52.377"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:26:52.378" level="TRACE">Arguments: [ '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037' ]</msg>
<msg timestamp="20230815 08:26:52.378" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.378" endtime="20230815 08:26:52.378"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 08:26:52.378" level="TRACE">Arguments: [ '$ID' | '${inbox.id}' ]</msg>
<msg timestamp="20230815 08:26:52.379" level="INFO">${ID} = 1a4c01ee-7e60-4e9b-9ab1-dd16ba495037</msg>
<msg timestamp="20230815 08:26:52.379" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.378" endtime="20230815 08:26:52.379"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230815 08:26:52.379" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20230815 08:26:52.388" level="TRACE">Return: 1</msg>
<msg timestamp="20230815 08:26:52.388" level="INFO">${passwordVisible} = 1</msg>
<status status="PASS" starttime="20230815 08:26:52.379" endtime="20230815 08:26:52.388"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:26:52.389" level="TRACE">Arguments: [ ${selector}='id=password' | ${text}='NotARealPass123!' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.389" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20230815 08:26:52.389" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.473" level="DEBUG">Clicked element: 'id=password' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.474" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.389" endtime="20230815 08:26:52.474"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.474" level="TRACE">Arguments: [ 'id=password' | 'NotARealPass123!' ]</msg>
<msg timestamp="20230815 08:26:52.474" level="INFO">Fills the text 'NotARealPass123!' in the given field.</msg>
<msg timestamp="20230815 08:26:52.484" level="DEBUG">Fill text NotARealPass123! on id=password with force: false</msg>
<msg timestamp="20230815 08:26:52.484" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.474" endtime="20230815 08:26:52.485"/>
</kw>
<msg timestamp="20230815 08:26:52.485" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.389" endtime="20230815 08:26:52.485"/>
</kw>
<status status="PASS" starttime="20230815 08:26:52.389" endtime="20230815 08:26:52.485"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230815 08:26:52.485" endtime="20230815 08:26:52.485"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:26:52.485" endtime="20230815 08:26:52.485"/>
</branch>
<status status="PASS" starttime="20230815 08:26:52.388" endtime="20230815 08:26:52.485"/>
</if>
<msg timestamp="20230815 08:26:52.485" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:50.708" endtime="20230815 08:26:52.485"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20230815 08:26:52.486" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.486" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20230815 08:26:52.486" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.559" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.559" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.486" endtime="20230815 08:26:52.559"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.559" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20230815 08:26:52.559" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.639" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.639" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.559" endtime="20230815 08:26:52.639"/>
</kw>
<msg timestamp="20230815 08:26:52.639" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.486" endtime="20230815 08:26:52.639"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20230815 08:26:52.640" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.640" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20230815 08:26:52.640" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.707" level="DEBUG">Clicked element: '//div[contains(text(), "Web bank payment")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.708" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.640" endtime="20230815 08:26:52.708"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.708" level="TRACE">Arguments: [ "//p[contains(text(), 'Nordea')]" ]</msg>
<msg timestamp="20230815 08:26:52.708" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.787" level="DEBUG">Clicked element: '//p[contains(text(), 'Nordea')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.787" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.708" endtime="20230815 08:26:52.787"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:52.787" level="TRACE">Arguments: [ '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' ]</msg>
<msg timestamp="20230815 08:26:52.788" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:26:52.852" level="DEBUG">Clicked element: '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:26:52.852" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.787" endtime="20230815 08:26:52.852"/>
</kw>
<msg timestamp="20230815 08:26:52.852" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.639" endtime="20230815 08:26:52.852"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<msg timestamp="20230815 08:26:52.853" level="TRACE">Arguments: [  ]</msg>
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<msg timestamp="20230815 08:26:52.853" level="TRACE">Arguments: [ ${which}='success' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:26:52.853" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:26:59.897" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<msg timestamp="20230815 08:26:59.897" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.853" endtime="20230815 08:26:59.897"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:26:59.897" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" ]</msg>
<msg timestamp="20230815 08:26:59.898" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:27:05.271" level="DEBUG">Clicked element: '//a[contains(text(), 'Simulate success to merchant')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:27:05.271" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:59.897" endtime="20230815 08:27:05.271"/>
</kw>
<msg timestamp="20230815 08:27:05.272" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.853" endtime="20230815 08:27:05.272"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<msg timestamp="20230815 08:27:05.272" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//p[contains(text(), 'Payment was successful')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:27:05.273" level="TRACE">Arguments: [ ${element}="//p[contains(text(), 'Payment was successful')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:27:05.273" level="TRACE">Arguments: [ "//p[contains(text(), 'Payment was successful')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:27:08.128" level="INFO">Waited for Element with selector //p[contains(text(), 'Payment was successful')] at state visible</msg>
<msg timestamp="20230815 08:27:08.128" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:05.273" endtime="20230815 08:27:08.128"/>
</kw>
<msg timestamp="20230815 08:27:08.129" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:05.272" endtime="20230815 08:27:08.129"/>
</kw>
<kw name="Close Dialog" library="booking">
<msg timestamp="20230815 08:27:08.129" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(text(), "Ok")]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:27:08.129" level="TRACE">Arguments: [ ${element}='//button[contains(text(), "Ok")]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:27:08.129" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:27:08.132" level="INFO">Waited for Element with selector //button[contains(text(), "Ok")] at state visible</msg>
<msg timestamp="20230815 08:27:08.132" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.129" endtime="20230815 08:27:08.132"/>
</kw>
<msg timestamp="20230815 08:27:08.132" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.129" endtime="20230815 08:27:08.132"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), "Ok")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:27:08.132" level="TRACE">Arguments: [ '//button[contains(text(), "Ok")]' ]</msg>
<msg timestamp="20230815 08:27:08.133" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:27:08.325" level="DEBUG">Clicked element: '//button[contains(text(), "Ok")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:27:08.325" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.132" endtime="20230815 08:27:08.325"/>
</kw>
<msg timestamp="20230815 08:27:08.325" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.129" endtime="20230815 08:27:08.325"/>
</kw>
<kw name="Save Booking Number 1" library="booking">
<msg timestamp="20230815 08:27:08.326" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Text" library="Browser">
<var>${str}</var>
<arg>//p[contains(text(),'Booking number')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<msg timestamp="20230815 08:27:08.326" level="TRACE">Arguments: [ "//p[contains(text(),'Booking number')]" ]</msg>
<msg timestamp="20230815 08:27:08.341" level="DEBUG">Text received successfully.</msg>
<msg timestamp="20230815 08:27:08.341" level="INFO">Text: 'Booking number: 539673142'</msg>
<msg timestamp="20230815 08:27:08.341" level="TRACE">Return: 'Booking number: 539673142'</msg>
<msg timestamp="20230815 08:27:08.341" level="INFO">${str} = Booking number: 539673142</msg>
<status status="PASS" starttime="20230815 08:27:08.326" endtime="20230815 08:27:08.341"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${bookingNumber}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:27:08.341" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20230815 08:27:08.341" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.341" endtime="20230815 08:27:08.341"/>
</kw>
<kw name="Remove String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<arg>Booking code${SPACE}</arg>
<doc>Removes all ``removables`` from the given ``string``.</doc>
<msg timestamp="20230815 08:27:08.341" level="TRACE">Arguments: [ 'Booking number: 539673142' | 'Booking code ' ]</msg>
<msg timestamp="20230815 08:27:08.341" level="TRACE">Return: 'Booking number: 539673142'</msg>
<msg timestamp="20230815 08:27:08.341" level="INFO">${str} = Booking number: 539673142</msg>
<status status="PASS" starttime="20230815 08:27:08.341" endtime="20230815 08:27:08.341"/>
</kw>
<kw name="Strip String" library="String">
<var>${str}</var>
<arg>${str}</arg>
<doc>Remove leading and/or trailing whitespaces from the given string.</doc>
<msg timestamp="20230815 08:27:08.342" level="TRACE">Arguments: [ 'Booking number: 539673142' ]</msg>
<msg timestamp="20230815 08:27:08.342" level="TRACE">Return: 'Booking number: 539673142'</msg>
<msg timestamp="20230815 08:27:08.342" level="INFO">${str} = Booking number: 539673142</msg>
<status status="PASS" starttime="20230815 08:27:08.342" endtime="20230815 08:27:08.342"/>
</kw>
<msg timestamp="20230815 08:27:08.342" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:08.326" endtime="20230815 08:27:08.342"/>
</kw>
<msg timestamp="20230815 08:27:08.342" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:27:05.272" endtime="20230815 08:27:08.342"/>
</kw>
<msg timestamp="20230815 08:27:08.342" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:26:52.852" endtime="20230815 08:27:08.342"/>
</kw>
<doc>A new booker opens the page and does a successful booking</doc>
<tag>smoke</tag>
<status status="PASS" starttime="20230815 08:26:45.490" endtime="20230815 08:27:08.342"/>
</test>
<test id="s1-s1-s2-s1-t2" name="Confirm Email and Open Link" line="26">
<kw name="Get Variable Value" library="BuiltIn">
<var>${id}</var>
<arg>$ID</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20230815 08:27:08.344" level="TRACE">Arguments: [ '$ID' ]</msg>
<msg timestamp="20230815 08:27:08.344" level="TRACE">Return: '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037'</msg>
<msg timestamp="20230815 08:27:08.344" level="INFO">${id} = 1a4c01ee-7e60-4e9b-9ab1-dd16ba495037</msg>
<status status="PASS" starttime="20230815 08:27:08.344" endtime="20230815 08:27:08.344"/>
</kw>
<kw name="Wait for Latest Booking Confirmation and Extract Link" library="MailSlurp">
<var>${modify_link}</var>
<arg>${id}</arg>
<msg timestamp="20230815 08:27:08.344" level="TRACE">Arguments: [ '1a4c01ee-7e60-4e9b-9ab1-dd16ba495037' ]</msg>
<msg timestamp="20230815 08:28:10.366" level="FAIL">ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:28:10 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1069', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"Booking confirmation\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-383d7afb-6d57-4779-8db7-579d8bd6d9ec","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}
</msg>
<msg timestamp="20230815 08:28:10.373" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/resources/libraries/MailSlurp.py", line 102, in wait_for_latest_booking_confirmation_and_extract_link
    body = self.wait_for_latest_booking_confirmation(inbox_id)
  File "/Users/sara/code/nelson-test-automation/resources/libraries/MailSlurp.py", line 78, in wait_for_latest_booking_confirmation
    emails = api_instance.wait_for_matching_emails(inbox_id=inbox_id, match_options=match_options, timeout=60000, unread_only=True, count=10)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api/wait_for_controller_api.py", line 602, in wait_for_matching_emails
    return self.wait_for_matching_emails_with_http_info(inbox_id, count, match_options, **kwargs)  # noqa: E501
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api/wait_for_controller_api.py", line 723, in wait_for_matching_emails_with_http_info
    return self.api_client.call_api(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 365, in call_api
    return self.__call_api(resource_path, method,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 189, in __call_api
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 182, in __call_api
    response_data = self.request(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 408, in request
    return self.rest_client.POST(url,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/rest.py", line 266, in POST
    return self.request("POST", url,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/rest.py", line 225, in request
    raise ApiException(http_resp=r)
mailslurp_client.exceptions.ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:28:10 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1069', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"Booking confirmation\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-383d7afb-6d57-4779-8db7-579d8bd6d9ec","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}</msg>
<status status="FAIL" starttime="20230815 08:27:08.344" endtime="20230815 08:28:10.375"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${modify_link}</arg>
<status status="NOT RUN" starttime="20230815 08:28:10.377" endtime="20230815 08:28:10.378"/>
</kw>
<doc>A new booker receives an email with a link to modify the booking</doc>
<tag>smoke</tag>
<status status="FAIL" starttime="20230815 08:27:08.343" endtime="20230815 08:28:10.379">ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:28:10 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1069', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `1a4c01ee-7e60-4e9b-9ab1-dd16ba495037@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"Booking confirmation\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-383d7afb-6d57-4779-8db7-579d8bd6d9ec","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}
</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:28:10.394" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:28:10.727" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:28:10.727" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:10.394" endtime="20230815 08:28:10.727"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:26:42.901" endtime="20230815 08:28:10.727"/>
</suite>
<status status="FAIL" starttime="20230815 08:26:42.899" endtime="20230815 08:28:10.730"/>
</suite>
<status status="FAIL" starttime="20230815 08:11:03.891" endtime="20230815 08:28:10.731"/>
</suite>
<suite id="s1-s2" name="Customer Specific" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific">
<suite id="s1-s2-s1" name="Kensington Stay" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay">
<suite id="s1-s2-s1-s1" name="Confirm Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/confirm_bdc_booking.robot">
<test id="s1-s2-s1-s1-t1" name="Create A New Booking on Booking.com for a later date and verify Emails" line="15">
<kw name="Pass Execution" library="BuiltIn">
<arg>TBD</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230815 08:28:10.745" level="TRACE">Arguments: [ 'TBD' ]</msg>
<msg timestamp="20230815 08:28:10.745" level="INFO">Execution passed with message:
TBD</msg>
<status status="PASS" starttime="20230815 08:28:10.745" endtime="20230815 08:28:10.745"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:28:10.745" endtime="20230815 08:28:10.745">TBD</status>
</test>
<test id="s1-s2-s1-s1-t2" name="Open Booking in MUI" line="18">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="EC">
<msg timestamp="20230815 08:28:10.747" level="TRACE">Arguments: [  ]</msg>
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:28:10.747" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:28:10.747" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:28:10.747" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/d8761135-f43e-472b-a67c-2bd797276410"}</msg>
<msg timestamp="20230815 08:28:11.181" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/d8761135-f43e-472b-a67c-2bd797276410"}</msg>
<msg timestamp="20230815 08:28:11.181" level="TRACE">Return: 'browser=40dfafe9-f290-43a8-ab56-e717f03ebe4e'</msg>
<status status="PASS" starttime="20230815 08:28:10.747" endtime="20230815 08:28:11.181"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:28:11.181" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:11.182" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:28:11.182" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:28:11.181" endtime="20230815 08:28:11.182"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:28:11.182" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:28:11.183" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:28:11.194" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:28:11.195" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:28:11.195" level="TRACE">Return: 'context=ce445d61-3d6e-4556-a1da-4367a606f382'</msg>
<status status="PASS" starttime="20230815 08:28:11.182" endtime="20230815 08:28:11.195"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:28:11.195" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:28:11.487" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:28:11.487" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:28:11.487" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:28:11.490" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================", grpc_status:8, created_time:"2023-08-15T08:28:11.48476+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:28:11.195" endtime="20230815 08:28:11.490"/>
</kw>
<status status="FAIL" starttime="20230815 08:28:10.747" endtime="20230815 08:28:11.491"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230815 08:28:11.491" endtime="20230815 08:28:11.491"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Kensington</arg>
<status status="NOT RUN" starttime="20230815 08:28:11.491" endtime="20230815 08:28:11.491"/>
</kw>
<status status="FAIL" starttime="20230815 08:28:10.746" endtime="20230815 08:28:11.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>In Nelson, looking for booking: ${BDCNo}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.491" endtime="20230815 08:28:11.491"/>
</kw>
<kw name="Search with String" library="mui">
<arg>${BDCNo}</arg>
<status status="NOT RUN" starttime="20230815 08:28:11.492" endtime="20230815 08:28:11.492"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.492" endtime="20230815 08:28:11.492"/>
</kw>
<kw name="Click" library="Browser">
<arg>//*[contains(text(), '${BDCNo}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.492" endtime="20230815 08:28:11.492"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.492" endtime="20230815 08:28:11.492"/>
</kw>
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:28:10.746" endtime="20230815 08:28:11.492">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s2-s1-s1-t3" name="Cancel Booking in MUI" line="26">
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Cancel')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:11.494" level="TRACE">Arguments: [ "//button[contains(text(), 'Cancel')]" ]</msg>
<msg timestamp="20230815 08:28:11.494" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:11.497" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:28:11.497" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:28:11.497" level="FAIL">Error: Could not find active page</msg>
<msg timestamp="20230815 08:28:11.497" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: Could not find active page"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"Error: Could not find active page", grpc_status:8, created_time:"2023-08-15T08:28:11.49484+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: Could not find active page</msg>
<status status="FAIL" starttime="20230815 08:28:11.494" endtime="20230815 08:28:11.497"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[contains(text(), 'Yes')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.497" endtime="20230815 08:28:11.497"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2</arg>
<arg>5</arg>
<arg>Click View Guests Button</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.497" endtime="20230815 08:28:11.498"/>
</kw>
<kw name="Get Text" library="Browser">
<var>${status}</var>
<arg>//span[contains(@class, 'status')]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.498" endtime="20230815 08:28:11.498"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${status}</arg>
<arg>Cancelled</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" starttime="20230815 08:28:11.498" endtime="20230815 08:28:11.498"/>
</kw>
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:28:11.493" endtime="20230815 08:28:11.498">Error: Could not find active page</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:28:11.499" level="TRACE">Arguments: [ 'ALL' ]</msg>
<msg timestamp="20230815 08:28:14.017" level="INFO">Closed all browsers</msg>
<msg timestamp="20230815 08:28:14.017" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:11.499" endtime="20230815 08:28:14.017"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:28:10.733" endtime="20230815 08:28:14.017"/>
</suite>
<suite id="s1-s2-s1-s2" name="Create Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bdc_booking.robot">
<test id="s1-s2-s1-s2-t1" name="Open BDC and Check for Availability" line="56">
<kw name="Open Booking.com">
<arg>${BDCUrl}</arg>
<arg>${BDCHotelId}</arg>
<msg timestamp="20230815 08:28:14.038" level="TRACE">Arguments: [ ${BDCUrl}='https://secure.booking.com/book.html?hotel_id=' | ${BDCHotelId}='10304890' ]</msg>
<kw name="Open New Browser To URL" library="common">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<msg timestamp="20230815 08:28:14.038" level="TRACE">Arguments: [ ${url}='https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:28:14.038" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:14.038" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/c0a27635-4b5d-451d-b1d7-4cc4b375d2f9"}</msg>
<msg timestamp="20230815 08:28:14.362" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/c0a27635-4b5d-451d-b1d7-4cc4b375d2f9"}</msg>
<msg timestamp="20230815 08:28:14.362" level="TRACE">Return: 'browser=3604fca2-cda2-42d9-80b0-d7b7751dcabe'</msg>
<status status="PASS" starttime="20230815 08:28:14.038" endtime="20230815 08:28:14.362"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:28:14.363" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:14.364" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:28:14.364" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:28:14.363" endtime="20230815 08:28:14.364"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:28:14.365" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:28:14.365" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:28:14.388" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:28:14.388" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:28:14.389" level="TRACE">Return: 'context=3f5c850d-2e63-46d8-86ec-285a778f53ea'</msg>
<status status="PASS" starttime="20230815 08:28:14.365" endtime="20230815 08:28:14.389"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:28:14.389" level="TRACE">Arguments: [ 'https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<msg timestamp="20230815 08:28:17.060" level="INFO">Successfully initialized new page object and opened url: https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1</msg>
<msg timestamp="20230815 08:28:17.061" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:28:17.061" level="TRACE">Return: {'page_id': 'page=ac828b06-f075-48bd-bfb3-b7177a74be0c', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:28:14.389" endtime="20230815 08:28:17.061"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:28:17.062" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:28:17.062" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:28:17.064" level="DEBUG">https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1</msg>
<msg timestamp="20230815 08:28:17.065" level="TRACE">Return: 'https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1'</msg>
<msg timestamp="20230815 08:28:17.065" level="INFO">${currentUrl} = https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1</msg>
<status status="PASS" starttime="20230815 08:28:17.062" endtime="20230815 08:28:17.065"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:28:17.065" level="TRACE">Arguments: [ 'https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<msg timestamp="20230815 08:28:17.065" level="TRACE">Return: 'test-omena'</msg>
<msg timestamp="20230815 08:28:17.065" level="INFO">${env} = test-omena</msg>
<status status="PASS" starttime="20230815 08:28:17.065" endtime="20230815 08:28:17.065"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:28:17.066" level="TRACE">Arguments: [ '' | 'test-omena' ]</msg>
<msg timestamp="20230815 08:28:17.066" level="TRACE">Return: ['', 'test-omena']</msg>
<status status="PASS" starttime="20230815 08:28:17.066" endtime="20230815 08:28:17.066"/>
</kw>
<msg timestamp="20230815 08:28:17.066" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:17.061" endtime="20230815 08:28:17.066"/>
</kw>
<msg timestamp="20230815 08:28:17.066" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:14.038" endtime="20230815 08:28:17.066"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:28:17.067" level="TRACE">Arguments: [ 'https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<msg timestamp="20230815 08:28:17.067" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:17.067" endtime="20230815 08:28:17.067"/>
</kw>
<msg timestamp="20230815 08:28:17.067" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:14.038" endtime="20230815 08:28:17.067"/>
</kw>
<kw name="Check Availability for Today">
<msg timestamp="20230815 08:28:17.068" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Selectors For For Date" library="Helpers">
<var>${day}</var>
<var>${month}</var>
<msg timestamp="20230815 08:28:17.068" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:28:17.068" level="TRACE">Return: ('14', '10')</msg>
<msg timestamp="20230815 08:28:17.068" level="INFO">${day} = 14</msg>
<msg timestamp="20230815 08:28:17.068" level="INFO">${month} = 10</msg>
<status status="PASS" starttime="20230815 08:28:17.068" endtime="20230815 08:28:17.068"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-monthday</arg>
<arg>value</arg>
<arg>${day}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:17.069" level="TRACE">Arguments: [ 'id=check-availability__checkin-monthday' | &lt;SelectAttribute.value: 1&gt; | '14' ]</msg>
<msg timestamp="20230815 08:28:17.115" level="DEBUG">entry {
  value: "0"
  label: "Day"
}
entry {
  value: "1"
  label: "Tue 1"
  index: 1
}
entry {
  value: "2"
  label: "Wed 2"
  index: 2
}
entry {
  value: "3"
  label: "Thu 3"
  index: 3
}
entry {
  value: "4"
  label: "Fri 4"
  index: 4
}
entry {
  value: "5"
  label: "Sat 5"
  index: 5
}
entry {
  value: "6"
  label: "Sun 6"
  index: 6
}
entry {
  value: "7"
  label: "Mon 7"
  index: 7
}
entry {
  value: "8"
  label: "Tue 8"
  index: 8
}
entry {
  value: "9"
  label: "Wed 9"
  index: 9
}
entry {
  value: "10"
  label: "Thu 10"
  index: 10
}
entry {
  value: "11"
  label: "Fri 11"
  index: 11
}
entry {
  value: "12"
  label: "Sat 12"
  index: 12
}
entry {
  value: "13"
  label: "Sun 13"
  index: 13
}
entry {
  value: "14"
  label: "Mon 14"
  index: 14
  selected: true
}
entry {
  value: "15"
  label: "Tue 15"
  index: 15
}
entry {
  value: "16"
  label: "Wed 16"
  index: 16
}
entry {
  value: "17"
  label: "Thu 17"
  index: 17
}
entry {
  value: "18"
  label: "Fri 18"
  index: 18
}
entry {
  value: "19"
  label: "Sat 19"
  index: 19
}
entry {
  value: "20"
  label: "Sun 20"
  index: 20
}
entry {
  value: "21"
  label: "Mon 21"
  index: 21
}
entry {
  value: "22"
  label: "Tue 22"
  index: 22
}
entry {
  value: "23"
  label: "Wed 23"
  index: 23
}
entry {
  value: "24"
  label: "Thu 24"
  index: 24
}
entry {
  value: "25"
  label: "Fri 25"
  index: 25
}
entry {
  value: "26"
  label: "Sat 26"
  index: 26
}
entry {
  value: "27"
  label: "Sun 27"
  index: 27
}
entry {
  value: "28"
  label: "Mon 28"
  index: 28
}
entry {
  value: "29"
  label: "Tue 29"
  index: 29
}
entry {
  value: "30"
  label: "Wed 30"
  index: 30
}
entry {
  value: "31"
  label: "Thu 31"
  index: 31
}
</msg>
<msg timestamp="20230815 08:28:17.115" level="TRACE">Return: ['14']</msg>
<status status="PASS" starttime="20230815 08:28:17.068" endtime="20230815 08:28:17.115"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-yearmonth</arg>
<arg>value</arg>
<arg>2023-${month}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:17.116" level="TRACE">Arguments: [ 'id=check-availability__checkin-yearmonth' | &lt;SelectAttribute.value: 1&gt; | '2023-10' ]</msg>
<msg timestamp="20230815 08:28:17.127" level="DEBUG">entry {
  value: "2023-8"
  label: "August \'23"
}
entry {
  value: "2023-9"
  label: "September \'23"
  index: 1
}
entry {
  value: "2023-10"
  label: "October \'23"
  index: 2
  selected: true
}
entry {
  value: "2023-11"
  label: "November \'23"
  index: 3
}
entry {
  value: "2023-12"
  label: "December \'23"
  index: 4
}
entry {
  value: "2024-1"
  label: "January \'24"
  index: 5
}
entry {
  value: "2024-2"
  label: "February \'24"
  index: 6
}
entry {
  value: "2024-3"
  label: "March \'24"
  index: 7
}
entry {
  value: "2024-4"
  label: "April \'24"
  index: 8
}
entry {
  value: "2024-5"
  label: "May \'24"
  index: 9
}
entry {
  value: "2024-6"
  label: "June \'24"
  index: 10
}
entry {
  value: "2024-7"
  label: "July \'24"
  index: 11
}
entry {
  value: "2024-8"
  label: "August \'24"
  index: 12
}
entry {
  value: "2024-9"
  label: "September \'24"
  index: 13
}
entry {
  value: "2024-10"
  label: "October \'24"
  index: 14
}
entry {
  value: "2024-11"
  label: "November \'24"
  index: 15
}
</msg>
<msg timestamp="20230815 08:28:17.127" level="TRACE">Return: ['2023-10']</msg>
<status status="PASS" starttime="20230815 08:28:17.116" endtime="20230815 08:28:17.127"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Check availability')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:17.127" level="TRACE">Arguments: [ "//span[contains(text(), 'Check availability')]" ]</msg>
<msg timestamp="20230815 08:28:17.128" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:19.373" level="DEBUG">Clicked element: '//span[contains(text(), 'Check availability')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:19.373" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:17.127" endtime="20230815 08:28:19.373"/>
</kw>
<msg timestamp="20230815 08:28:19.373" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:17.068" endtime="20230815 08:28:19.373"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:28:14.037" endtime="20230815 08:28:19.373"/>
</test>
<test id="s1-s2-s1-s2-t2" name="Create Reservation in BDC" line="60">
<kw name="Is Element Visible" library="common">
<var>${reserveButton}</var>
<arg>//button[@name='book']</arg>
<msg timestamp="20230815 08:28:19.376" level="TRACE">Arguments: [ ${selector}="//button[@name='book']" ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:19.377" level="TRACE">Arguments: [ "//button[@name='book']" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:28:19.512" level="DEBUG">States: 2133</msg>
<msg timestamp="20230815 08:28:19.512" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.13495302200317383 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:28:19.512" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:28:19.512" level="INFO">${isVisible} = True</msg>
<status status="PASS" starttime="20230815 08:28:19.377" endtime="20230815 08:28:19.512"/>
</kw>
<msg timestamp="20230815 08:28:19.512" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:28:19.512" level="INFO">${reserveButton} = True</msg>
<status status="PASS" starttime="20230815 08:28:19.376" endtime="20230815 08:28:19.512"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[contains(@id, 'unit')]</arg>
<arg>value</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:19.513" level="TRACE">Arguments: [ "//select[contains(@id, 'unit')]" | &lt;SelectAttribute.value: 1&gt; | '1' ]</msg>
<msg timestamp="20230815 08:28:19.522" level="DEBUG">entry {
  value: "0"
  label: "0"
}
entry {
  value: "1"
  label: "1 (€ 115.87)"
  index: 1
  selected: true
}
entry {
  value: "2"
  label: "2 (€ 231.74)"
  index: 2
}
entry {
  value: "3"
  label: "3 (€ 347.62)"
  index: 3
}
entry {
  value: "4"
  label: "4 (€ 463.49)"
  index: 4
}
entry {
  value: "5"
  label: "5 (€ 579.36)"
  index: 5
}
entry {
  value: "6"
  label: "6 (€ 695.23)"
  index: 6
}
entry {
  value: "7"
  label: "7 (€ 811.11)"
  index: 7
}
entry {
  value: "8"
  label: "8 (€ 926.98)"
  index: 8
}
entry {
  value: "9"
  label: "9 (€ 1,042.85)"
  index: 9
}
entry {
  value: "10"
  label: "10 (€ 1,158.72)"
  index: 10
}
</msg>
<msg timestamp="20230815 08:28:19.522" level="TRACE">Return: ['1']</msg>
<status status="PASS" starttime="20230815 08:28:19.512" endtime="20230815 08:28:19.522"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'reserve')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:19.522" level="TRACE">Arguments: [ "//span[contains(text(), 'reserve')]" ]</msg>
<msg timestamp="20230815 08:28:19.523" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:22.906" level="DEBUG">Clicked element: '//span[contains(text(), 'reserve')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:22.906" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:19.522" endtime="20230815 08:28:22.906"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:28:19.376" endtime="20230815 08:28:22.907"/>
</test>
<test id="s1-s2-s1-s2-t3" name="Fill Contact Information and Payment Details" line="65">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<msg timestamp="20230815 08:28:22.908" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: ${inbox_id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Arguments: [ 'Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:22.909" endtime="20230815 08:28:22.909"/>
</kw>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Return: '492aa3bb-9e4b-410a-a02c-84f13ace89e8'</msg>
<msg timestamp="20230815 08:28:22.909" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230815 08:28:22.908" endtime="20230815 08:28:22.909"/>
</kw>
<kw name="Fill Contact Information in BDC">
<msg timestamp="20230815 08:28:22.909" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: ${inbox_id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Arguments: [ 'Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<msg timestamp="20230815 08:28:22.909" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:22.909" endtime="20230815 08:28:22.909"/>
</kw>
<msg timestamp="20230815 08:28:22.910" level="TRACE">Return: '492aa3bb-9e4b-410a-a02c-84f13ace89e8'</msg>
<msg timestamp="20230815 08:28:22.910" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230815 08:28:22.909" endtime="20230815 08:28:22.910"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstname</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:22.910" level="TRACE">Arguments: [ ${selector}='id=firstname' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:22.910" level="TRACE">Arguments: [ 'id=firstname' ]</msg>
<msg timestamp="20230815 08:28:22.911" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.096" level="DEBUG">Clicked element: 'id=firstname' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.096" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:22.910" endtime="20230815 08:28:23.096"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.097" level="TRACE">Arguments: [ 'id=firstname' | 'Mos' ]</msg>
<msg timestamp="20230815 08:28:23.097" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:28:23.104" level="DEBUG">Fill text Mos on id=firstname with force: false</msg>
<msg timestamp="20230815 08:28:23.104" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.096" endtime="20230815 08:28:23.104"/>
</kw>
<msg timestamp="20230815 08:28:23.104" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:22.910" endtime="20230815 08:28:23.104"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastname</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:23.105" level="TRACE">Arguments: [ ${selector}='id=lastname' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.105" level="TRACE">Arguments: [ 'id=lastname' ]</msg>
<msg timestamp="20230815 08:28:23.105" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.150" level="DEBUG">Clicked element: 'id=lastname' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.150" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.105" endtime="20230815 08:28:23.150"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.151" level="TRACE">Arguments: [ 'id=lastname' | 'Def' ]</msg>
<msg timestamp="20230815 08:28:23.151" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:28:23.157" level="DEBUG">Fill text Def on id=lastname with force: false</msg>
<msg timestamp="20230815 08:28:23.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.150" endtime="20230815 08:28:23.157"/>
</kw>
<msg timestamp="20230815 08:28:23.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.105" endtime="20230815 08:28:23.157"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${id}@mailslurp.com</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:23.158" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.158" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:28:23.158" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.220" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.220" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.158" endtime="20230815 08:28:23.220"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.220" level="TRACE">Arguments: [ 'id=email' | '492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com' ]</msg>
<msg timestamp="20230815 08:28:23.220" level="INFO">Fills the text '492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com' in the given field.</msg>
<msg timestamp="20230815 08:28:23.226" level="DEBUG">Fill text 492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20230815 08:28:23.226" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.220" endtime="20230815 08:28:23.226"/>
</kw>
<msg timestamp="20230815 08:28:23.226" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.157" endtime="20230815 08:28:23.226"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:28:23.226" level="TRACE">Arguments: [ '492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<msg timestamp="20230815 08:28:23.226" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.226" endtime="20230815 08:28:23.226"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 08:28:23.226" level="TRACE">Arguments: [ '$ID' | '${id}' ]</msg>
<msg timestamp="20230815 08:28:23.227" level="INFO">${ID} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<msg timestamp="20230815 08:28:23.227" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.226" endtime="20230815 08:28:23.227"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=remarks</arg>
<arg>testRemark</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:23.227" level="TRACE">Arguments: [ ${selector}='id=remarks' | ${text}='testRemark' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.227" level="TRACE">Arguments: [ 'id=remarks' ]</msg>
<msg timestamp="20230815 08:28:23.227" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.304" level="DEBUG">Clicked element: 'id=remarks' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.305" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.227" endtime="20230815 08:28:23.305"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.305" level="TRACE">Arguments: [ 'id=remarks' | 'testRemark' ]</msg>
<msg timestamp="20230815 08:28:23.305" level="INFO">Fills the text 'testRemark' in the given field.</msg>
<msg timestamp="20230815 08:28:23.312" level="DEBUG">Fill text testRemark on id=remarks with force: false</msg>
<msg timestamp="20230815 08:28:23.312" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.305" endtime="20230815 08:28:23.312"/>
</kw>
<msg timestamp="20230815 08:28:23.312" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.227" endtime="20230815 08:28:23.312"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[contains(@class, 'guest-name-input')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.312" level="TRACE">Arguments: [ "//input[contains(@class, 'guest-name-input')]" ]</msg>
<msg timestamp="20230815 08:28:23.312" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.369" level="DEBUG">Clicked element: '//input[contains(@class, 'guest-name-input')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.369" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.312" endtime="20230815 08:28:23.369"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=firstname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.370" level="TRACE">Arguments: [ 'id=firstname' ]</msg>
<msg timestamp="20230815 08:28:23.370" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.417" level="DEBUG">Clicked element: 'id=firstname' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.417" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.369" endtime="20230815 08:28:23.417"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=lastname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.417" level="TRACE">Arguments: [ 'id=lastname' ]</msg>
<msg timestamp="20230815 08:28:23.417" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.466" level="DEBUG">Clicked element: 'id=lastname' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.466" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.417" endtime="20230815 08:28:23.466"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=email</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.467" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:28:23.467" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.517" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.517" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.467" endtime="20230815 08:28:23.517"/>
</kw>
<kw name="Is Element Visible" library="common">
<var>${isVisible}</var>
<arg>//div[contains(@class, 'bui-modal--active')]</arg>
<msg timestamp="20230815 08:28:23.518" level="TRACE">Arguments: [ ${selector}="//div[contains(@class, 'bui-modal--active')]" ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.518" level="TRACE">Arguments: [ "//div[contains(@class, 'bui-modal--active')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:28:23.769" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:28:23.769" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.2509639263153076 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:28:23.769" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:28:23.769" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:28:23.518" endtime="20230815 08:28:23.769"/>
</kw>
<msg timestamp="20230815 08:28:23.769" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:28:23.769" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:28:23.518" endtime="20230815 08:28:23.769"/>
</kw>
<if>
<branch type="IF" condition="'${isVisible}' == 'True'">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'bui-modal__close')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:28:23.770" endtime="20230815 08:28:23.770"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:28:23.770" endtime="20230815 08:28:23.770"/>
</branch>
<status status="PASS" starttime="20230815 08:28:23.769" endtime="20230815 08:28:23.770"/>
</if>
<kw name="Click" library="Browser">
<arg>id=bp-control-group__label--notstayer</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.770" level="TRACE">Arguments: [ 'id=bp-control-group__label--notstayer' ]</msg>
<msg timestamp="20230815 08:28:23.770" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.817" level="DEBUG">Clicked element: 'id=bp-control-group__label--notstayer' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.817" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.770" endtime="20230815 08:28:23.817"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Final details')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:23.817" level="TRACE">Arguments: [ "//span[contains(text(), 'Final details')]" ]</msg>
<msg timestamp="20230815 08:28:23.818" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:23.871" level="DEBUG">Clicked element: '//span[contains(text(), 'Final details')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:23.871" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.817" endtime="20230815 08:28:23.871"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//select[@data-phone-country]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:28:23.871" level="TRACE">Arguments: [ ${element}='//select[@data-phone-country]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:28:23.872" level="TRACE">Arguments: [ '//select[@data-phone-country]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:28.215" level="INFO">Waited for Element with selector //select[@data-phone-country] at state visible</msg>
<msg timestamp="20230815 08:28:28.215" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.872" endtime="20230815 08:28:28.215"/>
</kw>
<msg timestamp="20230815 08:28:28.215" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:23.871" endtime="20230815 08:28:28.215"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[@data-phone-country]</arg>
<arg>value</arg>
<arg>FI</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.216" level="TRACE">Arguments: [ '//select[@data-phone-country]' | &lt;SelectAttribute.value: 1&gt; | 'FI' ]</msg>
<msg timestamp="20230815 08:28:28.243" level="DEBUG">entry {
  value: "AF"
  label: "Afghanistan +93"
}
entry {
  value: "AL"
  label: "Albania +355"
  index: 1
}
entry {
  value: "DZ"
  label: "Algeria +213"
  index: 2
}
entry {
  value: "AS"
  label: "American Samoa +1684"
  index: 3
}
entry {
  value: "AD"
  label: "Andorra +376"
  index: 4
}
entry {
  value: "AO"
  label: "Angola +244"
  index: 5
}
entry {
  value: "AI"
  label: "Anguilla +1264"
  index: 6
}
entry {
  value: "AQ"
  label: "Antarctica +672"
  index: 7
}
entry {
  value: "AG"
  label: "Antigua &amp; Barbuda +1268"
  index: 8
}
entry {
  value: "AR"
  label: "Argentina +54"
  index: 9
}
entry {
  value: "AM"
  label: "Armenia +374"
  index: 10
}
entry {
  value: "AW"
  label: "Aruba +297"
  index: 11
}
entry {
  value: "AU"
  label: "Australia +61"
  index: 12
}
entry {
  value: "AT"
  label: "Austria +43"
  index: 13
}
entry {
  value: "AZ"
  label: "Azerbaijan +994"
  index: 14
}
entry {
  value: "BS"
  label: "Bahamas +1242"
  index: 15
}
entry {
  value: "BH"
  label: "Bahrain +973"
  index: 16
}
entry {
  value: "BD"
  label: "Bangladesh +880"
  index: 17
}
entry {
  value: "BB"
  label: "Barbados +1246"
  index: 18
}
entry {
  value: "BY"
  label: "Belarus +375"
  index: 19
}
entry {
  value: "BE"
  label: "Belgium +32"
  index: 20
}
entry {
  value: "BZ"
  label: "Belize +501"
  index: 21
}
entry {
  value: "BJ"
  label: "Benin +229"
  index: 22
}
entry {
  value: "BM"
  label: "Bermuda +1441"
  index: 23
}
entry {
  value: "BT"
  label: "Bhutan +975"
  index: 24
}
entry {
  value: "BO"
  label: "Bolivia +591"
  index: 25
}
entry {
  value: "BQ"
  label: "Bonaire St. Eustatius and Saba +599"
  index: 26
}
entry {
  value: "BA"
  label: "Bosnia and Herzegovina +387"
  index: 27
}
entry {
  value: "BW"
  label: "Botswana +267"
  index: 28
}
entry {
  value: "BV"
  label: "Bouvet Island +47"
  index: 29
}
entry {
  value: "BR"
  label: "Brazil +55"
  index: 30
}
entry {
  value: "IO"
  label: "British Indian Ocean Territory +246"
  index: 31
}
entry {
  value: "VG"
  label: "British Virgin Islands +1284"
  index: 32
}
entry {
  value: "BN"
  label: "Brunei +673"
  index: 33
}
entry {
  value: "BG"
  label: "Bulgaria +359"
  index: 34
}
entry {
  value: "BF"
  label: "Burkina Faso +226"
  index: 35
}
entry {
  value: "BI"
  label: "Burundi +257"
  index: 36
}
entry {
  value: "KH"
  label: "Cambodia +855"
  index: 37
}
entry {
  value: "CM"
  label: "Cameroon +237"
  index: 38
}
entry {
  value: "CA"
  label: "Canada +1"
  index: 39
}
entry {
  value: "CV"
  label: "Cape Verde +238"
  index: 40
}
entry {
  value: "KY"
  label: "Cayman Islands +1345"
  index: 41
}
entry {
  value: "CF"
  label: "Central Africa Republic +236"
  index: 42
}
entry {
  value: "TD"
  label: "Chad +235"
  index: 43
}
entry {
  value: "CL"
  label: "Chile +56"
  index: 44
}
entry {
  value: "CN"
  label: "China +86"
  index: 45
}
entry {
  value: "CX"
  label: "Christmas Island +61"
  index: 46
}
entry {
  value: "CC"
  label: "Cocos (K) I. +61"
  index: 47
}
entry {
  value: "CO"
  label: "Colombia +57"
  index: 48
}
entry {
  value: "KM"
  label: "Comoros +269"
  index: 49
}
entry {
  value: "CG"
  label: "Congo +242"
  index: 50
}
entry {
  value: "CK"
  label: "Cook Islands +682"
  index: 51
}
entry {
  value: "CR"
  label: "Costa Rica +506"
  index: 52
}
entry {
  value: "HR"
  label: "Croatia +385"
  index: 53
}
entry {
  value: "CU"
  label: "Cuba +53"
  index: 54
}
entry {
  value: "CW"
  label: "Curaçao +599"
  index: 55
}
entry {
  value: "CY"
  label: "Cyprus +357"
  index: 56
}
entry {
  value: "CZ"
  label: "Czech Republic +420"
  index: 57
}
entry {
  value: "CD"
  label: "Democratic Republic of the Congo +243"
  index: 58
}
entry {
  value: "DK"
  label: "Denmark +45"
  index: 59
}
entry {
  value: "DJ"
  label: "Djibouti +253"
  index: 60
}
entry {
  value: "DM"
  label: "Dominica +1767"
  index: 61
}
entry {
  value: "DO"
  label: "Dominican Republic +1849"
  index: 62
}
entry {
  value: "TL"
  label: "East Timor +670"
  index: 63
}
entry {
  value: "EC"
  label: "Ecuador +593"
  index: 64
}
entry {
  value: "EG"
  label: "Egypt +20"
  index: 65
}
entry {
  value: "SV"
  label: "El Salvador +503"
  index: 66
}
entry {
  value: "GQ"
  label: "Equatorial Guinea +240"
  index: 67
}
entry {
  value: "ER"
  label: "Eritrea +291"
  index: 68
}
entry {
  value: "EE"
  label: "Estonia +372"
  index: 69
}
entry {
  value: "SZ"
  label: "Eswatini +268"
  index: 70
}
entry {
  value: "ET"
  label: "Ethiopia +251"
  index: 71
}
entry {
  value: "FK"
  label: "Falkland Islands (Malvinas) +500"
  index: 72
}
entry {
  value: "FO"
  label: "Faroe Islands +298"
  index: 73
}
entry {
  value: "FJ"
  label: "Fiji +679"
  index: 74
}
entry {
  value: "FI"
  label: "Finland +358"
  index: 75
  selected: true
}
entry {
  value: "FR"
  label: "France +33"
  index: 76
}
entry {
  value: "GF"
  label: "French Guiana +594"
  index: 77
}
entry {
  value: "PF"
  label: "French Polynesia +689"
  index: 78
}
entry {
  value: "TF"
  label: "French Southern Territories +596"
  index: 79
}
entry {
  value: "GA"
  label: "Gabon +241"
  index: 80
}
entry {
  value: "GM"
  label: "Gambia +220"
  index: 81
}
entry {
  value: "GE"
  label: "Georgia +995"
  index: 82
}
entry {
  value: "DE"
  label: "Germany +49"
  index: 83
}
entry {
  value: "GH"
  label: "Ghana +233"
  index: 84
}
entry {
  value: "GI"
  label: "Gibraltar +350"
  index: 85
}
entry {
  value: "GR"
  label: "Greece +30"
  index: 86
}
entry {
  value: "GL"
  label: "Greenland +299"
  index: 87
}
entry {
  value: "GD"
  label: "Grenada +1473"
  index: 88
}
entry {
  value: "GP"
  label: "Guadeloupe +590"
  index: 89
}
entry {
  value: "GU"
  label: "Guam +1671"
  index: 90
}
entry {
  value: "GT"
  label: "Guatemala +502"
  index: 91
}
entry {
  value: "GG"
  label: "Guernsey +44"
  index: 92
}
entry {
  value: "GN"
  label: "Guinea +224"
  index: 93
}
entry {
  value: "GW"
  label: "Guinea-Bissau +245"
  index: 94
}
entry {
  value: "GY"
  label: "Guyana +592"
  index: 95
}
entry {
  value: "HT"
  label: "Haiti +509"
  index: 96
}
entry {
  value: "HM"
  label: "Heard and McDonald Islands +692"
  index: 97
}
entry {
  value: "HN"
  label: "Honduras +504"
  index: 98
}
entry {
  value: "HK"
  label: "Hong Kong +852"
  index: 99
}
entry {
  value: "HU"
  label: "Hungary +36"
  index: 100
}
entry {
  value: "IS"
  label: "Iceland +354"
  index: 101
}
entry {
  value: "IN"
  label: "India +91"
  index: 102
}
entry {
  value: "ID"
  label: "Indonesia +62"
  index: 103
}
entry {
  value: "IR"
  label: "Iran +98"
  index: 104
}
entry {
  value: "IQ"
  label: "Iraq +964"
  index: 105
}
entry {
  value: "IE"
  label: "Ireland +353"
  index: 106
}
entry {
  value: "IM"
  label: "Isle of Man +44"
  index: 107
}
entry {
  value: "IL"
  label: "Israel +972"
  index: 108
}
entry {
  value: "IT"
  label: "Italy +39"
  index: 109
}
entry {
  value: "CI"
  label: "Ivory Coast +225"
  index: 110
}
entry {
  value: "JM"
  label: "Jamaica +1876"
  index: 111
}
entry {
  value: "JP"
  label: "Japan +81"
  index: 112
}
entry {
  value: "JE"
  label: "Jersey +44"
  index: 113
}
entry {
  value: "JO"
  label: "Jordan +962"
  index: 114
}
entry {
  value: "KZ"
  label: "Kazakhstan +7"
  index: 115
}
entry {
  value: "KE"
  label: "Kenya +254"
  index: 116
}
entry {
  value: "KI"
  label: "Kiribati +686"
  index: 117
}
entry {
  value: "XK"
  label: "Kosovo +383"
  index: 118
}
entry {
  value: "KW"
  label: "Kuwait +965"
  index: 119
}
entry {
  value: "KG"
  label: "Kyrgyzstan +996"
  index: 120
}
entry {
  value: "LA"
  label: "Laos +856"
  index: 121
}
entry {
  value: "LV"
  label: "Latvia +371"
  index: 122
}
entry {
  value: "LB"
  label: "Lebanon +961"
  index: 123
}
entry {
  value: "LS"
  label: "Lesotho +266"
  index: 124
}
entry {
  value: "LR"
  label: "Liberia +231"
  index: 125
}
entry {
  value: "LY"
  label: "Libya +218"
  index: 126
}
entry {
  value: "LI"
  label: "Liechtenstein +423"
  index: 127
}
entry {
  value: "LT"
  label: "Lithuania +370"
  index: 128
}
entry {
  value: "LU"
  label: "Luxembourg +352"
  index: 129
}
entry {
  value: "MO"
  label: "Macau +853"
  index: 130
}
entry {
  value: "MG"
  label: "Madagascar +261"
  index: 131
}
entry {
  value: "MW"
  label: "Malawi +265"
  index: 132
}
entry {
  value: "MY"
  label: "Malaysia +60"
  index: 133
}
entry {
  value: "MV"
  label: "Maldives +960"
  index: 134
}
entry {
  value: "ML"
  label: "Mali +223"
  index: 135
}
entry {
  value: "MT"
  label: "Malta +356"
  index: 136
}
entry {
  value: "MH"
  label: "Marshall Islands +692"
  index: 137
}
entry {
  value: "MQ"
  label: "Martinique +596"
  index: 138
}
entry {
  value: "MR"
  label: "Mauritania +222"
  index: 139
}
entry {
  value: "MU"
  label: "Mauritius +230"
  index: 140
}
entry {
  value: "YT"
  label: "Mayotte +269"
  index: 141
}
entry {
  value: "MX"
  label: "Mexico +52"
  index: 142
}
entry {
  value: "FM"
  label: "Micronesia +691"
  index: 143
}
entry {
  value: "MD"
  label: "Moldova +373"
  index: 144
}
entry {
  value: "MC"
  label: "Monaco +377"
  index: 145
}
entry {
  value: "MN"
  label: "Mongolia +976"
  index: 146
}
entry {
  value: "ME"
  label: "Montenegro +382"
  index: 147
}
entry {
  value: "MS"
  label: "Montserrat +1664"
  index: 148
}
entry {
  value: "MA"
  label: "Morocco +212"
  index: 149
}
entry {
  value: "MZ"
  label: "Mozambique +258"
  index: 150
}
entry {
  value: "MM"
  label: "Myanmar +95"
  index: 151
}
entry {
  value: "NA"
  label: "Namibia +264"
  index: 152
}
entry {
  value: "NR"
  label: "Nauru +674"
  index: 153
}
entry {
  value: "NP"
  label: "Nepal +977"
  index: 154
}
entry {
  value: "NL"
  label: "Netherlands +31"
  index: 155
}
entry {
  value: "NC"
  label: "New Caledonia +687"
  index: 156
}
entry {
  value: "NZ"
  label: "New Zealand +64"
  index: 157
}
entry {
  value: "NI"
  label: "Nicaragua +505"
  index: 158
}
entry {
  value: "NE"
  label: "Niger +227"
  index: 159
}
entry {
  value: "NG"
  label: "Nigeria +234"
  index: 160
}
entry {
  value: "NU"
  label: "Niue +683"
  index: 161
}
entry {
  value: "NF"
  label: "Norfolk Island +672"
  index: 162
}
entry {
  value: "KP"
  label: "North Korea +850"
  index: 163
}
entry {
  value: "MK"
  label: "North Macedonia +389"
  index: 164
}
entry {
  value: "MP"
  label: "Northern Mariana Islands +1670"
  index: 165
}
entry {
  value: "NO"
  label: "Norway +47"
  index: 166
}
entry {
  value: "OM"
  label: "Oman +968"
  index: 167
}
entry {
  value: "PK"
  label: "Pakistan +92"
  index: 168
}
entry {
  value: "PW"
  label: "Palau +680"
  index: 169
}
entry {
  value: "PS"
  label: "Palestinian Territory +970"
  index: 170
}
entry {
  value: "PA"
  label: "Panama +507"
  index: 171
}
entry {
  value: "PG"
  label: "Papua New Guinea +675"
  index: 172
}
entry {
  value: "PY"
  label: "Paraguay +595"
  index: 173
}
entry {
  value: "PE"
  label: "Peru +51"
  index: 174
}
entry {
  value: "PH"
  label: "Philippines +63"
  index: 175
}
entry {
  value: "PN"
  label: "Pitcairn +872"
  index: 176
}
entry {
  value: "PL"
  label: "Poland +48"
  index: 177
}
entry {
  value: "PT"
  label: "Portugal +351"
  index: 178
}
entry {
  value: "PR"
  label: "Puerto Rico +1939"
  index: 179
}
entry {
  value: "QA"
  label: "Qatar +974"
  index: 180
}
entry {
  value: "RE"
  label: "Reunion +262"
  index: 181
}
entry {
  value: "RO"
  label: "Romania +40"
  index: 182
}
entry {
  value: "RU"
  label: "Russia +7"
  index: 183
}
entry {
  value: "RW"
  label: "Rwanda +250"
  index: 184
}
entry {
  value: "BL"
  label: "Saint Barts +590"
  index: 185
}
entry {
  value: "KN"
  label: "Saint Kitts and Nevis +1869"
  index: 186
}
entry {
  value: "LC"
  label: "Saint Lucia +1758"
  index: 187
}
entry {
  value: "MF"
  label: "Saint Martin +590"
  index: 188
}
entry {
  value: "VC"
  label: "Saint Vincent &amp; Grenadines +1784"
  index: 189
}
entry {
  value: "WS"
  label: "Samoa +685"
  index: 190
}
entry {
  value: "SM"
  label: "San Marino +378"
  index: 191
}
entry {
  value: "SA"
  label: "Saudi Arabia +966"
  index: 192
}
entry {
  value: "SN"
  label: "Senegal +221"
  index: 193
}
entry {
  value: "RS"
  label: "Serbia +381"
  index: 194
}
entry {
  value: "SC"
  label: "Seychelles +248"
  index: 195
}
entry {
  value: "SL"
  label: "Sierra Leone +232"
  index: 196
}
entry {
  value: "SG"
  label: "Singapore +65"
  index: 197
}
entry {
  value: "SK"
  label: "Slovakia +421"
  index: 198
}
entry {
  value: "SI"
  label: "Slovenia +386"
  index: 199
}
entry {
  value: "SB"
  label: "Solomon Islands +677"
  index: 200
}
entry {
  value: "SO"
  label: "Somalia +252"
  index: 201
}
entry {
  value: "ZA"
  label: "South Africa +27"
  index: 202
}
entry {
  value: "GS"
  label: "South Georgia and the South Sandwi… +500"
  index: 203
}
entry {
  value: "KR"
  label: "South Korea +82"
  index: 204
}
entry {
  value: "SS"
  label: "South Sudan +211"
  index: 205
}
entry {
  value: "ES"
  label: "Spain +34"
  index: 206
}
entry {
  value: "LK"
  label: "Sri Lanka +94"
  index: 207
}
entry {
  value: "SH"
  label: "St. Helena +290"
  index: 208
}
entry {
  value: "SX"
  label: "St. Maarten +1721"
  index: 209
}
entry {
  value: "PM"
  label: "St. Pierre and Miquelon +508"
  index: 210
}
entry {
  value: "SD"
  label: "Sudan +249"
  index: 211
}
entry {
  value: "SR"
  label: "Suriname +597"
  index: 212
}
entry {
  value: "SJ"
  label: "Svalbard &amp; Jan Mayen +378"
  index: 213
}
entry {
  value: "SE"
  label: "Sweden +46"
  index: 214
}
entry {
  value: "CH"
  label: "Switzerland +41"
  index: 215
}
entry {
  value: "SY"
  label: "Syria +963"
  index: 216
}
entry {
  value: "ST"
  label: "São Tomé and Príncipe +239"
  index: 217
}
entry {
  value: "TW"
  label: "Taiwan +886"
  index: 218
}
entry {
  value: "TJ"
  label: "Tajikistan +992"
  index: 219
}
entry {
  value: "TZ"
  label: "Tanzania +255"
  index: 220
}
entry {
  value: "TH"
  label: "Thailand +66"
  index: 221
}
entry {
  value: "TG"
  label: "Togo +228"
  index: 222
}
entry {
  value: "TK"
  label: "Tokelau +690"
  index: 223
}
entry {
  value: "TO"
  label: "Tonga +676"
  index: 224
}
entry {
  value: "TT"
  label: "Trinidad and Tobago +1868"
  index: 225
}
entry {
  value: "TN"
  label: "Tunisia +216"
  index: 226
}
entry {
  value: "TR"
  label: "Turkey +90"
  index: 227
}
entry {
  value: "TM"
  label: "Turkmenistan +993"
  index: 228
}
entry {
  value: "TC"
  label: "Turks &amp; Caicos Islands +1649"
  index: 229
}
entry {
  value: "TV"
  label: "Tuvalu +688"
  index: 230
}
entry {
  value: "VI"
  label: "U.S. Virgin Islands +1340"
  index: 231
}
entry {
  value: "UG"
  label: "Uganda +256"
  index: 232
}
entry {
  value: "UA"
  label: "Ukraine +380"
  index: 233
}
entry {
  value: "AE"
  label: "United Arab Emirates +971"
  index: 234
}
entry {
  value: "GB"
  label: "United Kingdom +44"
  index: 235
}
entry {
  value: "UM"
  label: "United States Minor Outlying Islan… +1"
  index: 236
}
entry {
  value: "US"
  label: "United States of America +1"
  index: 237
}
entry {
  value: "UY"
  label: "Uruguay +598"
  index: 238
}
entry {
  value: "UZ"
  label: "Uzbekistan +998"
  index: 239
}
entry {
  value: "VU"
  label: "Vanuatu +678"
  index: 240
}
entry {
  value: "VA"
  label: "Vatican City +379"
  index: 241
}
entry {
  value: "VE"
  label: "Venezuela +58"
  index: 242
}
entry {
  value: "VN"
  label: "Vietnam +84"
  index: 243
}
entry {
  value: "WF"
  label: "Wallis and Futuna +681"
  index: 244
}
entry {
  value: "YE"
  label: "Yemen +967"
  index: 245
}
entry {
  value: "ZM"
  label: "Zambia +260"
  index: 246
}
entry {
  value: "ZW"
  label: "Zimbabwe +263"
  index: 247
}
</msg>
<msg timestamp="20230815 08:28:28.243" level="TRACE">Return: ['FI']</msg>
<status status="PASS" starttime="20230815 08:28:28.216" endtime="20230815 08:28:28.243"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=phone</arg>
<arg>${phone}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.243" level="TRACE">Arguments: [ 'id=phone' | '0401234567' ]</msg>
<msg timestamp="20230815 08:28:28.243" level="INFO">Fills the text '0401234567' in the given field.</msg>
<msg timestamp="20230815 08:28:28.252" level="DEBUG">Fill text 0401234567 on id=phone with force: false</msg>
<msg timestamp="20230815 08:28:28.252" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.243" endtime="20230815 08:28:28.252"/>
</kw>
<msg timestamp="20230815 08:28:28.252" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:22.909" endtime="20230815 08:28:28.252"/>
</kw>
<kw name="Fill in Card Details" library="EC">
<msg timestamp="20230815 08:28:28.252" level="TRACE">Arguments: [  ]</msg>
<kw name="Click and Fill" library="common">
<arg>id=cc_name</arg>
<arg>Card Holder</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:28.252" level="TRACE">Arguments: [ ${selector}='id=cc_name' | ${text}='Card Holder' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.252" level="TRACE">Arguments: [ 'id=cc_name' ]</msg>
<msg timestamp="20230815 08:28:28.253" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:28.308" level="DEBUG">Clicked element: 'id=cc_name' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:28.308" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.252" endtime="20230815 08:28:28.308"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.308" level="TRACE">Arguments: [ 'id=cc_name' | 'Card Holder' ]</msg>
<msg timestamp="20230815 08:28:28.308" level="INFO">Fills the text 'Card Holder' in the given field.</msg>
<msg timestamp="20230815 08:28:28.316" level="DEBUG">Fill text Card Holder on id=cc_name with force: false</msg>
<msg timestamp="20230815 08:28:28.316" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.308" endtime="20230815 08:28:28.316"/>
</kw>
<msg timestamp="20230815 08:28:28.316" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.252" endtime="20230815 08:28:28.316"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_type</arg>
<arg>value</arg>
<arg>Visa</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.316" level="TRACE">Arguments: [ 'id=cc_type' | &lt;SelectAttribute.value: 1&gt; | 'Visa' ]</msg>
<msg timestamp="20230815 08:28:28.333" level="DEBUG">entry {
  label: "-- Select --"
}
entry {
  value: "MasterCard"
  label: "MasterCard"
  index: 1
}
entry {
  value: "Visa"
  label: "Visa"
  index: 2
  selected: true
}
</msg>
<msg timestamp="20230815 08:28:28.333" level="TRACE">Return: ['Visa']</msg>
<status status="PASS" starttime="20230815 08:28:28.316" endtime="20230815 08:28:28.333"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_number</arg>
<arg>4153013999700321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:28.333" level="TRACE">Arguments: [ ${selector}='id=cc_number' | ${text}='4153013999700321' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.333" level="TRACE">Arguments: [ 'id=cc_number' ]</msg>
<msg timestamp="20230815 08:28:28.334" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:28.407" level="DEBUG">Clicked element: 'id=cc_number' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:28.407" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.333" endtime="20230815 08:28:28.407"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.408" level="TRACE">Arguments: [ 'id=cc_number' | '4153013999700321' ]</msg>
<msg timestamp="20230815 08:28:28.408" level="INFO">Fills the text '4153013999700321' in the given field.</msg>
<msg timestamp="20230815 08:28:28.423" level="DEBUG">Fill text 4153013999700321 on id=cc_number with force: false</msg>
<msg timestamp="20230815 08:28:28.423" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.407" endtime="20230815 08:28:28.423"/>
</kw>
<msg timestamp="20230815 08:28:28.424" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.333" endtime="20230815 08:28:28.424"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=cc_month</arg>
<arg>value</arg>
<arg>11</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.424" level="TRACE">Arguments: [ 'id=cc_month' | &lt;SelectAttribute.value: 1&gt; | '11' ]</msg>
<msg timestamp="20230815 08:28:28.439" level="DEBUG">entry {
  value: "01"
  label: "01 - Jan"
}
entry {
  value: "02"
  label: "02 - Feb"
  index: 1
}
entry {
  value: "03"
  label: "03 - Mar"
  index: 2
}
entry {
  value: "04"
  label: "04 - Apr"
  index: 3
}
entry {
  value: "05"
  label: "05 - May"
  index: 4
}
entry {
  value: "06"
  label: "06 - Jun"
  index: 5
}
entry {
  value: "07"
  label: "07 - Jul"
  index: 6
}
entry {
  value: "08"
  label: "08 - Aug"
  index: 7
}
entry {
  value: "09"
  label: "09 - Sep"
  index: 8
}
entry {
  value: "10"
  label: "10 - Oct"
  index: 9
}
entry {
  value: "11"
  label: "11 - Nov"
  index: 10
  selected: true
}
entry {
  value: "12"
  label: "12 - Dec"
  index: 11
}
</msg>
<msg timestamp="20230815 08:28:28.439" level="TRACE">Return: ['11']</msg>
<status status="PASS" starttime="20230815 08:28:28.424" endtime="20230815 08:28:28.439"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=ccYear</arg>
<arg>value</arg>
<arg>2023</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.440" level="TRACE">Arguments: [ 'id=ccYear' | &lt;SelectAttribute.value: 1&gt; | '2023' ]</msg>
<msg timestamp="20230815 08:28:28.452" level="DEBUG">entry {
  value: "2023"
  label: "2023"
  selected: true
}
entry {
  value: "2024"
  label: "2024"
  index: 1
}
entry {
  value: "2025"
  label: "2025"
  index: 2
}
entry {
  value: "2026"
  label: "2026"
  index: 3
}
entry {
  value: "2027"
  label: "2027"
  index: 4
}
entry {
  value: "2028"
  label: "2028"
  index: 5
}
entry {
  value: "2029"
  label: "2029"
  index: 6
}
entry {
  value: "2030"
  label: "2030"
  index: 7
}
entry {
  value: "2031"
  label: "2031"
  index: 8
}
entry {
  value: "2032"
  label: "2032"
  index: 9
}
entry {
  value: "2033"
  label: "2033"
  index: 10
}
entry {
  value: "2034"
  label: "2034"
  index: 11
}
entry {
  value: "2035"
  label: "2035"
  index: 12
}
entry {
  value: "2036"
  label: "2036"
  index: 13
}
entry {
  value: "2037"
  label: "2037"
  index: 14
}
entry {
  value: "2038"
  label: "2038"
  index: 15
}
entry {
  value: "2039"
  label: "2039"
  index: 16
}
entry {
  value: "2040"
  label: "2040"
  index: 17
}
entry {
  value: "2041"
  label: "2041"
  index: 18
}
entry {
  value: "2042"
  label: "2042"
  index: 19
}
entry {
  value: "2043"
  label: "2043"
  index: 20
}
entry {
  value: "2044"
  label: "2044"
  index: 21
}
entry {
  value: "2045"
  label: "2045"
  index: 22
}
entry {
  value: "2046"
  label: "2046"
  index: 23
}
entry {
  value: "2047"
  label: "2047"
  index: 24
}
entry {
  value: "2048"
  label: "2048"
  index: 25
}
entry {
  value: "2049"
  label: "2049"
  index: 26
}
entry {
  value: "2050"
  label: "2050"
  index: 27
}
entry {
  value: "2051"
  label: "2051"
  index: 28
}
entry {
  value: "2052"
  label: "2052"
  index: 29
}
entry {
  value: "2053"
  label: "2053"
  index: 30
}
</msg>
<msg timestamp="20230815 08:28:28.452" level="TRACE">Return: ['2023']</msg>
<status status="PASS" starttime="20230815 08:28:28.439" endtime="20230815 08:28:28.452"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cc_cvc</arg>
<arg>321</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:28:28.453" level="TRACE">Arguments: [ ${selector}='id=cc_cvc' | ${text}='321' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.453" level="TRACE">Arguments: [ 'id=cc_cvc' ]</msg>
<msg timestamp="20230815 08:28:28.453" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:28.598" level="DEBUG">Clicked element: 'id=cc_cvc' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:28.598" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.453" endtime="20230815 08:28:28.598"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.598" level="TRACE">Arguments: [ 'id=cc_cvc' | '321' ]</msg>
<msg timestamp="20230815 08:28:28.598" level="INFO">Fills the text '321' in the given field.</msg>
<msg timestamp="20230815 08:28:28.605" level="DEBUG">Fill text 321 on id=cc_cvc with force: false</msg>
<msg timestamp="20230815 08:28:28.605" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.598" endtime="20230815 08:28:28.605"/>
</kw>
<msg timestamp="20230815 08:28:28.605" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.453" endtime="20230815 08:28:28.605"/>
</kw>
<msg timestamp="20230815 08:28:28.605" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.252" endtime="20230815 08:28:28.605"/>
</kw>
<kw name="Click BDC Book Button">
<msg timestamp="20230815 08:28:28.605" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//button[@name='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:28:28.605" level="TRACE">Arguments: [ "//button[@name='book']" ]</msg>
<msg timestamp="20230815 08:28:28.606" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:28:28.769" level="DEBUG">Clicked element: '//button[@name='book']' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:28:28.769" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.605" endtime="20230815 08:28:28.769"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${longer}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:28:28.770" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:28.770" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:28:28.770" endtime="20230815 08:28:28.770"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(@class, 'bui-modal__close')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:28:28.770" level="TRACE">Arguments: [ ${element}="//button[contains(@class, 'bui-modal__close')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:28:28.771" level="TRACE">Arguments: [ "//button[contains(@class, 'bui-modal__close')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:28:44.429" level="INFO">Waited for Element with selector //button[contains(@class, 'bui-modal__close')] at state visible</msg>
<msg timestamp="20230815 08:28:44.430" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.770" endtime="20230815 08:28:44.430"/>
</kw>
<msg timestamp="20230815 08:28:44.431" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.770" endtime="20230815 08:28:44.431"/>
</kw>
<msg timestamp="20230815 08:28:44.431" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:28.605" endtime="20230815 08:28:44.431"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:28:22.908" endtime="20230815 08:28:44.431"/>
</test>
<test id="s1-s2-s1-s2-t4" name="Verify Emails and Get Booking No" line="71">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<msg timestamp="20230815 08:28:44.434" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: ${inbox_id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:28:44.434" level="TRACE">Arguments: [ 'Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<msg timestamp="20230815 08:28:44.435" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:28:44.434" endtime="20230815 08:28:44.435"/>
</kw>
<msg timestamp="20230815 08:28:44.435" level="TRACE">Return: '492aa3bb-9e4b-410a-a02c-84f13ace89e8'</msg>
<msg timestamp="20230815 08:28:44.435" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230815 08:28:44.434" endtime="20230815 08:28:44.435"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${confirmationEmail}</var>
<arg>${id}</arg>
<arg>is confirmed</arg>
<msg timestamp="20230815 08:28:44.435" level="TRACE">Arguments: [ '492aa3bb-9e4b-410a-a02c-84f13ace89e8' | 'is confirmed' ]</msg>
<msg timestamp="20230815 08:29:45.989" level="FAIL">ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:29:45 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1061', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `492aa3bb-9e4b-410a-a02c-84f13ace89e8` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"is confirmed\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-9d78cd04-9039-457d-916a-60fa7cb81aa1","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}
</msg>
<msg timestamp="20230815 08:29:45.993" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/resources/libraries/MailSlurp.py", line 78, in wait_for_latest_booking_confirmation
    emails = api_instance.wait_for_matching_emails(inbox_id=inbox_id, match_options=match_options, timeout=60000, unread_only=True, count=10)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api/wait_for_controller_api.py", line 602, in wait_for_matching_emails
    return self.wait_for_matching_emails_with_http_info(inbox_id, count, match_options, **kwargs)  # noqa: E501
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api/wait_for_controller_api.py", line 723, in wait_for_matching_emails_with_http_info
    return self.api_client.call_api(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 365, in call_api
    return self.__call_api(resource_path, method,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 189, in __call_api
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 182, in __call_api
    response_data = self.request(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/api_client.py", line 408, in request
    return self.rest_client.POST(url,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/rest.py", line 266, in POST
    return self.request("POST", url,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/mailslurp_client/rest.py", line 225, in request
    raise ApiException(http_resp=r)
mailslurp_client.exceptions.ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:29:45 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1061', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `492aa3bb-9e4b-410a-a02c-84f13ace89e8` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"is confirmed\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-9d78cd04-9039-457d-916a-60fa7cb81aa1","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}</msg>
<status status="FAIL" starttime="20230815 08:28:44.435" endtime="20230815 08:29:45.993"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${welcomeEmail}</var>
<arg>${id}</arg>
<arg>Booking confirmation</arg>
<status status="NOT RUN" starttime="20230815 08:29:45.996" endtime="20230815 08:29:45.996"/>
</kw>
<kw name="Get Confirmation Number from Email" library="MailSlurp">
<var>${bookingNo}</var>
<arg>${welcomeEmail}</arg>
<status status="NOT RUN" starttime="20230815 08:29:45.996" endtime="20230815 08:29:45.997"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BDCNo}</arg>
<arg>${bookingNo}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230815 08:29:45.997" endtime="20230815 08:29:45.997"/>
</kw>
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:28:44.433" endtime="20230815 08:29:45.998">ApiException: (408)
Reason: 
HTTP response headers: HTTPHeaderDict({'Date': 'Tue, 15 Aug 2023 05:29:45 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '1061', 'Connection': 'keep-alive', 'X-XSS-Protection': '1; mode=block', 'Referrer-Policy': 'same-origin', 'Strict-Transport-Security': 'max-age=63072000; includeSubdomains; preload', 'X-Content-Type-Options': 'nosniff', 'Content-Security-Policy': "default-src https: 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; object-src none; frame-ancestors 'self' app.mailslurp.com *.mailslurp.com *.mailslurp.link *.mailslurp.dev http://localhost:3000; img-src * data: 'unsafe-inline'; style-src * data: 'unsafe-inline';", 'Vary': 'origin,access-control-request-method,access-control-request-headers,accept-encoding', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Pragma': 'no-cache', 'Expires': '0', 'X-Frame-Options': 'DENY'})
HTTP response body: {"message":"Failed to satisfy email query for inbox ID `492aa3bb-9e4b-410a-a02c-84f13ace89e8` for user ID `a2f48756-8279-471d-bb55-980a32334d37`. Expected minimum message count of `10`. Found at most `1`(after max timeout of `60000 ms` and a back-off period of `1000 ms`). Did you send an email to the inbox? The inbox's email address is `492aa3bb-9e4b-410a-a02c-84f13ace89e8@mailslurp.com`. Sort direction `ASC`, unread only `true`, match options `{\"matches\":[{\"field\":\"SUBJECT\",\"should\":\"CONTAIN\",\"value\":\"is confirmed\"}],\"conditions\":null}`, created at after `2000-01-01T00:00:00Z` and created at before `3000-01-01T00:00:00Z`","caseNumber":"CASE-NF-9d78cd04-9039-457d-916a-60fa7cb81aa1","errorClass":"GetMessagesRetryException","errorCode":"E_001_UNEXPECTED_ERROR","comment":"If your error persists please submit a ticket at `https://mailslurp.zendesk.com/hc/en-us/requests/new`. Please include your error `caseNumber` if available to help support debug the issue. Sharing screenshots or samples of your code will help the team understand."}
</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:29:46.019" level="TRACE">Arguments: [ 'ALL' ]</msg>
<msg timestamp="20230815 08:29:46.364" level="INFO">Closed all browsers</msg>
<msg timestamp="20230815 08:29:46.364" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:46.018" endtime="20230815 08:29:46.364"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:28:14.021" endtime="20230815 08:29:46.364"/>
</suite>
<suite id="s1-s2-s1-s3" name="Create Bui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bui_booking.robot">
<kw name="Set Browser Timeout" library="Browser" type="SETUP">
<arg>8s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:46.379" level="TRACE">Arguments: [ datetime.timedelta(seconds=8) ]</msg>
<msg timestamp="20230815 08:29:46.380" level="DEBUG">Suppress error Error: Browser has been closed. when setting timeout.</msg>
<msg timestamp="20230815 08:29:46.380" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:46.379" endtime="20230815 08:29:46.380"/>
</kw>
<test id="s1-s2-s1-s3-t1" name="Open Kensington Stay Home Page" line="13">
<kw name="Open New Browser To KS Home Page" library="kensington_stay">
<msg timestamp="20230815 08:29:46.381" level="TRACE">Arguments: [  ]</msg>
<if>
<branch type="IF" condition="'${ENVIRONMENT}' == 'test'">
<kw name="Open New Browser To URL" library="common">
<arg>${url.test.ks_home}</arg>
<status status="NOT RUN" starttime="20230815 08:29:46.381" endtime="20230815 08:29:46.381"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:29:46.381" endtime="20230815 08:29:46.381"/>
</branch>
<branch type="ELSE">
<kw name="Open New Browser To URL" library="common">
<arg>${url.prod.ks_home}</arg>
<msg timestamp="20230815 08:29:46.381" level="TRACE">Arguments: [ ${url}='https://test.kensingtonstay.com' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:29:46.381" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:46.382" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b3afaeff-7ce0-4044-93a0-b492740c52ae"}</msg>
<msg timestamp="20230815 08:29:46.866" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b3afaeff-7ce0-4044-93a0-b492740c52ae"}</msg>
<msg timestamp="20230815 08:29:46.866" level="TRACE">Return: 'browser=d64534fc-879e-40c8-bd8e-4d88f6ebc1e0'</msg>
<status status="PASS" starttime="20230815 08:29:46.381" endtime="20230815 08:29:46.866"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:46.866" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:46.867" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:29:46.867" level="TRACE">Return: '8 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:46.866" endtime="20230815 08:29:46.867"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:29:46.867" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:46.867" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:29:46.881" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:29:46.881" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:29:46.881" level="TRACE">Return: 'context=8d8de2ee-73ba-458c-9a95-057e7abc625a'</msg>
<status status="PASS" starttime="20230815 08:29:46.867" endtime="20230815 08:29:46.881"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:29:46.881" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com' ]</msg>
<msg timestamp="20230815 08:29:48.806" level="INFO">Successfully initialized new page object and opened url: https://test.kensingtonstay.com</msg>
<msg timestamp="20230815 08:29:48.806" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:29:48.806" level="TRACE">Return: {'page_id': 'page=a4f41d5c-4b82-4ba2-ba94-99e484d767fd', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:29:46.881" endtime="20230815 08:29:48.806"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:29:48.807" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:29:48.807" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:48.809" level="DEBUG">https://test.kensingtonstay.com/</msg>
<msg timestamp="20230815 08:29:48.809" level="TRACE">Return: 'https://test.kensingtonstay.com/'</msg>
<msg timestamp="20230815 08:29:48.809" level="INFO">${currentUrl} = https://test.kensingtonstay.com/</msg>
<status status="PASS" starttime="20230815 08:29:48.807" endtime="20230815 08:29:48.809"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:29:48.809" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com/' ]</msg>
<msg timestamp="20230815 08:29:48.809" level="TRACE">Return: 'test-kensington'</msg>
<msg timestamp="20230815 08:29:48.809" level="INFO">${env} = test-kensington</msg>
<status status="PASS" starttime="20230815 08:29:48.809" endtime="20230815 08:29:48.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Arguments: [ '' | 'test-kensington' ]</msg>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Return: ['', 'test-kensington']</msg>
<status status="PASS" starttime="20230815 08:29:48.809" endtime="20230815 08:29:48.810"/>
</kw>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:48.806" endtime="20230815 08:29:48.810"/>
</kw>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:46.381" endtime="20230815 08:29:48.810"/>
</kw>
<status status="PASS" starttime="20230815 08:29:46.381" endtime="20230815 08:29:48.810"/>
</branch>
<status status="PASS" starttime="20230815 08:29:46.381" endtime="20230815 08:29:48.810"/>
</if>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:46.380" endtime="20230815 08:29:48.810"/>
</kw>
<kw name="Get Title" library="Browser">
<var>${title}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the title of the current page.</doc>
<msg timestamp="20230815 08:29:48.810" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:48.818" level="DEBUG">Active page title is: Kensington Stay</msg>
<msg timestamp="20230815 08:29:48.818" level="INFO">Title: 'Kensington Stay'</msg>
<msg timestamp="20230815 08:29:48.818" level="TRACE">Return: 'Kensington Stay'</msg>
<msg timestamp="20230815 08:29:48.818" level="INFO">${title} = Kensington Stay</msg>
<status status="PASS" starttime="20230815 08:29:48.810" endtime="20230815 08:29:48.818"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${title}</arg>
<arg>Kensington Stay</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20230815 08:29:48.818" level="TRACE">Arguments: [ 'Kensington Stay' | 'Kensington Stay' ]</msg>
<msg timestamp="20230815 08:29:48.818" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20230815 08:29:48.818" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:48.818" endtime="20230815 08:29:48.818"/>
</kw>
<kw name="Verify Texts" library="common">
<arg>Check In</arg>
<arg>Book</arg>
<arg>What to do</arg>
<arg>How it Works</arg>
<doc>Verifies that the given texts are visible on the page, Browser Timeout
is set to 8 seconds to speed up the test
Takes a list of strings as an argument</doc>
<msg timestamp="20230815 08:29:48.818" level="TRACE">Arguments: [ @{listOfStrings}=['Check In', 'Book', 'What to do', 'How it Works'] ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>8s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:48.819" level="TRACE">Arguments: [ datetime.timedelta(seconds=8) ]</msg>
<msg timestamp="20230815 08:29:48.821" level="INFO">Set timeout to: 8000</msg>
<msg timestamp="20230815 08:29:48.822" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:48.819" endtime="20230815 08:29:48.822"/>
</kw>
<for flavor="IN">
<var>${text}</var>
<value>@{listOfStrings}</value>
<iter>
<var name="${text}">Check In</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:48.823" level="TRACE">Arguments: [ 'text=Check In' ]</msg>
<msg timestamp="20230815 08:29:48.858" level="INFO">Found Locator@text=Check In &gt;&gt; nth=0,Locator@text=Check In &gt;&gt; nth=1 Locators successfully.</msg>
<msg timestamp="20230815 08:29:48.858" level="DEBUG">["text=Check In &gt;&gt; nth=0","text=Check In &gt;&gt; nth=1"]</msg>
<msg timestamp="20230815 08:29:48.858" level="TRACE">Return: ['text=Check In &gt;&gt; nth=0', 'text=Check In &gt;&gt; nth=1']</msg>
<msg timestamp="20230815 08:29:48.858" level="INFO">${elements} = ['text=Check In &gt;&gt; nth=0', 'text=Check In &gt;&gt; nth=1']</msg>
<status status="PASS" starttime="20230815 08:29:48.823" endtime="20230815 08:29:48.858"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:48.859" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:48.859" level="TRACE">Arguments: [ ${selector}='text=Check In &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:48.859" level="TRACE">Arguments: [ 'text=Check In &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:48.932" level="DEBUG">States: 2137</msg>
<msg timestamp="20230815 08:29:48.932" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.0727837085723877 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:48.932" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:29:48.932" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:29:48.859" endtime="20230815 08:29:48.932"/>
</kw>
<msg timestamp="20230815 08:29:48.932" level="TRACE">Return: False</msg>
<status status="PASS" starttime="20230815 08:29:48.859" endtime="20230815 08:29:48.932"/>
</kw>
<msg timestamp="20230815 08:29:48.932" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:48.932" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:48.859" endtime="20230815 08:29:48.932"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:48.933" level="TRACE">Arguments: [ True | "The element containing text 'Check In' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:48.933" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:48.933" endtime="20230815 08:29:48.933"/>
</kw>
<status status="PASS" starttime="20230815 08:29:48.822" endtime="20230815 08:29:48.933"/>
</iter>
<iter>
<var name="${text}">Book</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:48.933" level="TRACE">Arguments: [ 'text=Book' ]</msg>
<msg timestamp="20230815 08:29:48.952" level="INFO">Found Locator@text=Book &gt;&gt; nth=0,Locator@text=Book &gt;&gt; nth=1,Locator@text=Book &gt;&gt; nth=2,Locator@text=Book &gt;&gt; nth=3,Locator@text=Book &gt;&gt; nth=4,Locator@text=Book &gt;&gt; nth=5,Locator@text=Book &gt;&gt; nth=6,Locator@text=Book &gt;&gt; nth=7,Locator@text=Book &gt;&gt; nth=8,Locator@text=Book &gt;&gt; nth=9,Locator@text=Book &gt;&gt; nth=10,Locator@text=Book &gt;&gt; nth=11,Locator@text=Book &gt;&gt; nth=12 Locators successfully.</msg>
<msg timestamp="20230815 08:29:48.952" level="DEBUG">["text=Book &gt;&gt; nth=0","text=Book &gt;&gt; nth=1","text=Book &gt;&gt; nth=2","text=Book &gt;&gt; nth=3","text=Book &gt;&gt; nth=4","text=Book &gt;&gt; nth=5","text=Book &gt;&gt; nth=6","text=Book &gt;&gt; nth=7","text=Book &gt;&gt; nth=8","text=Book &gt;&gt; nth=9","text=Book &gt;&gt; nth=10","text=Book &gt;&gt; nth=11","text=Book &gt;&gt; nth=12"]</msg>
<msg timestamp="20230815 08:29:48.952" level="TRACE">Return: ['text=Book &gt;&gt; nth=0',
 'text=Book &gt;&gt; nth=1',
 'text=Book &gt;&gt; nth=2',
 'text=Book &gt;&gt; nth=3',
 'text=Book &gt;&gt; nth=4',
 'text=Book &gt;&gt; nth=5',
 'text=Book &gt;&gt; nth=6',
 'text=Book &gt;&gt; nth=7',
 'text=Book &gt;&gt; nth=8',
 'text=Book &gt;&gt; nth=9',
 'text=Book &gt;&gt; nth=10',
 'text=Book &gt;&gt; nth=11',
 'text=Book &gt;&gt; nth=12']</msg>
<msg timestamp="20230815 08:29:48.952" level="INFO">${elements} = ['text=Book &gt;&gt; nth=0', 'text=Book &gt;&gt; nth=1', 'text=Book &gt;&gt; nth=2', 'text=Book &gt;&gt; nth=3', 'text=Book &gt;&gt; nth=4', 'text=Book &gt;&gt; nth=5', 'text=Book &gt;&gt; nth=6', 'text=Book &gt;&gt; nth=7', 'text=Book &gt;&gt; nth=8', '...</msg>
<status status="PASS" starttime="20230815 08:29:48.933" endtime="20230815 08:29:48.952"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:48.953" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:48.953" level="TRACE">Arguments: [ ${selector}='text=Book &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:48.953" level="TRACE">Arguments: [ 'text=Book &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:49.010" level="DEBUG">States: 2137</msg>
<msg timestamp="20230815 08:29:49.010" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.05708622932434082 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:49.010" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:29:49.010" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:29:48.953" endtime="20230815 08:29:49.010"/>
</kw>
<msg timestamp="20230815 08:29:49.010" level="TRACE">Return: False</msg>
<status status="PASS" starttime="20230815 08:29:48.953" endtime="20230815 08:29:49.011"/>
</kw>
<msg timestamp="20230815 08:29:49.011" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:49.011" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:48.953" endtime="20230815 08:29:49.011"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:49.011" level="TRACE">Arguments: [ True | "The element containing text 'Book' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:49.011" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.011" endtime="20230815 08:29:49.011"/>
</kw>
<status status="PASS" starttime="20230815 08:29:48.933" endtime="20230815 08:29:49.011"/>
</iter>
<iter>
<var name="${text}">What to do</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.011" level="TRACE">Arguments: [ 'text=What to do' ]</msg>
<msg timestamp="20230815 08:29:49.027" level="INFO">Found Locator@text=What to do &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:29:49.027" level="DEBUG">["text=What to do &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:29:49.027" level="TRACE">Return: ['text=What to do &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:29:49.028" level="INFO">${elements} = ['text=What to do &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:29:49.011" endtime="20230815 08:29:49.028"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:49.028" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:49.028" level="TRACE">Arguments: [ ${selector}='text=What to do &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.028" level="TRACE">Arguments: [ 'text=What to do &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:49.076" level="DEBUG">States: 2137</msg>
<msg timestamp="20230815 08:29:49.076" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.04734492301940918 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:29:49.076" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:29:49.028" endtime="20230815 08:29:49.076"/>
</kw>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Return: False</msg>
<status status="PASS" starttime="20230815 08:29:49.028" endtime="20230815 08:29:49.076"/>
</kw>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:49.076" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:49.028" endtime="20230815 08:29:49.076"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Arguments: [ True | "The element containing text 'What to do' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.076" endtime="20230815 08:29:49.076"/>
</kw>
<status status="PASS" starttime="20230815 08:29:49.011" endtime="20230815 08:29:49.076"/>
</iter>
<iter>
<var name="${text}">How it Works</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.076" level="TRACE">Arguments: [ 'text=How it Works' ]</msg>
<msg timestamp="20230815 08:29:49.093" level="INFO">Found Locator@text=How it Works &gt;&gt; nth=0,Locator@text=How it Works &gt;&gt; nth=1 Locators successfully.</msg>
<msg timestamp="20230815 08:29:49.093" level="DEBUG">["text=How it Works &gt;&gt; nth=0","text=How it Works &gt;&gt; nth=1"]</msg>
<msg timestamp="20230815 08:29:49.093" level="TRACE">Return: ['text=How it Works &gt;&gt; nth=0', 'text=How it Works &gt;&gt; nth=1']</msg>
<msg timestamp="20230815 08:29:49.093" level="INFO">${elements} = ['text=How it Works &gt;&gt; nth=0', 'text=How it Works &gt;&gt; nth=1']</msg>
<status status="PASS" starttime="20230815 08:29:49.076" endtime="20230815 08:29:49.093"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:49.093" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:49.093" level="TRACE">Arguments: [ ${selector}='text=How it Works &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.094" level="TRACE">Arguments: [ 'text=How it Works &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:49.145" level="DEBUG">States: 2137</msg>
<msg timestamp="20230815 08:29:49.145" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.05193805694580078 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:49.146" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:29:49.146" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:29:49.093" endtime="20230815 08:29:49.146"/>
</kw>
<msg timestamp="20230815 08:29:49.146" level="TRACE">Return: False</msg>
<status status="PASS" starttime="20230815 08:29:49.093" endtime="20230815 08:29:49.146"/>
</kw>
<msg timestamp="20230815 08:29:49.146" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:49.146" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:49.093" endtime="20230815 08:29:49.146"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:49.146" level="TRACE">Arguments: [ True | "The element containing text 'How it Works' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:49.146" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.146" endtime="20230815 08:29:49.146"/>
</kw>
<status status="PASS" starttime="20230815 08:29:49.076" endtime="20230815 08:29:49.146"/>
</iter>
<status status="PASS" starttime="20230815 08:29:48.822" endtime="20230815 08:29:49.146"/>
</for>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:49.147" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:49.147" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:29:49.148" level="TRACE">Return: '8 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:49.146" endtime="20230815 08:29:49.148"/>
</kw>
<msg timestamp="20230815 08:29:49.148" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:48.818" endtime="20230815 08:29:49.148"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:29:46.380" endtime="20230815 08:29:49.148"/>
</test>
<test id="s1-s2-s1-s3-t2" name="Open Menu and Click Book a Room" line="19">
<kw name="Click" library="Browser">
<arg>//div[contains(@class,"nav-menu-button-container")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.149" level="TRACE">Arguments: [ '//div[contains(@class,"nav-menu-button-container")]' ]</msg>
<msg timestamp="20230815 08:29:49.150" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:29:49.200" level="DEBUG">Clicked element: '//div[contains(@class,"nav-menu-button-container")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:29:49.201" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.149" endtime="20230815 08:29:49.201"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(),"Book a Room")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.201" level="TRACE">Arguments: [ '//a[contains(text(),"Book a Room")]' ]</msg>
<msg timestamp="20230815 08:29:49.201" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:29:49.392" level="DEBUG">Clicked element: '//a[contains(text(),"Book a Room")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:29:49.393" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.201" endtime="20230815 08:29:49.393"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${url.current}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:29:49.393" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:49.394" level="DEBUG">https://test.kensingtonstay.com/en/booking/</msg>
<msg timestamp="20230815 08:29:49.394" level="TRACE">Return: 'https://test.kensingtonstay.com/en/booking/'</msg>
<msg timestamp="20230815 08:29:49.394" level="INFO">${url.current} = https://test.kensingtonstay.com/en/booking/</msg>
<status status="PASS" starttime="20230815 08:29:49.393" endtime="20230815 08:29:49.394"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${url.current}</arg>
<arg>/booking</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230815 08:29:49.394" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com/en/booking/' | '/booking' ]</msg>
<msg timestamp="20230815 08:29:49.394" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.394" endtime="20230815 08:29:49.394"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:29:49.149" endtime="20230815 08:29:49.395"/>
</test>
<test id="s1-s2-s1-s3-t3" name="Verify Booking Page Elements" line="25">
<kw name="Verify Texts" library="common">
<arg>Find rooms</arg>
<arg>Your booking overview</arg>
<arg>Kensington Stay</arg>
<doc>Verifies that the given texts are visible on the page, Browser Timeout
is set to 8 seconds to speed up the test
Takes a list of strings as an argument</doc>
<msg timestamp="20230815 08:29:49.397" level="TRACE">Arguments: [ @{listOfStrings}=['Find rooms', 'Your booking overview', 'Kensington Stay'] ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>8s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:49.397" level="TRACE">Arguments: [ datetime.timedelta(seconds=8) ]</msg>
<msg timestamp="20230815 08:29:49.398" level="INFO">Set timeout to: 8000</msg>
<msg timestamp="20230815 08:29:49.398" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:49.397" endtime="20230815 08:29:49.398"/>
</kw>
<for flavor="IN">
<var>${text}</var>
<value>@{listOfStrings}</value>
<iter>
<var name="${text}">Find rooms</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:49.399" level="TRACE">Arguments: [ 'text=Find rooms' ]</msg>
<msg timestamp="20230815 08:29:51.228" level="INFO">Found Locator@text=Find rooms &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20230815 08:29:51.229" level="DEBUG">["text=Find rooms &gt;&gt; nth=0"]</msg>
<msg timestamp="20230815 08:29:51.229" level="TRACE">Return: ['text=Find rooms &gt;&gt; nth=0']</msg>
<msg timestamp="20230815 08:29:51.229" level="INFO">${elements} = ['text=Find rooms &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20230815 08:29:49.399" endtime="20230815 08:29:51.229"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:51.230" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:51.230" level="TRACE">Arguments: [ ${selector}='text=Find rooms &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:51.231" level="TRACE">Arguments: [ 'text=Find rooms &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:51.281" level="DEBUG">States: 2133</msg>
<msg timestamp="20230815 08:29:51.281" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.04995417594909668 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:51.281" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:51.281" level="INFO">${isVisible} = True</msg>
<status status="PASS" starttime="20230815 08:29:51.230" endtime="20230815 08:29:51.281"/>
</kw>
<msg timestamp="20230815 08:29:51.281" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230815 08:29:51.230" endtime="20230815 08:29:51.281"/>
</kw>
<msg timestamp="20230815 08:29:51.281" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:51.281" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:51.229" endtime="20230815 08:29:51.281"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:51.281" level="TRACE">Arguments: [ True | "The element containing text 'Find rooms' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:51.281" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:51.281" endtime="20230815 08:29:51.281"/>
</kw>
<status status="PASS" starttime="20230815 08:29:49.398" endtime="20230815 08:29:51.282"/>
</iter>
<iter>
<var name="${text}">Your booking overview</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:51.282" level="TRACE">Arguments: [ 'text=Your booking overview' ]</msg>
<msg timestamp="20230815 08:29:55.285" level="INFO">Found Locator@text=Your booking overview &gt;&gt; nth=0,Locator@text=Your booking overview &gt;&gt; nth=1 Locators successfully.</msg>
<msg timestamp="20230815 08:29:55.286" level="DEBUG">["text=Your booking overview &gt;&gt; nth=0","text=Your booking overview &gt;&gt; nth=1"]</msg>
<msg timestamp="20230815 08:29:55.286" level="TRACE">Return: ['text=Your booking overview &gt;&gt; nth=0', 'text=Your booking overview &gt;&gt; nth=1']</msg>
<msg timestamp="20230815 08:29:55.287" level="INFO">${elements} = ['text=Your booking overview &gt;&gt; nth=0', 'text=Your booking overview &gt;&gt; nth=1']</msg>
<status status="PASS" starttime="20230815 08:29:51.282" endtime="20230815 08:29:55.287"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:55.288" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:55.289" level="TRACE">Arguments: [ ${selector}='text=Your booking overview &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:55.289" level="TRACE">Arguments: [ 'text=Your booking overview &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:55.362" level="DEBUG">States: 2133</msg>
<msg timestamp="20230815 08:29:55.362" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.07246589660644531 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:55.362" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:55.362" level="INFO">${isVisible} = True</msg>
<status status="PASS" starttime="20230815 08:29:55.289" endtime="20230815 08:29:55.362"/>
</kw>
<msg timestamp="20230815 08:29:55.362" level="TRACE">Return: True</msg>
<status status="PASS" starttime="20230815 08:29:55.288" endtime="20230815 08:29:55.362"/>
</kw>
<msg timestamp="20230815 08:29:55.362" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:55.362" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:55.288" endtime="20230815 08:29:55.362"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:55.363" level="TRACE">Arguments: [ True | "The element containing text 'Your booking overview' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:55.363" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:55.362" endtime="20230815 08:29:55.363"/>
</kw>
<status status="PASS" starttime="20230815 08:29:51.282" endtime="20230815 08:29:55.363"/>
</iter>
<iter>
<var name="${text}">Kensington Stay</var>
<kw name="Get Elements" library="Browser">
<var>${elements}</var>
<arg>text=${text}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20230815 08:29:55.364" level="TRACE">Arguments: [ 'text=Kensington Stay' ]</msg>
<msg timestamp="20230815 08:29:55.378" level="INFO">Found Locator@text=Kensington Stay &gt;&gt; nth=0,Locator@text=Kensington Stay &gt;&gt; nth=1,Locator@text=Kensington Stay &gt;&gt; nth=2 Locators successfully.</msg>
<msg timestamp="20230815 08:29:55.378" level="DEBUG">["text=Kensington Stay &gt;&gt; nth=0","text=Kensington Stay &gt;&gt; nth=1","text=Kensington Stay &gt;&gt; nth=2"]</msg>
<msg timestamp="20230815 08:29:55.378" level="TRACE">Return: ['text=Kensington Stay &gt;&gt; nth=0',
 'text=Kensington Stay &gt;&gt; nth=1',
 'text=Kensington Stay &gt;&gt; nth=2']</msg>
<msg timestamp="20230815 08:29:55.379" level="INFO">${elements} = ['text=Kensington Stay &gt;&gt; nth=0', 'text=Kensington Stay &gt;&gt; nth=1', 'text=Kensington Stay &gt;&gt; nth=2']</msg>
<status status="PASS" starttime="20230815 08:29:55.363" endtime="20230815 08:29:55.379"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_visible}</var>
<arg>Should Be Visible</arg>
<arg>${elements}[0]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<msg timestamp="20230815 08:29:55.379" level="TRACE">Arguments: [ 'Should Be Visible' | '${elements}[0]' ]</msg>
<kw name="Should Be Visible" library="common">
<arg>${elements}[0]</arg>
<msg timestamp="20230815 08:29:55.379" level="TRACE">Arguments: [ ${selector}='text=Kensington Stay &gt;&gt; nth=0' ]</msg>
<kw name="Get Element States" library="Browser">
<var>${isVisible}</var>
<arg>${selector}</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:55.380" level="TRACE">Arguments: [ 'text=Kensington Stay &gt;&gt; nth=0' | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:29:55.447" level="DEBUG">States: 2137</msg>
<msg timestamp="20230815 08:29:55.447" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.06731176376342773 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:29:55.447" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:29:55.447" level="INFO">${isVisible} = False</msg>
<status status="PASS" starttime="20230815 08:29:55.379" endtime="20230815 08:29:55.447"/>
</kw>
<msg timestamp="20230815 08:29:55.447" level="TRACE">Return: False</msg>
<status status="PASS" starttime="20230815 08:29:55.379" endtime="20230815 08:29:55.447"/>
</kw>
<msg timestamp="20230815 08:29:55.447" level="TRACE">Return: True</msg>
<msg timestamp="20230815 08:29:55.447" level="INFO">${element_visible} = True</msg>
<status status="PASS" starttime="20230815 08:29:55.379" endtime="20230815 08:29:55.447"/>
</kw>
<kw name="Should Be True" library="BuiltIn">
<arg>${element_visible}</arg>
<arg>The element containing text '${text}' should be visible but it is not.</arg>
<doc>Fails if the given condition is not true.</doc>
<msg timestamp="20230815 08:29:55.448" level="TRACE">Arguments: [ True | "The element containing text 'Kensington Stay' should be visible but it is not." ]</msg>
<msg timestamp="20230815 08:29:55.448" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:55.448" endtime="20230815 08:29:55.448"/>
</kw>
<status status="PASS" starttime="20230815 08:29:55.363" endtime="20230815 08:29:55.448"/>
</iter>
<status status="PASS" starttime="20230815 08:29:49.398" endtime="20230815 08:29:55.448"/>
</for>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:55.449" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:55.451" level="INFO">Set timeout to: 90000</msg>
<msg timestamp="20230815 08:29:55.452" level="TRACE">Return: '8 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:55.448" endtime="20230815 08:29:55.452"/>
</kw>
<msg timestamp="20230815 08:29:55.452" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:49.396" endtime="20230815 08:29:55.452"/>
</kw>
<tag>kensington_stay</tag>
<status status="PASS" starttime="20230815 08:29:49.396" endtime="20230815 08:29:55.453"/>
</test>
<test id="s1-s2-s1-s3-t4" name="Create New Booking in KS" line="28">
<kw name="Open New Browser To KS Home Page" library="kensington_stay">
<msg timestamp="20230815 08:29:55.462" level="TRACE">Arguments: [  ]</msg>
<if>
<branch type="IF" condition="'${ENVIRONMENT}' == 'test'">
<kw name="Open New Browser To URL" library="common">
<arg>${url.test.ks_home}</arg>
<status status="NOT RUN" starttime="20230815 08:29:55.462" endtime="20230815 08:29:55.462"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:29:55.462" endtime="20230815 08:29:55.462"/>
</branch>
<branch type="ELSE">
<kw name="Open New Browser To URL" library="common">
<arg>${url.prod.ks_home}</arg>
<msg timestamp="20230815 08:29:55.463" level="TRACE">Arguments: [ ${url}='https://test.kensingtonstay.com' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:29:55.464" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:55.464" level="INFO">Switching browser to browser=d64534fc-879e-40c8-bd8e-4d88f6ebc1e0</msg>
<msg timestamp="20230815 08:29:55.467" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230815 08:29:55.467" level="INFO">Reusing existing browser with id: browser=d64534fc-879e-40c8-bd8e-4d88f6ebc1e0</msg>
<msg timestamp="20230815 08:29:55.467" level="TRACE">Return: 'browser=d64534fc-879e-40c8-bd8e-4d88f6ebc1e0'</msg>
<status status="PASS" starttime="20230815 08:29:55.463" endtime="20230815 08:29:55.467"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:29:55.468" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:29:55.468" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:29:55.467" endtime="20230815 08:29:55.468"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:29:55.469" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:55.469" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:29:55.481" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:29:55.481" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:29:55.481" level="TRACE">Return: 'context=ba4496cb-1694-4e7b-963c-eecbd5196c1d'</msg>
<status status="PASS" starttime="20230815 08:29:55.469" endtime="20230815 08:29:55.481"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:29:55.482" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com' ]</msg>
<msg timestamp="20230815 08:29:57.137" level="INFO">Successfully initialized new page object and opened url: https://test.kensingtonstay.com</msg>
<msg timestamp="20230815 08:29:57.137" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20230815 08:29:57.137" level="TRACE">Return: {'page_id': 'page=e52a2b37-7e32-4c58-a714-44c32364319c', 'video_path': ''}</msg>
<status status="PASS" starttime="20230815 08:29:55.482" endtime="20230815 08:29:57.138"/>
</kw>
<kw name="Set Environment" library="common">
<msg timestamp="20230815 08:29:57.138" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:29:57.138" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:29:57.140" level="DEBUG">https://test.kensingtonstay.com/</msg>
<msg timestamp="20230815 08:29:57.140" level="TRACE">Return: 'https://test.kensingtonstay.com/'</msg>
<msg timestamp="20230815 08:29:57.140" level="INFO">${currentUrl} = https://test.kensingtonstay.com/</msg>
<status status="PASS" starttime="20230815 08:29:57.138" endtime="20230815 08:29:57.140"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20230815 08:29:57.140" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com/' ]</msg>
<msg timestamp="20230815 08:29:57.140" level="TRACE">Return: 'test-kensington'</msg>
<msg timestamp="20230815 08:29:57.140" level="INFO">${env} = test-kensington</msg>
<status status="PASS" starttime="20230815 08:29:57.140" endtime="20230815 08:29:57.140"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${environment}</arg>
<arg>${env}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230815 08:29:57.140" level="TRACE">Arguments: [ '' | 'test-kensington' ]</msg>
<msg timestamp="20230815 08:29:57.140" level="TRACE">Return: ['', 'test-kensington']</msg>
<status status="PASS" starttime="20230815 08:29:57.140" endtime="20230815 08:29:57.140"/>
</kw>
<msg timestamp="20230815 08:29:57.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.138" endtime="20230815 08:29:57.141"/>
</kw>
<msg timestamp="20230815 08:29:57.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:55.463" endtime="20230815 08:29:57.141"/>
</kw>
<status status="PASS" starttime="20230815 08:29:55.463" endtime="20230815 08:29:57.141"/>
</branch>
<status status="PASS" starttime="20230815 08:29:55.462" endtime="20230815 08:29:57.141"/>
</if>
<msg timestamp="20230815 08:29:57.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:55.460" endtime="20230815 08:29:57.141"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@class, "display-desktop-up")]//a[contains(@class, "white")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:29:57.142" level="TRACE">Arguments: [ '//div[contains(@class, "display-desktop-up")]//a[contains(@class, "white")]' ]</msg>
<msg timestamp="20230815 08:29:57.142" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:29:57.279" level="DEBUG">Clicked element: '//div[contains(@class, "display-desktop-up")]//a[contains(@class, "white")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:29:57.279" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.142" endtime="20230815 08:29:57.279"/>
</kw>
<kw name="Complete a new booking" library="booking">
<arg>True</arg>
<doc>A complete booking process from start to finish
This is currently duplicate to "Create a new booking" test case</doc>
<msg timestamp="20230815 08:29:57.280" level="TRACE">Arguments: [ ${isBrowserOpen}='True' ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${isBrowserOpen}=='False'</arg>
<arg>Open Browser to Landing Page</arg>
<arg>${url.landing.page}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:29:57.280" level="TRACE">Arguments: [ "True=='False'" | 'Open Browser to Landing Page' | '${url.landing.page}' ]</msg>
<msg timestamp="20230815 08:29:57.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.280" endtime="20230815 08:29:57.280"/>
</kw>
<if>
<branch type="IF" condition="'${environment}' == 'True'">
<kw name="Select Hotel" library="booking">
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<status status="NOT RUN" starttime="20230815 08:29:57.280" endtime="20230815 08:29:57.280"/>
</kw>
<kw name="Select Dates" library="booking">
<status status="NOT RUN" starttime="20230815 08:29:57.281" endtime="20230815 08:29:57.281"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<status status="NOT RUN" starttime="20230815 08:29:57.281" endtime="20230815 08:29:57.281"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<status status="NOT RUN" starttime="20230815 08:29:57.281" endtime="20230815 08:29:57.281"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:29:57.280" endtime="20230815 08:29:57.281"/>
</branch>
<status status="PASS" starttime="20230815 08:29:57.280" endtime="20230815 08:29:57.281"/>
</if>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20230815 08:29:57.281" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:29:57.281" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:29:57.282" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:30:04.672" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20230815 08:30:04.672" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.282" endtime="20230815 08:30:04.672"/>
</kw>
<msg timestamp="20230815 08:30:04.673" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.281" endtime="20230815 08:30:04.673"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:04.673" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20230815 08:30:04.926" level="DEBUG">States: 2</msg>
<msg timestamp="20230815 08:30:04.926" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.2523620128631592 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20230815 08:30:04.927" level="TRACE">Return: False</msg>
<msg timestamp="20230815 08:30:04.927" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20230815 08:30:04.673" endtime="20230815 08:30:04.927"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230815 08:30:04.927" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20230815 08:30:04.927" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:04.927" endtime="20230815 08:30:04.928"/>
</kw>
<msg timestamp="20230815 08:30:04.928" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.281" endtime="20230815 08:30:04.928"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20230815 08:30:04.928" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:04.928" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20230815 08:30:04.929" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:06.240" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:06.241" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:04.928" endtime="20230815 08:30:06.241"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20230815 08:30:06.241" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20230815 08:30:06.241" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:30:06.647" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20230815 08:30:06.647" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:06.241" endtime="20230815 08:30:06.647"/>
</kw>
<msg timestamp="20230815 08:30:06.647" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:06.241" endtime="20230815 08:30:06.647"/>
</kw>
<msg timestamp="20230815 08:30:06.647" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:04.928" endtime="20230815 08:30:06.647"/>
</kw>
<kw name="Continue to Payment" library="booking">
<msg timestamp="20230815 08:30:06.647" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:06.648" level="TRACE">Arguments: [ "(//button[normalize-space()='Continue to payment'])[1]" ]</msg>
<msg timestamp="20230815 08:30:06.648" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:06.711" level="DEBUG">Clicked element: '(//button[normalize-space()='Continue to payment'])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:06.711" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:06.647" endtime="20230815 08:30:06.711"/>
</kw>
<msg timestamp="20230815 08:30:06.711" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:06.647" endtime="20230815 08:30:06.711"/>
</kw>
<if>
<branch type="IF" condition="'${environment}' == 'omena'">
<kw name="Select Join for Free" library="booking">
<status status="NOT RUN" starttime="20230815 08:30:06.712" endtime="20230815 08:30:06.712"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<status status="NOT RUN" starttime="20230815 08:30:06.712" endtime="20230815 08:30:06.712"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<status status="NOT RUN" starttime="20230815 08:30:06.712" endtime="20230815 08:30:06.712"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<status status="NOT RUN" starttime="20230815 08:30:06.712" endtime="20230815 08:30:06.712"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<status status="NOT RUN" starttime="20230815 08:30:06.712" endtime="20230815 08:30:06.712"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:30:06.711" endtime="20230815 08:30:06.712"/>
</branch>
<branch type="ELSE">
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20230815 08:30:06.712" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='040123942' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20230815 08:30:06.712" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20230815 08:30:06.713" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:30:07.645" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x103649d60&gt;
{'created_at': datetime.datetime(2023, 8, 15, 5, 30, 7, 458000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '69b51b4a-e34f-46fd-8af2-324cb7d08645',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x103649fa0&gt;</msg>
<msg timestamp="20230815 08:30:07.645" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 30, 7, 458000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '69b51b4a-e34f-46fd-8af2-324cb7d08645',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:30:07.646" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 30, 7, 458000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com',
 'exp...</msg>
<status status="PASS" starttime="20230815 08:30:06.713" endtime="20230815 08:30:07.646"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:30:07.650" level="TRACE">Arguments: [ '69b51b4a-e34f-46fd-8af2-324cb7d08645' ]</msg>
<msg timestamp="20230815 08:30:07.650" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.647" endtime="20230815 08:30:07.650"/>
</kw>
<msg timestamp="20230815 08:30:07.651" level="TRACE">Return: {'created_at': datetime.datetime(2023, 8, 15, 5, 30, 7, 458000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '69b51b4a-e34f-46fd-8af2-324cb7d08645',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20230815 08:30:07.651" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 8, 15, 5, 30, 7, 458000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com',
 'exp...</msg>
<status status="PASS" starttime="20230815 08:30:06.712" endtime="20230815 08:30:07.651"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:30:07.652" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.653" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20230815 08:30:07.654" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:07.704" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:07.704" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.652" endtime="20230815 08:30:07.704"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.704" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20230815 08:30:07.704" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20230815 08:30:07.729" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20230815 08:30:07.729" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.704" endtime="20230815 08:30:07.729"/>
</kw>
<msg timestamp="20230815 08:30:07.730" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.651" endtime="20230815 08:30:07.730"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:30:07.730" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.730" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20230815 08:30:07.731" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:07.795" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:07.795" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.730" endtime="20230815 08:30:07.795"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.796" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20230815 08:30:07.796" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20230815 08:30:07.808" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20230815 08:30:07.808" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.795" endtime="20230815 08:30:07.808"/>
</kw>
<msg timestamp="20230815 08:30:07.808" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.730" endtime="20230815 08:30:07.808"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:30:07.809" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.809" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20230815 08:30:07.809" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:07.881" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:07.881" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.809" endtime="20230815 08:30:07.881"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.882" level="TRACE">Arguments: [ 'id=email' | '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com' ]</msg>
<msg timestamp="20230815 08:30:07.882" level="INFO">Fills the text '69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com' in the given field.</msg>
<msg timestamp="20230815 08:30:07.894" level="DEBUG">Fill text 69b51b4a-e34f-46fd-8af2-324cb7d08645@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20230815 08:30:07.894" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.881" endtime="20230815 08:30:07.894"/>
</kw>
<msg timestamp="20230815 08:30:07.894" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.808" endtime="20230815 08:30:07.894"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20230815 08:30:07.895" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:30:07.895" level="DEBUG">https://test.kensingtonstay.com/en/booking/#/payment</msg>
<msg timestamp="20230815 08:30:07.895" level="TRACE">Return: 'https://test.kensingtonstay.com/en/booking/#/payment'</msg>
<msg timestamp="20230815 08:30:07.896" level="INFO">${u} = https://test.kensingtonstay.com/en/booking/#/payment</msg>
<status status="PASS" starttime="20230815 08:30:07.894" endtime="20230815 08:30:07.896"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<msg timestamp="20230815 08:30:07.896" level="TRACE">Arguments: [ 'https://test.kensingtonstay.com/en/booking/#/payment' ]</msg>
<msg timestamp="20230815 08:30:07.896" level="TRACE">Return: 'test-kensington'</msg>
<msg timestamp="20230815 08:30:07.896" level="INFO">${e} = test-kensington</msg>
<status status="PASS" starttime="20230815 08:30:07.896" endtime="20230815 08:30:07.896"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20230815 08:30:07.896" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='01333344552' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.896" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20230815 08:30:07.897" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:07.965" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:07.965" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.896" endtime="20230815 08:30:07.965"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.965" level="TRACE">Arguments: [ 'id=phoneNumber' | '01333344552' ]</msg>
<msg timestamp="20230815 08:30:07.966" level="INFO">Fills the text '01333344552' in the given field.</msg>
<msg timestamp="20230815 08:30:07.974" level="DEBUG">Fill text 01333344552 on id=phoneNumber with force: false</msg>
<msg timestamp="20230815 08:30:07.974" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.965" endtime="20230815 08:30:07.974"/>
</kw>
<msg timestamp="20230815 08:30:07.974" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.896" endtime="20230815 08:30:07.974"/>
</kw>
<status status="PASS" starttime="20230815 08:30:07.896" endtime="20230815 08:30:07.975"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:30:07.975" endtime="20230815 08:30:07.975"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:30:07.975" endtime="20230815 08:30:07.975"/>
</branch>
<status status="PASS" starttime="20230815 08:30:07.896" endtime="20230815 08:30:07.975"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:30:07.975" level="TRACE">Arguments: [ '69b51b4a-e34f-46fd-8af2-324cb7d08645' ]</msg>
<msg timestamp="20230815 08:30:07.975" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.975" endtime="20230815 08:30:07.975"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20230815 08:30:07.976" level="TRACE">Arguments: [ '$ID' | '${inbox.id}' ]</msg>
<msg timestamp="20230815 08:30:07.976" level="INFO">${ID} = 69b51b4a-e34f-46fd-8af2-324cb7d08645</msg>
<msg timestamp="20230815 08:30:07.976" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.976" endtime="20230815 08:30:07.976"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20230815 08:30:07.976" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20230815 08:30:07.978" level="TRACE">Return: 0</msg>
<msg timestamp="20230815 08:30:07.978" level="INFO">${passwordVisible} = 0</msg>
<status status="PASS" starttime="20230815 08:30:07.976" endtime="20230815 08:30:07.978"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:30:07.979" endtime="20230815 08:30:07.979"/>
</kw>
<status status="NOT RUN" starttime="20230815 08:30:07.978" endtime="20230815 08:30:07.979"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230815 08:30:07.979" level="TRACE">Arguments: [ 'No password filled' ]</msg>
<msg timestamp="20230815 08:30:07.979" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.979" endtime="20230815 08:30:07.979"/>
</kw>
<status status="PASS" starttime="20230815 08:30:07.979" endtime="20230815 08:30:07.979"/>
</branch>
<status status="PASS" starttime="20230815 08:30:07.978" endtime="20230815 08:30:07.979"/>
</if>
<msg timestamp="20230815 08:30:07.979" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:06.712" endtime="20230815 08:30:07.979"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20230815 08:30:07.979" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:07.979" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20230815 08:30:07.980" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:08.048" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:08.048" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.979" endtime="20230815 08:30:08.048"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:08.049" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20230815 08:30:08.049" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:08.117" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:08.117" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:08.048" endtime="20230815 08:30:08.117"/>
</kw>
<msg timestamp="20230815 08:30:08.117" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:07.979" endtime="20230815 08:30:08.118"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//button[text()='Pay'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:08.118" level="TRACE">Arguments: [ "(//button[text()='Pay'])[1]" ]</msg>
<msg timestamp="20230815 08:30:08.118" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:30:08.176" level="DEBUG">Clicked element: '(//button[text()='Pay'])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20230815 08:30:08.176" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:30:08.118" endtime="20230815 08:30:08.177"/>
</kw>
<status status="PASS" starttime="20230815 08:30:06.712" endtime="20230815 08:30:08.177"/>
</branch>
<status status="PASS" starttime="20230815 08:30:06.711" endtime="20230815 08:30:08.177"/>
</if>
<msg timestamp="20230815 08:30:08.177" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:29:57.280" endtime="20230815 08:30:08.177"/>
</kw>
<kw name="Fill in TyL Details" library="kensington_stay">
<msg timestamp="20230815 08:30:08.177" level="TRACE">Arguments: [  ]</msg>
<kw name="Select Options By" library="Browser">
<arg>id=brandTypeSelect</arg>
<arg>value</arg>
<arg>VISA</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<msg timestamp="20230815 08:30:08.177" level="TRACE">Arguments: [ 'id=brandTypeSelect' | &lt;SelectAttribute.value: 1&gt; | 'VISA' ]</msg>
<msg timestamp="20230815 08:31:38.255" level="DEBUG">Screenshot successfully captured to: /Users/sara/code/nelson-test-automation/reports/test3/browser/screenshot/fail-screenshot-16.png</msg>
<msg timestamp="20230815 08:31:38.256" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-16.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-16.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20230815 08:31:38.256" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:38.257" level="FAIL">TimeoutError: locator.selectOption: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=brandTypeSelect')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<msg timestamp="20230815 08:31:38.259" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 833, in select_options_by
    response = stub.SelectOption(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.DEADLINE_EXCEEDED
	details = "TimeoutError: locator.selectOption: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=brandTypeSelect')
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:38.184751+03:00", grpc_status:4, grpc_message:"TimeoutError: locator.selectOption: Timeout 90000ms exceeded.\n=========================== logs ===========================\nwaiting for locator(\'id=brandTypeSelect\')\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 833, in select_options_by
    response = stub.SelectOption(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: TimeoutError: locator.selectOption: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=brandTypeSelect')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20230815 08:30:08.177" endtime="20230815 08:31:38.259"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cardNumber</arg>
<arg>${cc.tyl.visa}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.260" endtime="20230815 08:31:38.260"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cardholderName</arg>
<arg>${cc.name}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.260" endtime="20230815 08:31:38.260"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=expiryMonth</arg>
<arg>value</arg>
<arg>01</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.260" endtime="20230815 08:31:38.260"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=expiryYear</arg>
<arg>value</arg>
<arg>2024</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.260" endtime="20230815 08:31:38.261"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=cardCode_masked</arg>
<arg>123</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.261" endtime="20230815 08:31:38.261"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=nextBtn</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.261" endtime="20230815 08:31:38.261"/>
</kw>
<status status="FAIL" starttime="20230815 08:30:08.177" endtime="20230815 08:31:38.261"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="NOT RUN" starttime="20230815 08:31:38.261" endtime="20230815 08:31:38.262"/>
</kw>
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:29:55.459" endtime="20230815 08:31:38.262">TimeoutError: locator.selectOption: Timeout 90000ms exceeded.
=========================== logs ===========================
waiting for locator('id=brandTypeSelect')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</status>
</test>
<test id="s1-s2-s1-s3-t5" name="Verify Booking Complete" line="35">
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:31:38.264" endtime="20230815 08:31:38.265">Test contains no keywords.</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:31:38.266" level="TRACE">Arguments: [ 'ALL' ]</msg>
<msg timestamp="20230815 08:31:38.590" level="INFO">Closed all browsers</msg>
<msg timestamp="20230815 08:31:38.590" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:31:38.266" endtime="20230815 08:31:38.590"/>
</kw>
<doc>A test suite for verifying the Kensington Stay Home Page</doc>
<status status="FAIL" starttime="20230815 08:29:46.367" endtime="20230815 08:31:38.590"/>
</suite>
<suite id="s1-s2-s1-s4" name="Create Mui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_mui_booking.robot">
<test id="s1-s2-s1-s4-t1" name="Start Creating a new Booking in MUI" line="13">
<kw name="Open Browser to Nelson Portal and Navigate to Test Exhibition" library="EC">
<msg timestamp="20230815 08:31:38.602" level="TRACE">Arguments: [  ]</msg>
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:38.603" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:38.603" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:38.603" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/fac0bb7b-3424-451b-8f74-0bc919ffbeea"}</msg>
<msg timestamp="20230815 08:31:39.037" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/fac0bb7b-3424-451b-8f74-0bc919ffbeea"}</msg>
<msg timestamp="20230815 08:31:39.037" level="TRACE">Return: 'browser=65506bdc-1878-4297-aac1-714b32a560c9'</msg>
<status status="PASS" starttime="20230815 08:31:38.603" endtime="20230815 08:31:39.037"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:39.037" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:39.038" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:31:39.038" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:39.037" endtime="20230815 08:31:39.038"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:39.038" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:39.039" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:39.050" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:39.050" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:39.050" level="TRACE">Return: 'context=e4a051ee-0cf5-4bed-b730-ca7e2dd19b0f'</msg>
<status status="PASS" starttime="20230815 08:31:39.038" endtime="20230815 08:31:39.050"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:39.050" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:39.352" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:39.352" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:39.352" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:39.352" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:39.349987+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:39.050" endtime="20230815 08:31:39.352"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:38.602" endtime="20230815 08:31:39.353"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:39.353" endtime="20230815 08:31:39.353"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>Test Kensington</arg>
<status status="NOT RUN" starttime="20230815 08:31:39.353" endtime="20230815 08:31:39.353"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:38.602" endtime="20230815 08:31:39.353"/>
</kw>
<kw name="Open Reservations Page" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:39.353" endtime="20230815 08:31:39.353"/>
</kw>
<kw name="Click New Reservation Button" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:39.354" endtime="20230815 08:31:39.354"/>
</kw>
<kw name="Select Normal Reservation" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:39.354" endtime="20230815 08:31:39.354"/>
</kw>
<kw name="Switch Page" library="Browser">
<var>${previous}</var>
<arg>NEW</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<status status="NOT RUN" starttime="20230815 08:31:39.354" endtime="20230815 08:31:39.354"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="NOT RUN" starttime="20230815 08:31:39.354" endtime="20230815 08:31:39.354"/>
</kw>
<kw name="Create a successful booking and return UUID" library="booking">
<var>${uuid}</var>
<arg>True</arg>
<status status="NOT RUN" starttime="20230815 08:31:39.354" endtime="20230815 08:31:39.354"/>
</kw>
<tag>kensington_stay</tag>
<status status="FAIL" starttime="20230815 08:31:38.602" endtime="20230815 08:31:39.354">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:31:39.356" level="TRACE">Arguments: [ 'ALL' ]</msg>
<msg timestamp="20230815 08:31:41.877" level="INFO">Closed all browsers</msg>
<msg timestamp="20230815 08:31:41.877" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:31:39.356" endtime="20230815 08:31:41.877"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230815 08:31:38.593" endtime="20230815 08:31:41.877"/>
</suite>
<status status="FAIL" starttime="20230815 08:28:10.733" endtime="20230815 08:31:41.881"/>
</suite>
<status status="FAIL" starttime="20230815 08:28:10.732" endtime="20230815 08:31:41.883"/>
</suite>
<suite id="s1-s3" name="MUI" source="/Users/sara/code/nelson-test-automation/testsuites/MUI">
<suite id="s1-s3-s1" name="Feature" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/feature">
<suite id="s1-s3-s1-s1" name="MUI-430" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/feature/MUI-430.robot">
<test id="s1-s3-s1-s1-t1" name="Filter all reservations with Check-in incomplete" line="11">
<kw name="Open Browser to Nelson Portal and Login" library="mui">
<msg timestamp="20230815 08:31:41.905" level="TRACE">Arguments: [  ]</msg>
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:41.905" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:41.906" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:41.906" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/1a5cc7ea-a132-4563-8ea3-a96d96e9920f"}</msg>
<msg timestamp="20230815 08:31:42.222" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/1a5cc7ea-a132-4563-8ea3-a96d96e9920f"}</msg>
<msg timestamp="20230815 08:31:42.223" level="TRACE">Return: 'browser=f52cb416-5b1d-4371-9489-a3b1cfe5f8d1'</msg>
<status status="PASS" starttime="20230815 08:31:41.906" endtime="20230815 08:31:42.223"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:42.223" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:42.224" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:31:42.224" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:42.223" endtime="20230815 08:31:42.224"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:42.225" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:42.225" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:42.236" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:42.236" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:42.237" level="TRACE">Return: 'context=d25bac9b-5fe9-48e5-92d0-c34f9546620a'</msg>
<status status="PASS" starttime="20230815 08:31:42.224" endtime="20230815 08:31:42.237"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:42.237" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:42.509" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:42.509" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:42.510" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:42.510" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:42.507453+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:42.237" endtime="20230815 08:31:42.510"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:41.905" endtime="20230815 08:31:42.510"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.510" endtime="20230815 08:31:42.510"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>${environment}</arg>
<status status="NOT RUN" starttime="20230815 08:31:42.510" endtime="20230815 08:31:42.510"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:41.905" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>15s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Select Hotel for Search" library="mui">
<arg>hotel=HKI2</arg>
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Toggle Check in incomplete filter button" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Click Search Button" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Select Reservation with Check in Incomplete" library="mui">
<doc>This keyword selects the first reservation with check in incomplete
and verifies the green icon and checkmark are shown
NOTE! Needs more verifications as the mouseover is a bit hard to verify</doc>
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<kw name="Click Reservations from Navigation Menu" library="mui_menu">
<status status="NOT RUN" starttime="20230815 08:31:42.511" endtime="20230815 08:31:42.511"/>
</kw>
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled on</doc>
<status status="FAIL" starttime="20230815 08:31:41.904" endtime="20230815 08:31:42.512">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s3-s1-s1-t2" name="Remove filter and find a reservation with Check-in complete" line="22">
<kw name="Open Browser to Nelson Portal and Login" library="mui">
<msg timestamp="20230815 08:31:42.514" level="TRACE">Arguments: [  ]</msg>
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:42.514" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:42.514" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:42.514" level="INFO">Switching browser to browser=f52cb416-5b1d-4371-9489-a3b1cfe5f8d1</msg>
<msg timestamp="20230815 08:31:42.515" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230815 08:31:42.515" level="INFO">Reusing existing browser with id: browser=f52cb416-5b1d-4371-9489-a3b1cfe5f8d1</msg>
<msg timestamp="20230815 08:31:42.515" level="TRACE">Return: 'browser=f52cb416-5b1d-4371-9489-a3b1cfe5f8d1'</msg>
<status status="PASS" starttime="20230815 08:31:42.514" endtime="20230815 08:31:42.515"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:42.516" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:42.516" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:42.515" endtime="20230815 08:31:42.516"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:42.516" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:42.516" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:42.522" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:42.522" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:42.522" level="TRACE">Return: 'context=e07f9176-bdb4-4e43-aa6f-a96f258c4558'</msg>
<status status="PASS" starttime="20230815 08:31:42.516" endtime="20230815 08:31:42.522"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:42.522" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:42.640" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:42.640" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:42.640" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:42.640" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:42.637721+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:42.522" endtime="20230815 08:31:42.640"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:42.514" endtime="20230815 08:31:42.641"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.641" endtime="20230815 08:31:42.641"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>${environment}</arg>
<status status="NOT RUN" starttime="20230815 08:31:42.641" endtime="20230815 08:31:42.641"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:42.514" endtime="20230815 08:31:42.641"/>
</kw>
<kw name="Select Hotel for Search" library="mui">
<arg>hotel=HKI2</arg>
<status status="NOT RUN" starttime="20230815 08:31:42.641" endtime="20230815 08:31:42.641"/>
</kw>
<kw name="Click Search Button" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.641" endtime="20230815 08:31:42.641"/>
</kw>
<kw name="Select Reservation with Check in Complete" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:42.641" endtime="20230815 08:31:42.641"/>
</kw>
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled off</doc>
<status status="FAIL" starttime="20230815 08:31:42.513" endtime="20230815 08:31:42.642">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:31:42.643" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:45.134" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:31:45.134" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:31:42.643" endtime="20230815 08:31:45.134"/>
</kw>
<doc>This file contains test cases for testing MUI-430.robot</doc>
<status status="FAIL" starttime="20230815 08:31:41.888" endtime="20230815 08:31:45.135"/>
</suite>
<status status="FAIL" starttime="20230815 08:31:41.886" endtime="20230815 08:31:45.139"/>
</suite>
<suite id="s1-s3-s2" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression">
<suite id="s1-s3-s2-s1" name="Smoke" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/smoke.robot">
<test id="s1-s3-s2-s1-t1" name="Try Logging in without Password" line="10">
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:45.155" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:45.155" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:45.155" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/e7cef734-af09-4386-83c6-091d25a10014"}</msg>
<msg timestamp="20230815 08:31:45.479" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/e7cef734-af09-4386-83c6-091d25a10014"}</msg>
<msg timestamp="20230815 08:31:45.480" level="TRACE">Return: 'browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2'</msg>
<status status="PASS" starttime="20230815 08:31:45.155" endtime="20230815 08:31:45.480"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:45.480" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:45.481" level="INFO">No context open.</msg>
<msg timestamp="20230815 08:31:45.482" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:45.480" endtime="20230815 08:31:45.482"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:45.482" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:45.483" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:45.494" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:45.495" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:45.495" level="TRACE">Return: 'context=0dadea1a-03a7-42aa-a0bd-78a6155e272b'</msg>
<status status="PASS" starttime="20230815 08:31:45.482" endtime="20230815 08:31:45.495"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:45.495" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:45.784" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:45.785" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:45.785" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:45.785" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================", grpc_status:8, created_time:"2023-08-15T08:31:45.782928+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:45.495" endtime="20230815 08:31:45.785"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.155" endtime="20230815 08:31:45.785"/>
</kw>
<kw name="Log in to Nelson Portal with Credentials" library="mui">
<arg>admin</arg>
<arg>${EMPTY}</arg>
<status status="NOT RUN" starttime="20230815 08:31:45.786" endtime="20230815 08:31:45.786"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.155" endtime="20230815 08:31:45.786">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s3-s2-s1-t2" name="Try Logging in without Username" line="14">
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:45.787" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:45.788" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:45.788" level="INFO">Switching browser to browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:45.788" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230815 08:31:45.788" level="INFO">Reusing existing browser with id: browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:45.788" level="TRACE">Return: 'browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2'</msg>
<status status="PASS" starttime="20230815 08:31:45.787" endtime="20230815 08:31:45.788"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:45.789" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:45.789" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:45.789" endtime="20230815 08:31:45.789"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:45.789" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:45.789" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:45.800" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:45.800" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:45.800" level="TRACE">Return: 'context=a914f976-eaa5-4445-ac3d-e7c9c0d42104'</msg>
<status status="PASS" starttime="20230815 08:31:45.789" endtime="20230815 08:31:45.800"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:45.800" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:45.911" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:45.911" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:45.911" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:45.911" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:45.909181+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:45.800" endtime="20230815 08:31:45.911"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.787" endtime="20230815 08:31:45.912"/>
</kw>
<kw name="Log in to Nelson Portal with Credentials" library="mui">
<arg>${EMPTY}</arg>
<arg>pass</arg>
<status status="NOT RUN" starttime="20230815 08:31:45.912" endtime="20230815 08:31:45.912"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.787" endtime="20230815 08:31:45.912">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s3-s2-s1-t3" name="Try Logging in with incorrect Password/Username combination" line="18">
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:45.914" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:45.914" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:45.914" level="INFO">Switching browser to browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:45.915" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230815 08:31:45.915" level="INFO">Reusing existing browser with id: browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:45.915" level="TRACE">Return: 'browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2'</msg>
<status status="PASS" starttime="20230815 08:31:45.914" endtime="20230815 08:31:45.915"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:45.915" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:45.915" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:45.915" endtime="20230815 08:31:45.915"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:45.915" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:45.915" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:45.920" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:45.920" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:45.920" level="TRACE">Return: 'context=ae19a876-8e4a-432a-ae63-01bb06eb312c'</msg>
<status status="PASS" starttime="20230815 08:31:45.915" endtime="20230815 08:31:45.920"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:45.921" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:46.033" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:46.033" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:46.033" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:46.034" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:46.031452+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:45.920" endtime="20230815 08:31:46.034"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.914" endtime="20230815 08:31:46.034"/>
</kw>
<kw name="Log in to Nelson Portal with Credentials" library="mui">
<arg>admin</arg>
<arg>admin</arg>
<status status="NOT RUN" starttime="20230815 08:31:46.034" endtime="20230815 08:31:46.034"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:45.913" endtime="20230815 08:31:46.034">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s3-s2-s1-t4" name="Log in with correct Username and Password" line="22">
<kw name="Open Browser to Nelson Portal" library="mui">
<msg timestamp="20230815 08:31:46.036" level="TRACE">Arguments: [  ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230815 08:31:46.036" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True ]</msg>
<msg timestamp="20230815 08:31:46.036" level="INFO">Switching browser to browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:46.037" level="INFO">Successfully changed active browser</msg>
<msg timestamp="20230815 08:31:46.037" level="INFO">Reusing existing browser with id: browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2</msg>
<msg timestamp="20230815 08:31:46.037" level="TRACE">Return: 'browser=e83e007f-5cdb-4b5e-a5ac-b87324d02cb2'</msg>
<status status="PASS" starttime="20230815 08:31:46.036" endtime="20230815 08:31:46.037"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230815 08:31:46.037" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230815 08:31:46.037" level="TRACE">Return: '1 minute 30 seconds'</msg>
<status status="PASS" starttime="20230815 08:31:46.037" endtime="20230815 08:31:46.037"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230815 08:31:46.037" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:46.037" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20230815 08:31:46.040" level="INFO">Successfully created context. </msg>
<msg timestamp="20230815 08:31:46.040" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20230815 08:31:46.040" level="TRACE">Return: 'context=4aca13d9-5383-4c22-a103-12db588dfe7e'</msg>
<status status="PASS" starttime="20230815 08:31:46.037" endtime="20230815 08:31:46.040"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${MUI_URL}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230815 08:31:46.040" level="TRACE">Arguments: [ '$MUI_URL' ]</msg>
<msg timestamp="20230815 08:31:46.149" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:46.149" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:46.150" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<msg timestamp="20230815 08:31:46.150" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:46.147668+03:00", grpc_status:8, grpc_message:"Error: page.goto: Protocol error (Page.navigate): Invalid url: \"$MUI_URL\" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13\ndispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39\n_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36\nreceiveMessage@chrome://juggler/content/components/Juggler.js:118:20\n\n=========================== logs ===========================\nnavigating to \"$MUI_URL\", waiting until \"load\"\n============================================================"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 733, in new_page
    response = stub.NewPage(
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20230815 08:31:46.040" endtime="20230815 08:31:46.150"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:46.036" endtime="20230815 08:31:46.150"/>
</kw>
<kw name="Log in to Nelson Portal" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:46.150" endtime="20230815 08:31:46.150"/>
</kw>
<kw name="Verify Dashboard Elements" library="mui">
<status status="NOT RUN" starttime="20230815 08:31:46.150" endtime="20230815 08:31:46.150"/>
</kw>
<kw name="Select Environment" library="mui">
<arg>${ENVIRONMENT}</arg>
<status status="NOT RUN" starttime="20230815 08:31:46.151" endtime="20230815 08:31:46.151"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:46.036" endtime="20230815 08:31:46.151">Error: page.goto: Protocol error (Page.navigate): Invalid url: "$MUI_URL" Page.navigate@chrome://juggler/content/protocol/PageHandler.js:386:13
dispatch@chrome://juggler/content/protocol/Dispatcher.js:132:39
_dispatch@chrome://juggler/content/protocol/Dispatcher.js:69:36
receiveMessage@chrome://juggler/content/components/Juggler.js:118:20

=========================== logs ===========================
navigating to "$MUI_URL", waiting until "load"
============================================================</status>
</test>
<test id="s1-s3-s2-s1-t5" name="Verify Users Page" line="28">
<kw name="Click" library="Browser">
<arg>//a[contains(@href, "users") and (@class="capitalize")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:31:46.152" level="TRACE">Arguments: [ '//a[contains(@href, "users") and (@class="capitalize")]' ]</msg>
<msg timestamp="20230815 08:31:46.152" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:31:46.154" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:46.154" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:46.154" level="FAIL">Error: Could not find active page</msg>
<msg timestamp="20230815 08:31:46.154" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: Could not find active page"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"Error: Could not find active page", grpc_status:8, created_time:"2023-08-15T08:31:46.1528+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: Could not find active page</msg>
<status status="FAIL" starttime="20230815 08:31:46.152" endtime="20230815 08:31:46.154"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:46.152" endtime="20230815 08:31:46.154">Error: Could not find active page</status>
</test>
<test id="s1-s3-s2-s1-t6" name="Verify User Profile" line="31">
<kw name="Click" library="Browser">
<arg>(//span[contains(@class, "avatar")])[0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:31:46.156" level="TRACE">Arguments: [ '(//span[contains(@class, "avatar")])[0]' ]</msg>
<msg timestamp="20230815 08:31:46.156" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:31:46.157" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:46.157" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:46.158" level="FAIL">Error: Could not find active page</msg>
<msg timestamp="20230815 08:31:46.158" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: Could not find active page"
	debug_error_string = "UNKNOWN:Error received from peer  {grpc_message:"Error: Could not find active page", grpc_status:8, created_time:"2023-08-15T08:31:46.156201+03:00"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: Could not find active page</msg>
<status status="FAIL" starttime="20230815 08:31:46.156" endtime="20230815 08:31:46.158"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:46.155" endtime="20230815 08:31:46.158">Error: Could not find active page</status>
</test>
<test id="s1-s3-s2-s1-t7" name="Log Out" line="34">
<kw name="Click" library="Browser">
<arg>(//img[contains(@src, "signout")][0]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20230815 08:31:46.159" level="TRACE">Arguments: [ '(//img[contains(@src, "signout")][0]' ]</msg>
<msg timestamp="20230815 08:31:46.159" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20230815 08:31:46.161" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230815 08:31:46.161" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20230815 08:31:46.161" level="FAIL">Error: Could not find active page</msg>
<msg timestamp="20230815 08:31:46.162" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: Could not find active page"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-08-15T08:31:46.159871+03:00", grpc_status:8, grpc_message:"Error: Could not find active page"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: Could not find active page</msg>
<status status="FAIL" starttime="20230815 08:31:46.159" endtime="20230815 08:31:46.162"/>
</kw>
<status status="FAIL" starttime="20230815 08:31:46.159" endtime="20230815 08:31:46.162">Error: Could not find active page</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230815 08:31:46.163" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230815 08:31:48.401" level="INFO">Closed browser</msg>
<msg timestamp="20230815 08:31:48.401" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230815 08:31:46.163" endtime="20230815 08:31:48.401"/>
</kw>
<doc>This file contains smoke tests for MUI</doc>
<status status="FAIL" starttime="20230815 08:31:45.141" endtime="20230815 08:31:48.401"/>
</suite>
<status status="FAIL" starttime="20230815 08:31:45.139" endtime="20230815 08:31:48.405"/>
</suite>
<status status="FAIL" starttime="20230815 08:31:41.885" endtime="20230815 08:31:48.406"/>
</suite>
<doc>Argument file for running tests on Omena Staging Environmen (test3)</doc>
<status status="FAIL" starttime="20230815 08:11:03.882" endtime="20230815 08:31:48.408"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="25" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="7" fail="6" skip="0">kensington_stay</stat>
<stat pass="1" fail="1" skip="0">smoke</stat>
<stat pass="0" fail="7" skip="0">smoke, booking, BUI2-556, online-checkin</stat>
</tag>
<suite>
<stat pass="10" fail="25" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="3" fail="10" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="2" fail="9" skip="0" id="s1-s1-s1" name="Feature">Testsuites.BUI.Feature</stat>
<stat pass="2" fail="9" skip="0" id="s1-s1-s1-s1" name="Online Check In">Testsuites.BUI.Feature.Online Check In</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1-s1-s1-s1" name="BUI2-556">Testsuites.BUI.Feature.Online Check In.BUI2-556</stat>
<stat pass="2" fail="2" skip="0" id="s1-s1-s1-s1-s2" name="BUI2-557">Testsuites.BUI.Feature.Online Check In.BUI2-557</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s2" name="Regression">Testsuites.BUI.Regression</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s2-s1" name="Create Booking">Testsuites.BUI.Regression.Create Booking</stat>
<stat pass="7" fail="6" skip="0" id="s1-s2" name="Customer Specific">Testsuites.Customer Specific</stat>
<stat pass="7" fail="6" skip="0" id="s1-s2-s1" name="Kensington Stay">Testsuites.Customer Specific.Kensington Stay</stat>
<stat pass="1" fail="2" skip="0" id="s1-s2-s1-s1" name="Confirm Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Confirm Bdc Booking</stat>
<stat pass="3" fail="1" skip="0" id="s1-s2-s1-s2" name="Create Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Create Bdc Booking</stat>
<stat pass="3" fail="2" skip="0" id="s1-s2-s1-s3" name="Create Bui Booking">Testsuites.Customer Specific.Kensington Stay.Create Bui Booking</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s1-s4" name="Create Mui Booking">Testsuites.Customer Specific.Kensington Stay.Create Mui Booking</stat>
<stat pass="0" fail="9" skip="0" id="s1-s3" name="MUI">Testsuites.MUI</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s1" name="Feature">Testsuites.MUI.Feature</stat>
<stat pass="0" fail="2" skip="0" id="s1-s3-s1-s1" name="MUI-430">Testsuites.MUI.Feature.MUI-430</stat>
<stat pass="0" fail="7" skip="0" id="s1-s3-s2" name="Regression">Testsuites.MUI.Regression</stat>
<stat pass="0" fail="7" skip="0" id="s1-s3-s2-s1" name="Smoke">Testsuites.MUI.Regression.Smoke</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230815 08:11:04.132" level="WARN">Python-dotenv could not parse statement starting at line 17</msg>
<msg timestamp="20230815 08:11:04.132" level="WARN">Python-dotenv could not parse statement starting at line 19</msg>
<msg timestamp="20230815 08:11:04.132" level="WARN">Python-dotenv could not parse statement starting at line 20</msg>
</errors>
</robot>
