<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.16 on darwin)" generated="20231030 19:04:12.090" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/Users/sara/code/nelson-test-automation/testsuites">
<suite id="s1-s1" name="BUI" source="/Users/sara/code/nelson-test-automation/testsuites/BUI">
<suite id="s1-s1-s1" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression">
<suite id="s1-s1-s1-s1" name="Create Booking" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/create_booking.robot">
<kw name="Open Browser to Landing Page" library="common" type="SETUP">
<doc>A general startup keyword for opening a browser to the landing page.</doc>
<msg timestamp="20231030 19:04:13.012" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Environment: ${environment}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20231030 19:04:13.013" level="TRACE">Arguments: [ 'Environment: test3' ]</msg>
<msg timestamp="20231030 19:04:13.013" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:13.012" endtime="20231030 19:04:13.013"/>
</kw>
<if>
<branch type="IF" condition="'${environment}' == 'test3'">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${url.landing.page}</arg>
<arg>https://test3.omenahotels.com/en</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 19:04:13.013" level="TRACE">Arguments: [ '${url.landing.page}' | 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20231030 19:04:13.013" level="INFO">${url.landing.page} = https://test3.omenahotels.com/en</msg>
<msg timestamp="20231030 19:04:13.013" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</kw>
<status status="PASS" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</branch>
<branch type="ELSE IF" condition="'${environment}' == 'ks_test'">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${url.landing.page}</arg>
<arg>https://test.kensingtonstay.com/en</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</branch>
<branch type="ELSE IF" condition="'${environment}' == 'salo_test'">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${url.landing.page}</arg>
<arg>https://test.kensingtonstay.com/en</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.013"/>
</branch>
<branch type="ELSE IF" condition="'${environment}' == 'test4'">
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${url.landing.page}</arg>
<arg>https://test4.omenahotels.com/en</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20231030 19:04:13.014" endtime="20231030 19:04:13.014"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.014"/>
</branch>
<status status="PASS" starttime="20231030 19:04:13.013" endtime="20231030 19:04:13.014"/>
</if>
<kw name="Open New Browser To URL" library="common">
<arg>${url.landing.page}</arg>
<msg timestamp="20231030 19:04:13.014" level="TRACE">Arguments: [ ${url}='https://test3.omenahotels.com/en' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<arg>downloadsPath=${EXECDIR}/resources/downloads</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20231030 19:04:13.014" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=30) | downloadsPath='/Users/sara/code/nelson-test-automation/resources/downloads' ]</msg>
<msg timestamp="20231030 19:04:13.014" level="INFO">{"browser": "firefox", "headless": true, "chromiumSandbox": false, "devtools": false, "downloadsPath": "/Users/sara/code/nelson-test-automation/resources/downloads", "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "ignoreDefaultArgs": false, "slowMo": 0.0, "timeout": 30000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b778d126-1f34-43d3-a868-ebaf31f30327"}</msg>
<msg timestamp="20231030 19:04:14.469" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"chromiumSandbox":false,"devtools":false,"downloadsPath":"/Users/sara/code/nelson-test-automation/resources/downloads","handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"ignoreDefaultArgs":false,"slowMo":0,"timeout":30000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/test3/browser/traces/b778d126-1f34-43d3-a868-ebaf31f30327"}</msg>
<msg timestamp="20231030 19:04:14.469" level="TRACE">Return: 'browser=bca8966d-083b-4ea9-ada1-a01ce314a966'</msg>
<status status="PASS" starttime="20231030 19:04:13.014" endtime="20231030 19:04:14.469"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20231030 19:04:14.470" level="TRACE">Arguments: [ datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:14.471" level="INFO">No context open.</msg>
<msg timestamp="20231030 19:04:14.471" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20231030 19:04:14.469" endtime="20231030 19:04:14.471"/>
</kw>
<kw name="New Context" library="Browser">
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20231030 19:04:14.471" level="TRACE">Arguments: [ acceptDownloads=True ]</msg>
<msg timestamp="20231030 19:04:14.471" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "serviceWorkers": "allow",
  "viewport": {
    "height": 720,
    "width": 1280
  }
}</msg>
<msg timestamp="20231030 19:04:14.487" level="INFO">Successfully created context. </msg>
<msg timestamp="20231030 19:04:14.487" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'serviceWorkers': 'allow', 'viewport': {'height': 720, 'width': 1280}}</msg>
<msg timestamp="20231030 19:04:14.487" level="TRACE">Return: 'context=aab7281a-8f52-4173-a3b8-998e501624de'</msg>
<status status="PASS" starttime="20231030 19:04:14.471" endtime="20231030 19:04:14.487"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20231030 19:04:14.488" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en' ]</msg>
<msg timestamp="20231030 19:04:22.837" level="INFO">Successfully initialized new page object and opened url: https://test3.omenahotels.com/en</msg>
<msg timestamp="20231030 19:04:22.837" level="DEBUG">Video is not enabled.</msg>
<msg timestamp="20231030 19:04:22.837" level="TRACE">Return: {'page_id': 'page=cf32834b-9c61-4659-95b2-02af420074f6', 'video_path': ''}</msg>
<status status="PASS" starttime="20231030 19:04:14.487" endtime="20231030 19:04:22.837"/>
</kw>
<msg timestamp="20231030 19:04:22.837" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:13.014" endtime="20231030 19:04:22.837"/>
</kw>
<kw name="Allow Cookies" library="common">
<doc>Allow Cookies/Toggle Cookie allowance</doc>
<msg timestamp="20231030 19:04:22.837" level="TRACE">Arguments: [  ]</msg>
<kw name="Is Element Found" library="common">
<var>${cookieModalVisible}</var>
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<doc>A keyword that has a very complex way of figuring out whether an
element is found or not because I had trouble with the built-in keywords
Can be solved differently if you have a better idea</doc>
<msg timestamp="20231030 19:04:22.837" level="TRACE">Arguments: [ ${selector}='id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<kw name="Set Browser Timeout" library="Browser">
<arg>10s</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20231030 19:04:22.838" level="TRACE">Arguments: [ datetime.timedelta(seconds=10) ]</msg>
<msg timestamp="20231030 19:04:22.839" level="INFO">Set timeout to: 10000</msg>
<msg timestamp="20231030 19:04:22.839" level="TRACE">Return: '30 seconds'</msg>
<status status="PASS" starttime="20231030 19:04:22.838" endtime="20231030 19:04:22.839"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Elements" library="Browser">
<var>${els}</var>
<arg>${selector}</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns a reference to Playwright [https://playwright.dev/docs/api/class-locator|Locator]
for all matched elements by ``selector``.</doc>
<msg timestamp="20231030 19:04:22.840" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20231030 19:04:22.870" level="INFO">Found Locator@id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0 Locators successfully.</msg>
<msg timestamp="20231030 19:04:22.870" level="DEBUG">["id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0"]</msg>
<msg timestamp="20231030 19:04:22.870" level="TRACE">Return: ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<msg timestamp="20231030 19:04:22.870" level="INFO">${els} = ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0']</msg>
<status status="PASS" starttime="20231030 19:04:22.839" endtime="20231030 19:04:22.870"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${count}</var>
<arg>${els}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20231030 19:04:22.871" level="TRACE">Arguments: [ ['id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll &gt;&gt; nth=0'] ]</msg>
<msg timestamp="20231030 19:04:22.871" level="INFO">Length is 1</msg>
<msg timestamp="20231030 19:04:22.871" level="TRACE">Return: 1</msg>
<msg timestamp="20231030 19:04:22.871" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20231030 19:04:22.870" endtime="20231030 19:04:22.871"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>True</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20231030 19:04:22.871" level="TRACE">Arguments: [ 'True' ]</msg>
<msg timestamp="20231030 19:04:22.871" level="TRACE">Return: 'True'</msg>
<msg timestamp="20231030 19:04:22.871" level="INFO">${visible} = True</msg>
<status status="PASS" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</kw>
<status status="PASS" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</branch>
<status status="PASS" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</if>
<status status="PASS" starttime="20231030 19:04:22.839" endtime="20231030 19:04:22.871"/>
</branch>
<branch type="EXCEPT">
<kw name="Set Variable" library="BuiltIn">
<var>${visible}</var>
<arg>False</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.871"/>
</branch>
<status status="PASS" starttime="20231030 19:04:22.839" endtime="20231030 19:04:22.871"/>
</try>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20231030 19:04:22.871" level="TRACE">Arguments: [ datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:22.873" level="INFO">Set timeout to: 30000</msg>
<msg timestamp="20231030 19:04:22.873" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20231030 19:04:22.871" endtime="20231030 19:04:22.873"/>
</kw>
<msg timestamp="20231030 19:04:22.873" level="TRACE">Return: 'True'</msg>
<msg timestamp="20231030 19:04:22.873" level="INFO">${cookieModalVisible} = True</msg>
<status status="PASS" starttime="20231030 19:04:22.837" endtime="20231030 19:04:22.873"/>
</kw>
<if>
<branch type="IF" condition="${cookieModalVisible}">
<kw name="Click" library="Browser">
<arg>id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:22.873" level="TRACE">Arguments: [ 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' ]</msg>
<msg timestamp="20231030 19:04:22.874" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:22.946" level="DEBUG">Clicked element: 'id=CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:22.946" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.873" endtime="20231030 19:04:22.946"/>
</kw>
<status status="PASS" starttime="20231030 19:04:22.873" endtime="20231030 19:04:22.946"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Cookie Modal Visible</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231030 19:04:22.946" endtime="20231030 19:04:22.946"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:22.946" endtime="20231030 19:04:22.946"/>
</branch>
<status status="PASS" starttime="20231030 19:04:22.873" endtime="20231030 19:04:22.946"/>
</if>
<msg timestamp="20231030 19:04:22.946" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.837" endtime="20231030 19:04:22.946"/>
</kw>
<kw name="Set Environment" library="common">
<doc>A keyword that gets the environment from URL and checks it is the same as variable</doc>
<msg timestamp="20231030 19:04:22.946" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${currentUrl}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231030 19:04:22.947" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20231030 19:04:22.948" level="DEBUG">https://test3.omenahotels.com/en/</msg>
<msg timestamp="20231030 19:04:22.948" level="TRACE">Return: 'https://test3.omenahotels.com/en/'</msg>
<msg timestamp="20231030 19:04:22.948" level="INFO">${currentUrl} = https://test3.omenahotels.com/en/</msg>
<status status="PASS" starttime="20231030 19:04:22.947" endtime="20231030 19:04:22.948"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${env}</var>
<arg>${currentUrl}</arg>
<msg timestamp="20231030 19:04:22.948" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/' ]</msg>
<msg timestamp="20231030 19:04:22.949" level="TRACE">Return: 'test3'</msg>
<msg timestamp="20231030 19:04:22.949" level="INFO">${env} = test3</msg>
<status status="PASS" starttime="20231030 19:04:22.948" endtime="20231030 19:04:22.949"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${env}</arg>
<arg>${environment}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20231030 19:04:22.949" level="TRACE">Arguments: [ 'test3' | 'test3' ]</msg>
<msg timestamp="20231030 19:04:22.949" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<msg timestamp="20231030 19:04:22.949" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.949" endtime="20231030 19:04:22.949"/>
</kw>
<msg timestamp="20231030 19:04:22.949" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.946" endtime="20231030 19:04:22.949"/>
</kw>
<msg timestamp="20231030 19:04:22.949" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:13.012" endtime="20231030 19:04:22.949"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="Create A New Booking as" line="12">
<kw name="Select Hotel" library="booking">
<doc>Select Hotel by using a number as an argument, default Lönnrotinkatu</doc>
<msg timestamp="20231030 19:04:22.950" level="TRACE">Arguments: [ ${hotel}='Lönnrotin' ]</msg>
<if>
<branch type="IF" condition="&quot;${environment}&quot; == &quot;ks_test&quot;">
<kw name="Log" library="BuiltIn">
<arg>No hotel to be selected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20231030 19:04:22.950" endtime="20231030 19:04:22.950"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:22.950" endtime="20231030 19:04:22.950"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Selecting Hotel: ${hotel}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 19:04:22.950" level="TRACE">Arguments: [ 'Selecting Hotel: Lönnrotin' ]</msg>
<msg timestamp="20231030 19:04:22.950" level="INFO">Selecting Hotel: Lönnrotin</msg>
<msg timestamp="20231030 19:04:22.950" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.950" endtime="20231030 19:04:22.950"/>
</kw>
<kw name="Click" library="Browser">
<arg>//div[contains(@data-nelson-btn, "hotels")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:22.950" level="TRACE">Arguments: [ '//div[contains(@data-nelson-btn, "hotels")]' ]</msg>
<msg timestamp="20231030 19:04:22.951" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:23.005" level="DEBUG">Clicked element: '//div[contains(@data-nelson-btn, "hotels")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:23.005" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.950" endtime="20231030 19:04:23.005"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20231030 19:04:23.005" level="TRACE">Arguments: [ ${element}="//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 19:04:23.006" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:23.016" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state visible</msg>
<msg timestamp="20231030 19:04:23.016" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.005" endtime="20231030 19:04:23.016"/>
</kw>
<msg timestamp="20231030 19:04:23.016" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.005" endtime="20231030 19:04:23.016"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:23.016" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" ]</msg>
<msg timestamp="20231030 19:04:23.017" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:23.177" level="DEBUG">Clicked element: '//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:23.177" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.016" endtime="20231030 19:04:23.177"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(@class, 'dropdown-item') and contains(text(), '${hotel}')]</arg>
<arg>hidden</arg>
<arg>timeout=3s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 19:04:23.178" level="TRACE">Arguments: [ "//a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')]" | &lt;ElementState.hidden: 8&gt; | timeout=datetime.timedelta(seconds=3) ]</msg>
<msg timestamp="20231030 19:04:23.181" level="INFO">Waited for Element with selector //a[contains(@class, 'dropdown-item') and contains(text(), 'Lönnrotin')] at state hidden</msg>
<msg timestamp="20231030 19:04:23.181" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.177" endtime="20231030 19:04:23.181"/>
</kw>
<status status="PASS" starttime="20231030 19:04:22.950" endtime="20231030 19:04:23.181"/>
</branch>
<status status="PASS" starttime="20231030 19:04:22.950" endtime="20231030 19:04:23.181"/>
</if>
<msg timestamp="20231030 19:04:23.181" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:22.950" endtime="20231030 19:04:23.181"/>
</kw>
<kw name="Select Dates" library="booking">
<msg timestamp="20231030 19:04:23.182" level="TRACE">Arguments: [  ]</msg>
<kw name="Log" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20231030 19:04:23.182" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20231030 19:04:23.182" level="INFO"/>
<msg timestamp="20231030 19:04:23.182" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.182" endtime="20231030 19:04:23.182"/>
</kw>
<msg timestamp="20231030 19:04:23.182" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.182" endtime="20231030 19:04:23.182"/>
</kw>
<kw name="Select Guests" library="booking">
<doc>Selects the number of guests for the booking, current implementation will only check the dropdown</doc>
<msg timestamp="20231030 19:04:23.183" level="TRACE">Arguments: [ ${rooms}='1' | ${persons}='1' | ${children}='0' ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20231030 19:04:23.183" level="TRACE">Arguments: [ '' ]</msg>
<msg timestamp="20231030 19:04:23.183" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.183" endtime="20231030 19:04:23.183"/>
</kw>
<msg timestamp="20231030 19:04:23.183" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.182" endtime="20231030 19:04:23.183"/>
</kw>
<kw name="Click Book or Find Rooms Button" library="booking">
<msg timestamp="20231030 19:04:23.184" level="TRACE">Arguments: [  ]</msg>
<kw name="Get Url" library="Browser">
<var>${url}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231030 19:04:23.184" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20231030 19:04:23.185" level="DEBUG">https://test3.omenahotels.com/en/#</msg>
<msg timestamp="20231030 19:04:23.185" level="TRACE">Return: 'https://test3.omenahotels.com/en/#'</msg>
<msg timestamp="20231030 19:04:23.185" level="INFO">${url} = https://test3.omenahotels.com/en/#</msg>
<status status="PASS" starttime="20231030 19:04:23.184" endtime="20231030 19:04:23.185"/>
</kw>
<kw name="Check If String Contains" library="common">
<var>${booking}</var>
<arg>${url}</arg>
<arg>/booking/</arg>
<msg timestamp="20231030 19:04:23.185" level="TRACE">Arguments: [ ${string}='https://test3.omenahotels.com/en/#' | ${substring}='/booking/' ]</msg>
<kw name="Check If String Contains Substring" library="Helpers">
<var>${contains}</var>
<arg>${string}</arg>
<arg>${substring}</arg>
<msg timestamp="20231030 19:04:23.185" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/#' | '/booking/' ]</msg>
<msg timestamp="20231030 19:04:23.185" level="TRACE">Return: False</msg>
<msg timestamp="20231030 19:04:23.185" level="INFO">${contains} = False</msg>
<status status="PASS" starttime="20231030 19:04:23.185" endtime="20231030 19:04:23.185"/>
</kw>
<msg timestamp="20231030 19:04:23.185" level="TRACE">Return: False</msg>
<msg timestamp="20231030 19:04:23.185" level="INFO">${booking} = False</msg>
<status status="PASS" starttime="20231030 19:04:23.185" endtime="20231030 19:04:23.185"/>
</kw>
<if>
<branch type="IF" condition="${booking} == True">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Find rooms')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20231030 19:04:23.186" endtime="20231030 19:04:23.186"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:23.185" endtime="20231030 19:04:23.186"/>
</branch>
<branch type="ELSE">
<kw name="Click" library="Browser">
<arg>//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:23.186" level="TRACE">Arguments: [ "//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]" ]</msg>
<msg timestamp="20231030 19:04:23.186" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:23.270" level="DEBUG">Clicked element: '//button[contains(@class, 'booking-form-button') and contains(text(), 'Book')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:23.270" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.186" endtime="20231030 19:04:23.270"/>
</kw>
<status status="PASS" starttime="20231030 19:04:23.186" endtime="20231030 19:04:23.270"/>
</branch>
<status status="PASS" starttime="20231030 19:04:23.185" endtime="20231030 19:04:23.270"/>
</if>
<msg timestamp="20231030 19:04:23.270" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.183" endtime="20231030 19:04:23.270"/>
</kw>
<kw name="Select a Standard Room" library="booking">
<msg timestamp="20231030 19:04:23.271" level="TRACE">Arguments: [  ]</msg>
<kw name="Wait Until Visible" library="common">
<arg>${btnExtras}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20231030 19:04:23.271" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 19:04:23.271" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:24.114" level="INFO">Waited for Element with selector (//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1] at state visible</msg>
<msg timestamp="20231030 19:04:24.114" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.271" endtime="20231030 19:04:24.114"/>
</kw>
<msg timestamp="20231030 19:04:24.114" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.271" endtime="20231030 19:04:24.114"/>
</kw>
<kw name="Get Element States" library="Browser">
<var>${visible}</var>
<arg>//div[contains(text(), 'Select room')]</arg>
<arg>then</arg>
<arg>bool(value &amp; visible)</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Get the active states from the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:24.114" level="TRACE">Arguments: [ "//div[contains(text(), 'Select room')]" | &lt;AssertionOperator.then: 'then'&gt; | 'bool(value &amp; visible)' ]</msg>
<msg timestamp="20231030 19:04:24.366" level="DEBUG">States: 2</msg>
<msg timestamp="20231030 19:04:24.366" level="DEBUG">Assertion polling statistics:
First element asserted in: 0.25132012367248535 seconds
Total tries: 1
Elapsed time in retries 0.0 seconds</msg>
<msg timestamp="20231030 19:04:24.366" level="TRACE">Return: False</msg>
<msg timestamp="20231030 19:04:24.366" level="INFO">${visible} = False</msg>
<status status="PASS" starttime="20231030 19:04:24.114" endtime="20231030 19:04:24.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${visible}</arg>
<arg>Select Standard and Remove Other Room Selection</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20231030 19:04:24.366" level="TRACE">Arguments: [ False | 'Select Standard and Remove Other Room Selection' ]</msg>
<msg timestamp="20231030 19:04:24.366" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:24.366" endtime="20231030 19:04:24.366"/>
</kw>
<msg timestamp="20231030 19:04:24.366" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:23.271" endtime="20231030 19:04:24.366"/>
</kw>
<kw name="Click Continue to Extras Button" library="booking">
<doc>Clicks the continue to extras button</doc>
<msg timestamp="20231030 19:04:24.367" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>${btnExtras}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:24.367" level="TRACE">Arguments: [ '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' ]</msg>
<msg timestamp="20231030 19:04:24.367" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:25.841" level="DEBUG">Clicked element: '(//div[contains(@view,"booking")]//button[contains(text(), "Continue to extras")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:25.841" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:24.367" endtime="20231030 19:04:25.841"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>${btnPayment}</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<msg timestamp="20231030 19:04:25.842" level="TRACE">Arguments: [ ${element}='(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 19:04:25.842" level="TRACE">Arguments: [ '(//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1]' | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:26.629" level="INFO">Waited for Element with selector (//div[contains(@view,"extras")]//button[contains(text(), "Continue to payment")])[1] at state visible</msg>
<msg timestamp="20231030 19:04:26.630" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:25.842" endtime="20231030 19:04:26.630"/>
</kw>
<msg timestamp="20231030 19:04:26.630" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:25.842" endtime="20231030 19:04:26.630"/>
</kw>
<msg timestamp="20231030 19:04:26.630" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:24.367" endtime="20231030 19:04:26.630"/>
</kw>
<kw name="Continue to Payment" library="booking">
<msg timestamp="20231030 19:04:26.630" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//button[normalize-space()='Continue to payment'])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:26.631" level="TRACE">Arguments: [ "(//button[normalize-space()='Continue to payment'])[1]" ]</msg>
<msg timestamp="20231030 19:04:26.631" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:26.705" level="DEBUG">Clicked element: '(//button[normalize-space()='Continue to payment'])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:26.705" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:26.630" endtime="20231030 19:04:26.705"/>
</kw>
<msg timestamp="20231030 19:04:26.705" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:26.630" endtime="20231030 19:04:26.706"/>
</kw>
<kw name="Fill in Contact Information" library="booking">
<doc>Fills in Contact information that can be given as arguments or use default values
Uses a password if the environment is bui and</doc>
<msg timestamp="20231030 19:04:26.706" level="TRACE">Arguments: [ ${firstName}='Mos' | ${lastName}='Def' | ${phone}='401705972' | ${ssn}='170479-371J' | ${env}='bui' ]</msg>
<kw name="Create Email and Return Inbox" library="common">
<var>${inbox}</var>
<doc>Creates a new email address and returns the inbox object</doc>
<msg timestamp="20231030 19:04:26.706" level="TRACE">Arguments: [  ]</msg>
<kw name="Create new Inbox" library="MailSlurp">
<var>${inbox}</var>
<msg timestamp="20231030 19:04:26.706" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20231030 19:04:27.691" level="INFO">Debug Config
&lt;mailslurp_client.configuration.Configuration object at 0x102974160&gt;
{'created_at': datetime.datetime(2023, 10, 30, 17, 4, 27, 678000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '0629ecfc-4257-45ec-b3c8-ac8b781a5887',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}
&lt;MailSlurp.MailSlurp object at 0x102974040&gt;</msg>
<msg timestamp="20231030 19:04:27.691" level="TRACE">Return: {'created_at': datetime.datetime(2023, 10, 30, 17, 4, 27, 678000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '0629ecfc-4257-45ec-b3c8-ac8b781a5887',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20231030 19:04:27.691" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 10, 30, 17, 4, 27, 678000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com',
 'e...</msg>
<status status="PASS" starttime="20231030 19:04:26.706" endtime="20231030 19:04:27.691"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20231030 19:04:27.692" level="TRACE">Arguments: [ '0629ecfc-4257-45ec-b3c8-ac8b781a5887' ]</msg>
<msg timestamp="20231030 19:04:27.692" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.691" endtime="20231030 19:04:27.692"/>
</kw>
<msg timestamp="20231030 19:04:27.692" level="TRACE">Return: {'created_at': datetime.datetime(2023, 10, 30, 17, 4, 27, 678000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com',
 'expires_at': None,
 'favourite': False,
 'id': '0629ecfc-4257-45ec-b3c8-ac8b781a5887',
 'inbox_type': 'HTTP_INBOX',
 'name': None,
 'read_only': False,
 'tags': None,
 'user_id': 'a2f48756-8279-471d-bb55-980a32334d37',
 'virtual_inbox': False}</msg>
<msg timestamp="20231030 19:04:27.692" level="INFO">${inbox} = {'created_at': datetime.datetime(2023, 10, 30, 17, 4, 27, 678000, tzinfo=tzutc()),
 'description': None,
 'domain_id': None,
 'email_address': '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com',
 'e...</msg>
<status status="PASS" starttime="20231030 19:04:26.706" endtime="20231030 19:04:27.692"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstName</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20231030 19:04:27.692" level="TRACE">Arguments: [ ${selector}='id=firstName' | ${text}='Mos' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.692" level="TRACE">Arguments: [ 'id=firstName' ]</msg>
<msg timestamp="20231030 19:04:27.693" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:27.747" level="DEBUG">Clicked element: 'id=firstName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:27.747" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.692" endtime="20231030 19:04:27.747"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.747" level="TRACE">Arguments: [ 'id=firstName' | 'Mos' ]</msg>
<msg timestamp="20231030 19:04:27.747" level="INFO">Fills the text 'Mos' in the given field.</msg>
<msg timestamp="20231030 19:04:27.806" level="DEBUG">Fill text Mos on id=firstName with force: false</msg>
<msg timestamp="20231030 19:04:27.806" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.747" endtime="20231030 19:04:27.806"/>
</kw>
<msg timestamp="20231030 19:04:27.806" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.692" endtime="20231030 19:04:27.806"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastName</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20231030 19:04:27.807" level="TRACE">Arguments: [ ${selector}='id=lastName' | ${text}='Def' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.807" level="TRACE">Arguments: [ 'id=lastName' ]</msg>
<msg timestamp="20231030 19:04:27.807" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:27.883" level="DEBUG">Clicked element: 'id=lastName' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:27.883" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.807" endtime="20231030 19:04:27.883"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.883" level="TRACE">Arguments: [ 'id=lastName' | 'Def' ]</msg>
<msg timestamp="20231030 19:04:27.883" level="INFO">Fills the text 'Def' in the given field.</msg>
<msg timestamp="20231030 19:04:27.902" level="DEBUG">Fill text Def on id=lastName with force: false</msg>
<msg timestamp="20231030 19:04:27.902" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.883" endtime="20231030 19:04:27.902"/>
</kw>
<msg timestamp="20231030 19:04:27.902" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.806" endtime="20231030 19:04:27.902"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${inbox.email_address}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20231030 19:04:27.902" level="TRACE">Arguments: [ ${selector}='id=email' | ${text}='0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.903" level="TRACE">Arguments: [ 'id=email' ]</msg>
<msg timestamp="20231030 19:04:27.903" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:27.980" level="DEBUG">Clicked element: 'id=email' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:27.981" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.903" endtime="20231030 19:04:27.981"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 19:04:27.981" level="TRACE">Arguments: [ 'id=email' | '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com' ]</msg>
<msg timestamp="20231030 19:04:27.981" level="INFO">Fills the text '0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com' in the given field.</msg>
<msg timestamp="20231030 19:04:28.003" level="DEBUG">Fill text 0629ecfc-4257-45ec-b3c8-ac8b781a5887@mailslurp.com on id=email with force: false</msg>
<msg timestamp="20231030 19:04:28.003" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.981" endtime="20231030 19:04:28.003"/>
</kw>
<msg timestamp="20231030 19:04:28.003" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:27.902" endtime="20231030 19:04:28.003"/>
</kw>
<kw name="Get Url" library="Browser">
<var>${u}</var>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the current URL.</doc>
<msg timestamp="20231030 19:04:28.003" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20231030 19:04:28.004" level="DEBUG">https://test3.omenahotels.com/en/booking/#/payment</msg>
<msg timestamp="20231030 19:04:28.004" level="TRACE">Return: 'https://test3.omenahotels.com/en/booking/#/payment'</msg>
<msg timestamp="20231030 19:04:28.004" level="INFO">${u} = https://test3.omenahotels.com/en/booking/#/payment</msg>
<status status="PASS" starttime="20231030 19:04:28.003" endtime="20231030 19:04:28.004"/>
</kw>
<kw name="Get Environment From Url" library="Helpers">
<var>${e}</var>
<arg>${u}</arg>
<msg timestamp="20231030 19:04:28.004" level="TRACE">Arguments: [ 'https://test3.omenahotels.com/en/booking/#/payment' ]</msg>
<msg timestamp="20231030 19:04:28.004" level="TRACE">Return: 'test3'</msg>
<msg timestamp="20231030 19:04:28.004" level="INFO">${e} = test3</msg>
<status status="PASS" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.004"/>
</kw>
<if>
<branch type="IF" condition="'${e}' == 'test-kensington'">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone.uk}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.004"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.004"/>
</branch>
<branch type="ELSE">
<kw name="Click and Fill" library="common">
<arg>id=phoneNumber</arg>
<arg>${phone}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20231030 19:04:28.005" level="TRACE">Arguments: [ ${selector}='id=phoneNumber' | ${text}='401705972' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.005" level="TRACE">Arguments: [ 'id=phoneNumber' ]</msg>
<msg timestamp="20231030 19:04:28.005" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.083" level="DEBUG">Clicked element: 'id=phoneNumber' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.083" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.005" endtime="20231030 19:04:28.083"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.083" level="TRACE">Arguments: [ 'id=phoneNumber' | '401705972' ]</msg>
<msg timestamp="20231030 19:04:28.083" level="INFO">Fills the text '401705972' in the given field.</msg>
<msg timestamp="20231030 19:04:28.101" level="DEBUG">Fill text 401705972 on id=phoneNumber with force: false</msg>
<msg timestamp="20231030 19:04:28.101" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.083" endtime="20231030 19:04:28.101"/>
</kw>
<msg timestamp="20231030 19:04:28.101" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.101"/>
</kw>
<status status="PASS" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.101"/>
</branch>
<status status="PASS" starttime="20231030 19:04:28.004" endtime="20231030 19:04:28.101"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${inbox.id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20231030 19:04:28.102" level="TRACE">Arguments: [ '0629ecfc-4257-45ec-b3c8-ac8b781a5887' ]</msg>
<msg timestamp="20231030 19:04:28.102" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.101" endtime="20231030 19:04:28.102"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${inbox.id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20231030 19:04:28.102" level="TRACE">Arguments: [ '$ID' | '${inbox.id}' ]</msg>
<msg timestamp="20231030 19:04:28.103" level="INFO">${ID} = 0629ecfc-4257-45ec-b3c8-ac8b781a5887</msg>
<msg timestamp="20231030 19:04:28.103" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.102" endtime="20231030 19:04:28.103"/>
</kw>
<kw name="Get Element Count" library="Browser">
<var>${passwordVisible}</var>
<arg>id=password</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20231030 19:04:28.103" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20231030 19:04:28.108" level="TRACE">Return: 1</msg>
<msg timestamp="20231030 19:04:28.108" level="INFO">${passwordVisible} = 1</msg>
<status status="PASS" starttime="20231030 19:04:28.103" endtime="20231030 19:04:28.108"/>
</kw>
<if>
<branch type="IF" condition="'${env}'=='bui' and '${passwordVisible}'&gt;'0'">
<kw name="Click and Fill" library="common">
<arg>id=password</arg>
<arg>${password}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<msg timestamp="20231030 19:04:28.109" level="TRACE">Arguments: [ ${selector}='id=password' | ${text}='NotARealPass123!' ]</msg>
<kw name="Click" library="Browser">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.109" level="TRACE">Arguments: [ 'id=password' ]</msg>
<msg timestamp="20231030 19:04:28.109" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.181" level="DEBUG">Clicked element: 'id=password' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.182" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.109" endtime="20231030 19:04:28.182"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${selector}</arg>
<arg>${text}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.182" level="TRACE">Arguments: [ 'id=password' | 'NotARealPass123!' ]</msg>
<msg timestamp="20231030 19:04:28.182" level="INFO">Fills the text 'NotARealPass123!' in the given field.</msg>
<msg timestamp="20231030 19:04:28.189" level="DEBUG">Fill text NotARealPass123! on id=password with force: false</msg>
<msg timestamp="20231030 19:04:28.189" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.182" endtime="20231030 19:04:28.189"/>
</kw>
<msg timestamp="20231030 19:04:28.189" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.108" endtime="20231030 19:04:28.189"/>
</kw>
<status status="PASS" starttime="20231030 19:04:28.108" endtime="20231030 19:04:28.189"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>No password filled</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20231030 19:04:28.190" endtime="20231030 19:04:28.190"/>
</kw>
<status status="NOT RUN" starttime="20231030 19:04:28.189" endtime="20231030 19:04:28.190"/>
</branch>
<status status="PASS" starttime="20231030 19:04:28.108" endtime="20231030 19:04:28.190"/>
</if>
<msg timestamp="20231030 19:04:28.190" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:26.706" endtime="20231030 19:04:28.190"/>
</kw>
<kw name="Accept offers and Terms" library="booking">
<msg timestamp="20231030 19:04:28.190" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>(//div[contains(text(), 'like to receive')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.190" level="TRACE">Arguments: [ "(//div[contains(text(), 'like to receive')])[1]" ]</msg>
<msg timestamp="20231030 19:04:28.190" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.270" level="DEBUG">Clicked element: '(//div[contains(text(), 'like to receive')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.270" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.190" endtime="20231030 19:04:28.270"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.270" level="TRACE">Arguments: [ "(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]" ]</msg>
<msg timestamp="20231030 19:04:28.270" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.328" level="DEBUG">Clicked element: '(//*[contains(text(),'Accept')]/ancestor::label//span[contains(@class,'chakra-checkbox__control')])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.328" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.270" endtime="20231030 19:04:28.328"/>
</kw>
<msg timestamp="20231030 19:04:28.328" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.190" endtime="20231030 19:04:28.328"/>
</kw>
<kw name="Select Web Bank and Nordea as Payment Method" library="booking">
<msg timestamp="20231030 19:04:28.329" level="TRACE">Arguments: [  ]</msg>
<kw name="Click" library="Browser">
<arg>//div[contains(text(), "Web bank payment")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.329" level="TRACE">Arguments: [ '//div[contains(text(), "Web bank payment")]' ]</msg>
<msg timestamp="20231030 19:04:28.329" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.392" level="DEBUG">Clicked element: '//div[contains(text(), "Web bank payment")]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.392" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.329" endtime="20231030 19:04:28.392"/>
</kw>
<kw name="Click" library="Browser">
<arg>//p[contains(text(), 'Nordea')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.392" level="TRACE">Arguments: [ "//p[contains(text(), 'Nordea')]" ]</msg>
<msg timestamp="20231030 19:04:28.393" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.464" level="DEBUG">Clicked element: '//p[contains(text(), 'Nordea')]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.464" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.392" endtime="20231030 19:04:28.464"/>
</kw>
<kw name="Click" library="Browser">
<arg>(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:28.464" level="TRACE">Arguments: [ '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' ]</msg>
<msg timestamp="20231030 19:04:28.465" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:28.536" level="DEBUG">Clicked element: '(//div[contains(@view,"payment")]//button[contains(text(), "Pay")])[1]' with options: '{"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}' successfully.</msg>
<msg timestamp="20231030 19:04:28.536" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.464" endtime="20231030 19:04:28.536"/>
</kw>
<msg timestamp="20231030 19:04:28.536" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.328" endtime="20231030 19:04:28.536"/>
</kw>
<kw name="Complete Payment Successfully" library="booking">
<msg timestamp="20231030 19:04:28.537" level="TRACE">Arguments: [  ]</msg>
<kw name="Simulate Success or Failure" library="booking">
<arg>success</arg>
<msg timestamp="20231030 19:04:28.537" level="TRACE">Arguments: [ ${which}='success' ]</msg>
<kw name="Wait For Elements State" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<arg>visible</arg>
<arg>timeout=${timeout}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20231030 19:04:28.537" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" | &lt;ElementState.visible: 4&gt; | timeout=datetime.timedelta(seconds=30) ]</msg>
<msg timestamp="20231030 19:04:34.471" level="INFO">Waited for Element with selector //a[contains(text(), 'Simulate success to merchant')] at state visible</msg>
<msg timestamp="20231030 19:04:34.471" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20231030 19:04:28.537" endtime="20231030 19:04:34.471"/>
</kw>
<kw name="Click" library="Browser">
<arg>//a[contains(text(), 'Simulate ${which} to merchant')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20231030 19:04:34.472" level="TRACE">Arguments: [ "//a[contains(text(), 'Simulate success to merchant')]" ]</msg>
<msg timestamp="20231030 19:04:34.472" level="DEBUG">Click options are: {"button": "left", "clickCount": 1, "force": false, "noWaitAfter": false, "trial": false}</msg>
<msg timestamp="20231030 19:04:34.916" level="DEBUG">Unknown error received: Execution terminated by signal</msg>
<msg timestamp="20231030 19:04:34.920" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20231030 19:04:34.921" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20231030 19:04:34.921" level="FAIL">Execution terminated by signal</msg>
<msg timestamp="20231030 19:04:34.926" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 446, in click_with_options
    response = stub.Click(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1028, in __call__
    state, call, = self._blocking(request, timeout, metadata, credentials,
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1017, in _blocking
    event = call.next_event()
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 338, in grpc._cython.cygrpc.SegregatedCall.next_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 169, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 163, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 78, in grpc._cython.cygrpc._latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 62, in grpc._cython.cygrpc._internal_latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 58, in grpc._cython.cygrpc._interpret_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/tag.pyx.pxi", line 71, in grpc._cython.cygrpc._BatchOperationTag.event
  File "src/python/grpcio/grpc/_cython/_cygrpc/operation.pyx.pxi", line 138, in grpc._cython.cygrpc.ReceiveInitialMetadataOperation.un_c
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 69, in grpc._cython.cygrpc._metadata
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 70, in genexpr
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 64, in grpc._cython.cygrpc._metadatum
  File "&lt;string&gt;", line 1, in &lt;lambda&gt;
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robot/running/signalhandler.py", line 40, in __call__
    self._stop_execution_gracefully()
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robot/running/signalhandler.py", line 43, in _stop_execution_gracefully
    raise ExecutionFailed('Execution terminated by signal', exit=True)
robot.errors.ExecutionFailed: Execution terminated by signal

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 366, in click
    self.click_with_options(
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/interaction.py", line 451, in click_with_options
    logger.debug(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 165, in grpc_channel
    raise AssertionError(str(error))
AssertionError: Execution terminated by signal</msg>
<status status="FAIL" starttime="20231030 19:04:34.472" endtime="20231030 19:04:34.926"/>
</kw>
<status status="FAIL" starttime="20231030 19:04:28.537" endtime="20231030 19:04:34.927"/>
</kw>
<kw name="Verify Payment was successful" library="booking">
<status status="NOT RUN" starttime="20231030 19:04:34.927" endtime="20231030 19:04:34.928"/>
</kw>
<status status="FAIL" starttime="20231030 19:04:28.537" endtime="20231030 19:04:34.928"/>
</kw>
<doc>A new booker opens the page and does a successful booking</doc>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:22.949" endtime="20231030 19:04:34.928">Execution terminated by signal</status>
</test>
<test id="s1-s1-s1-s1-t2" name="Confirm Email and Open Link" line="26">
<kw name="Get Variable Value" library="BuiltIn">
<var>${id}</var>
<arg>$ID</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<msg timestamp="20231030 19:04:34.931" level="TRACE">Arguments: [ '$ID' ]</msg>
<status status="FAIL" starttime="20231030 19:04:34.931" endtime="20231030 19:04:34.931"/>
</kw>
<kw name="Wait for Latest Booking Confirmation and Extract Link" library="MailSlurp">
<var>${modify_link}</var>
<arg>${id}</arg>
<status status="NOT RUN" starttime="20231030 19:04:34.931" endtime="20231030 19:04:34.931"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${modify_link}</arg>
<status status="NOT RUN" starttime="20231030 19:04:34.932" endtime="20231030 19:04:34.932"/>
</kw>
<doc>A new booker receives an email with a link to modify the booking</doc>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.931" endtime="20231030 19:04:34.932">Execution terminated by signal</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20231030 19:04:34.934" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20231030 19:04:34.938" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20231030 19:04:34.938" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/test3/playwright-log.txt for additional details.</msg>
<msg timestamp="20231030 19:04:34.938" level="TRACE">Return: None</msg>
<msg timestamp="20231030 19:04:34.938" level="FAIL">Error: browserContext.close: Target page, context or browser has been closed</msg>
<msg timestamp="20231030 19:04:34.939" level="DEBUG">Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 158, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 146, in close_browser
    response = stub.CloseBrowser(Request.Empty())
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 1030, in __call__
    return _end_unary_response_blocking(state, call, False, None)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/grpc/_channel.py", line 910, in _end_unary_response_blocking
    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable
grpc._channel._InactiveRpcError: &lt;_InactiveRpcError of RPC that terminated with:
	status = StatusCode.RESOURCE_EXHAUSTED
	details = "Error: browserContext.close: Target page, context or browser has been closed"
	debug_error_string = "UNKNOWN:Error received from peer  {created_time:"2023-10-30T19:04:34.936398+02:00", grpc_status:8, grpc_message:"Error: browserContext.close: Target page, context or browser has been closed"}"
&gt;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/keywords/playwright_state.py", line 150, in close_browser
    logger.info(response.log)
  File "/Users/sara/micromamba/lib/python3.9/contextlib.py", line 137, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/sara/code/nelson-test-automation/venv/lib/python3.9/site-packages/Browser/playwright.py", line 162, in grpc_channel
    raise AssertionError(error.details())
AssertionError: Error: browserContext.close: Target page, context or browser has been closed</msg>
<status status="FAIL" starttime="20231030 19:04:34.934" endtime="20231030 19:04:34.939">Error: browserContext.close: Target page, context or browser has been closed</status>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:12.100" endtime="20231030 19:04:34.939">Suite teardown failed:
Error: browserContext.close: Target page, context or browser has been closed</status>
</suite>
<suite id="s1-s1-s1-s2" name="Create Booking And Check In" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/create_booking_and_check_in.robot">
<test id="s1-s1-s1-s2-t1" name="Select Hotel, Dates and Guests" line="15">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.943" endtime="20231030 19:04:34.943">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t2" name="Check Available Rooms and Select a Standard Room" line="20">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.943" endtime="20231030 19:04:34.944">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t3" name="Continue to Extras and Select Join for Free" line="24">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.944" endtime="20231030 19:04:34.944">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t4" name="Fill in Booker Contact Information" line="29">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.944" endtime="20231030 19:04:34.945">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t5" name="Pay using Web Bank and Nordea" line="33">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.945" endtime="20231030 19:04:34.945">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t6" name="Check In Online" line="37">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.945" endtime="20231030 19:04:34.945">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s2-t7" name="Wait for Door Code and Verify Page" line="43">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.946" endtime="20231030 19:04:34.946">Test execution stopped due to a fatal error.</status>
</test>
<doc>This is a test suite for booking a room and checking in online</doc>
<status status="FAIL" starttime="20231030 19:04:34.942" endtime="20231030 19:04:34.946"/>
</suite>
<suite id="s1-s1-s1-s3" name="Online Check In" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/online_check_in">
<suite id="s1-s1-s1-s3-s1" name="BUI2-557" source="/Users/sara/code/nelson-test-automation/testsuites/BUI/regression/online_check_in/BUI2-557.robot">
<test id="s1-s1-s1-s3-s1-t1" name="Create a new Booking" line="11">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.947" endtime="20231030 19:04:34.948">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s3-s1-t2" name="Add Someone Else as the Main Guest" line="25">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.948" endtime="20231030 19:04:34.948">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s3-s1-t3" name="Validation shows msg for fields marked" line="40">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.948" endtime="20231030 19:04:34.948">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s3-s1-t4" name="Showing imported passport when the National is not Finland" line="63">
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.949" endtime="20231030 19:04:34.949">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" starttime="20231030 19:04:34.947" endtime="20231030 19:04:34.949"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.947" endtime="20231030 19:04:34.950"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:12.100" endtime="20231030 19:04:34.950"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:12.099" endtime="20231030 19:04:34.951"/>
</suite>
<suite id="s1-s2" name="Customer Specific" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific">
<suite id="s1-s2-s1" name="Kensington Stay" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay">
<suite id="s1-s2-s1-s1" name="Confirm Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/confirm_bdc_booking.robot">
<test id="s1-s2-s1-s1-t1" name="Create A New Booking on Booking.com for a later date and verify Emails" line="15">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.952" endtime="20231030 19:04:34.953">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s1-t2" name="Open Booking in MUI" line="18">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.953" endtime="20231030 19:04:34.953">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s1-t3" name="Cancel Booking in MUI" line="27">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.953" endtime="20231030 19:04:34.953">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.952" endtime="20231030 19:04:34.954"/>
</suite>
<suite id="s1-s2-s1-s2" name="Create Bdc Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bdc_booking.robot">
<test id="s1-s2-s1-s2-t1" name="Open BDC and Check for Availability" line="15">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.954" endtime="20231030 19:04:34.955">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t2" name="Start Reservation Process" line="19">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.955" endtime="20231030 19:04:34.955">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t3" name="Fill Contact Information and Payment Details" line="23">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.955" endtime="20231030 19:04:34.955">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s2-t4" name="Verify Confirmation Email" line="29">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.955" endtime="20231030 19:04:34.956">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.954" endtime="20231030 19:04:34.956"/>
</suite>
<suite id="s1-s2-s1-s3" name="Create Bui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_bui_booking.robot">
<test id="s1-s2-s1-s3-t1" name="Open Kensington Stay Home Page" line="13">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.957" endtime="20231030 19:04:34.957">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t2" name="Open Menu and Click Book a Room" line="19">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.957" endtime="20231030 19:04:34.957">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t3" name="Verify Booking Page Elements" line="25">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.958" endtime="20231030 19:04:34.958">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t4" name="Create New Booking in KS" line="28">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.958" endtime="20231030 19:04:34.958">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s2-s1-s3-t5" name="Start Check in Process" line="35">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.958" endtime="20231030 19:04:34.959">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying the Kensington Stay Home Page</doc>
<status status="FAIL" starttime="20231030 19:04:34.956" endtime="20231030 19:04:34.959"/>
</suite>
<suite id="s1-s2-s1-s4" name="Create Mui Booking" source="/Users/sara/code/nelson-test-automation/testsuites/customer_specific/kensington_stay/create_mui_booking.robot">
<test id="s1-s2-s1-s4-t1" name="Start Creating a new Booking in MUI" line="13">
<tag>kensington_stay</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20231030 19:04:34.959" endtime="20231030 19:04:34.960">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.959" endtime="20231030 19:04:34.960"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.952" endtime="20231030 19:04:34.960"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.951" endtime="20231030 19:04:34.961"/>
</suite>
<suite id="s1-s3" name="MUI" source="/Users/sara/code/nelson-test-automation/testsuites/MUI">
<suite id="s1-s3-s1" name="Regression" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression">
<suite id="s1-s3-s1-s1" name="Mui.Booking" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/mui.booking.robot">
<test id="s1-s3-s1-s1-t1" name="Create New Booking" line="13">
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.962" endtime="20231030 19:04:34.962">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.962" endtime="20231030 19:04:34.962"/>
</suite>
<suite id="s1-s3-s1-s2" name="Mui.Gbe" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/mui.gbe.robot">
<test id="s1-s3-s1-s2-t1" name="Create New Group Booking" line="13">
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.963" endtime="20231030 19:04:34.963">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying GBE2 in MUI</doc>
<status status="FAIL" starttime="20231030 19:04:34.963" endtime="20231030 19:04:34.963"/>
</suite>
<suite id="s1-s3-s1-s3" name="Mui.Reservations" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/mui.reservations.robot">
<test id="s1-s3-s1-s3-t1" name="Reservations: Filter all reservations with Check-in incomplete" line="13">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled onOpen Browser to Nelson Portal and Login</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.964" endtime="20231030 19:04:34.964">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s3-t2" name="Reservations: Remove filter and find a reservation with Check-in complete" line="24">
<doc>Test case verifying the functionality of the Check in incomplete filter
when it's toggled off</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.964" endtime="20231030 19:04:34.965">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s3-t3" name="Reservations: Filter Reservations by Stay Dates" line="32">
<doc>Test case verifying the functionality of the Departing Today filter
when it's toggled on</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.965" endtime="20231030 19:04:34.965">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s3-t4" name="Verify all things" line="40">
<doc>Placeholder for now</doc>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.965" endtime="20231030 19:04:34.966">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.964" endtime="20231030 19:04:34.966"/>
</suite>
<suite id="s1-s3-s1-s4" name="Mui.Smoke" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/regression/mui.smoke.robot">
<test id="s1-s3-s1-s4-t1" name="Log in with correct Username and Password" line="20">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.967" endtime="20231030 19:04:34.967">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t2" name="Open Reports Page and Verify" line="31">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.967" endtime="20231030 19:04:34.967">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t3" name="Verify Each Report Can be Downloaded" line="35">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.967" endtime="20231030 19:04:34.968">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t4" name="Verify Usage Page" line="49">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.968" endtime="20231030 19:04:34.968">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t5" name="Verify Maintenance Page" line="53">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.968" endtime="20231030 19:04:34.968">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t6" name="Verify Customers Page" line="57">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.968" endtime="20231030 19:04:34.969">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t7" name="Verify Pricing Page" line="60">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.969" endtime="20231030 19:04:34.969">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t8" name="Verify Allotments Page" line="63">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.969" endtime="20231030 19:04:34.969">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t9" name="Verify Vouchers Page" line="66">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.969" endtime="20231030 19:04:34.970">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t10" name="Verify Breakfast Page" line="69">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.970" endtime="20231030 19:04:34.970">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t11" name="Verify Settings Page" line="72">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.970" endtime="20231030 19:04:34.970">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t12" name="Verify Locks Page" line="75">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.970" endtime="20231030 19:04:34.971">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t13" name="Log Out" line="78">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.971" endtime="20231030 19:04:34.971">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t14" name="Try Logging in without Password" line="81">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.971" endtime="20231030 19:04:34.971">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t15" name="Try Logging in without Username" line="86">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.971" endtime="20231030 19:04:34.972">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s3-s1-s4-t16" name="Try Logging in with incorrect Password/Username combination" line="91">
<tag>prod</tag>
<tag>robot:exit</tag>
<tag>smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.972" endtime="20231030 19:04:34.972">Test execution stopped due to a fatal error.</status>
</test>
<doc>This file contains smoke tests for MUI</doc>
<status status="FAIL" starttime="20231030 19:04:34.966" endtime="20231030 19:04:34.972"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.961" endtime="20231030 19:04:34.973"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.961" endtime="20231030 19:04:34.973"/>
</suite>
<suite id="s1-s4" name="OTA" source="/Users/sara/code/nelson-test-automation/testsuites/OTA">
<suite id="s1-s4-s1" name="Bdc" source="/Users/sara/code/nelson-test-automation/testsuites/OTA/bdc.robot">
<test id="s1-s4-s1-t1" name="Open BDC and Check for Availability" line="12">
<tag>robot:exit</tag>
<tag>staging, omena, bdc, smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.974" endtime="20231030 19:04:34.974">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-s1-t2" name="Create Reservation in BDC" line="16">
<tag>robot:exit</tag>
<tag>staging, omena, bdc, smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.974" endtime="20231030 19:04:34.975">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-s1-t3" name="Fill Contact Information and Payment Details" line="21">
<tag>robot:exit</tag>
<tag>staging, omena, bdc, smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.975" endtime="20231030 19:04:34.975">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-s1-t4" name="Verify Confirmation Email Arrives" line="27">
<tag>robot:exit</tag>
<tag>staging, omena, bdc, smoke</tag>
<status status="FAIL" starttime="20231030 19:04:34.975" endtime="20231030 19:04:34.975">Test execution stopped due to a fatal error.</status>
</test>
<doc>A test suite for verifying BDC booking functionality</doc>
<status status="FAIL" starttime="20231030 19:04:34.974" endtime="20231030 19:04:34.975"/>
</suite>
<suite id="s1-s4-s2" name="Expedia" source="/Users/sara/code/nelson-test-automation/testsuites/OTA/expedia.robot">
<test id="s1-s4-s2-t1" name="Check Availability in Expedia" line="30">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.976" endtime="20231030 19:04:34.976">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-s2-t2" name="Select Hotel and Create Booking" line="36">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.976" endtime="20231030 19:04:34.977">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s4-s2-t3" name="Fill Booker Details" line="43">
<tag>robot:exit</tag>
<tag>smoke, booking, BUI2-556, online-checkin</tag>
<status status="FAIL" starttime="20231030 19:04:34.977" endtime="20231030 19:04:34.977">Test execution stopped due to a fatal error.</status>
</test>
<doc>This is a test suite for booking a room and checking in online</doc>
<status status="FAIL" starttime="20231030 19:04:34.976" endtime="20231030 19:04:34.977"/>
</suite>
<status status="FAIL" starttime="20231030 19:04:34.974" endtime="20231030 19:04:34.977"/>
</suite>
<doc>Argument file for running tests on Omena Staging Environmen (test3)</doc>
<status status="FAIL" starttime="20231030 19:04:12.091" endtime="20231030 19:04:34.978"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="55" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="13" skip="0">kensington_stay</stat>
<stat pass="0" fail="16" skip="0">prod</stat>
<stat pass="0" fail="24" skip="0">smoke</stat>
<stat pass="0" fail="10" skip="0">smoke, booking, BUI2-556, online-checkin</stat>
<stat pass="0" fail="4" skip="0">staging, omena, bdc, smoke</stat>
</tag>
<suite>
<stat pass="0" fail="55" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="0" fail="13" skip="0" id="s1-s1" name="BUI">Testsuites.BUI</stat>
<stat pass="0" fail="13" skip="0" id="s1-s1-s1" name="Regression">Testsuites.BUI.Regression</stat>
<stat pass="0" fail="2" skip="0" id="s1-s1-s1-s1" name="Create Booking">Testsuites.BUI.Regression.Create Booking</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1-s1-s2" name="Create Booking And Check In">Testsuites.BUI.Regression.Create Booking And Check In</stat>
<stat pass="0" fail="4" skip="0" id="s1-s1-s1-s3" name="Online Check In">Testsuites.BUI.Regression.Online Check In</stat>
<stat pass="0" fail="4" skip="0" id="s1-s1-s1-s3-s1" name="BUI2-557">Testsuites.BUI.Regression.Online Check In.BUI2-557</stat>
<stat pass="0" fail="13" skip="0" id="s1-s2" name="Customer Specific">Testsuites.Customer Specific</stat>
<stat pass="0" fail="13" skip="0" id="s1-s2-s1" name="Kensington Stay">Testsuites.Customer Specific.Kensington Stay</stat>
<stat pass="0" fail="3" skip="0" id="s1-s2-s1-s1" name="Confirm Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Confirm Bdc Booking</stat>
<stat pass="0" fail="4" skip="0" id="s1-s2-s1-s2" name="Create Bdc Booking">Testsuites.Customer Specific.Kensington Stay.Create Bdc Booking</stat>
<stat pass="0" fail="5" skip="0" id="s1-s2-s1-s3" name="Create Bui Booking">Testsuites.Customer Specific.Kensington Stay.Create Bui Booking</stat>
<stat pass="0" fail="1" skip="0" id="s1-s2-s1-s4" name="Create Mui Booking">Testsuites.Customer Specific.Kensington Stay.Create Mui Booking</stat>
<stat pass="0" fail="22" skip="0" id="s1-s3" name="MUI">Testsuites.MUI</stat>
<stat pass="0" fail="22" skip="0" id="s1-s3-s1" name="Regression">Testsuites.MUI.Regression</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s1-s1" name="Mui.Booking">Testsuites.MUI.Regression.Mui.Booking</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3-s1-s2" name="Mui.Gbe">Testsuites.MUI.Regression.Mui.Gbe</stat>
<stat pass="0" fail="4" skip="0" id="s1-s3-s1-s3" name="Mui.Reservations">Testsuites.MUI.Regression.Mui.Reservations</stat>
<stat pass="0" fail="16" skip="0" id="s1-s3-s1-s4" name="Mui.Smoke">Testsuites.MUI.Regression.Mui.Smoke</stat>
<stat pass="0" fail="7" skip="0" id="s1-s4" name="OTA">Testsuites.OTA</stat>
<stat pass="0" fail="4" skip="0" id="s1-s4-s1" name="Bdc">Testsuites.OTA.Bdc</stat>
<stat pass="0" fail="3" skip="0" id="s1-s4-s2" name="Expedia">Testsuites.OTA.Expedia</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
