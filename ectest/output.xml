<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.11.4 on darwin)" generated="20230804 11:11:32.996" rpa="false" schemaversion="3">
<suite id="s1" name="Testsuites" source="/Users/sara/code/nelson-test-automation/testsuites">
<suite id="s1-s1" name="MUI" source="/Users/sara/code/nelson-test-automation/testsuites/MUI">
<suite id="s1-s1-s1" name="EC" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/EC">
<suite id="s1-s1-s1-s1" name="Smoke" source="/Users/sara/code/nelson-test-automation/testsuites/MUI/EC/smoke.robot">
<test id="s1-s1-s1-s1-t1" name="Create A New Booking on Booking.com for today and verify Emails" line="13">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<msg timestamp="20230804 11:11:33.601" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: ${inbox_id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230804 11:11:33.602" level="TRACE">Arguments: [ 'Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<msg timestamp="20230804 11:11:33.602" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230804 11:11:33.601" endtime="20230804 11:11:33.602"/>
</kw>
<msg timestamp="20230804 11:11:33.602" level="TRACE">Return: '492aa3bb-9e4b-410a-a02c-84f13ace89e8'</msg>
<msg timestamp="20230804 11:11:33.602" level="INFO">${id} = 492aa3bb-9e4b-410a-a02c-84f13ace89e8</msg>
<status status="PASS" starttime="20230804 11:11:33.601" endtime="20230804 11:11:33.602"/>
</kw>
<kw name="Open New Browser To URL" library="common">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<msg timestamp="20230804 11:11:33.602" level="TRACE">Arguments: [ ${url}='https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<arg>timeout=${timeout}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20230804 11:11:33.602" level="TRACE">Arguments: [ &lt;SupportedBrowsers.firefox: 2&gt; | True | timeout=datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230804 11:11:33.602" level="INFO">{"browser": "firefox", "headless": true, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 90000.0, "tracesDir": "/Users/sara/code/nelson-test-automation/reports/ectest/browser/traces/097e27fc-1e92-426e-b57a-d6eb08f105dc"}</msg>
<msg timestamp="20230804 11:11:34.037" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":true,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":90000,"tracesDir":"/Users/sara/code/nelson-test-automation/reports/ectest/browser/traces/097e27fc-1e92-426e-b57a-d6eb08f105dc"}</msg>
<msg timestamp="20230804 11:11:34.038" level="TRACE">Return: 'browser=eadc932b-f39e-48fc-8cf1-a642f95f00d3'</msg>
<status status="PASS" starttime="20230804 11:11:33.602" endtime="20230804 11:11:34.038"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20230804 11:11:34.038" level="TRACE">Arguments: [ datetime.timedelta(seconds=90) ]</msg>
<msg timestamp="20230804 11:11:34.039" level="INFO">No context open.</msg>
<msg timestamp="20230804 11:11:34.039" level="TRACE">Return: '10 seconds'</msg>
<status status="PASS" starttime="20230804 11:11:34.038" endtime="20230804 11:11:34.039"/>
</kw>
<kw name="New Context" library="Browser">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20230804 11:11:34.040" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230804 11:11:34.040" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": "",
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  }
}</msg>
<msg timestamp="20230804 11:11:34.066" level="INFO">Successfully created context. </msg>
<msg timestamp="20230804 11:11:34.066" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': '', 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}}</msg>
<msg timestamp="20230804 11:11:34.066" level="TRACE">Return: 'context=8594cbcb-a65c-4b48-95fe-f17ca5a3d861'</msg>
<status status="PASS" starttime="20230804 11:11:34.040" endtime="20230804 11:11:34.066"/>
</kw>
<kw name="New Page" library="Browser">
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20230804 11:11:34.066" level="TRACE">Arguments: [ 'https://secure.booking.com/book.html?hotel_id=10304890&amp;test=1' ]</msg>
<msg timestamp="20230804 11:11:35.499" level="DEBUG">Unknown error received: [Errno 32] Broken pipe</msg>
<msg timestamp="20230804 11:11:35.500" level="INFO">Keyword 'Take Screenshot  fail-screenshot-{index}' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20230804 11:11:35.501" level="INFO">See also file:///Users/sara/code/nelson-test-automation/reports/ectest/playwright-log.txt for additional details.</msg>
<msg timestamp="20230804 11:11:35.501" level="FAIL">[Errno 32] Broken pipe</msg>
<msg timestamp="20230804 11:11:35.505" level="DEBUG">Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/playwright.py", line 160, in grpc_channel
    yield playwright_pb2_grpc.PlaywrightStub(self._channel)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/keywords/playwright_state.py", line 716, in new_page
    response = stub.NewPage(
               ^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/grpc/_channel.py", line 1028, in __call__
    state, call, = self._blocking(request, timeout, metadata, credentials,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/grpc/_channel.py", line 1017, in _blocking
    event = call.next_event()
            ^^^^^^^^^^^^^^^^^
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 338, in grpc._cython.cygrpc.SegregatedCall.next_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 169, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/channel.pyx.pxi", line 163, in grpc._cython.cygrpc._next_call_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 78, in grpc._cython.cygrpc._latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 62, in grpc._cython.cygrpc._internal_latent_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/completion_queue.pyx.pxi", line 58, in grpc._cython.cygrpc._interpret_event
  File "src/python/grpcio/grpc/_cython/_cygrpc/tag.pyx.pxi", line 71, in grpc._cython.cygrpc._BatchOperationTag.event
  File "src/python/grpcio/grpc/_cython/_cygrpc/operation.pyx.pxi", line 209, in grpc._cython.cygrpc.ReceiveStatusOnClientOperation.un_c
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 69, in grpc._cython.cygrpc._metadata
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 70, in genexpr
  File "src/python/grpcio/grpc/_cython/_cygrpc/metadata.pyx.pxi", line 64, in grpc._cython.cygrpc._metadatum
  File "&lt;string&gt;", line 1, in &lt;lambda&gt;
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/robot/running/signalhandler.py", line 38, in __call__
    sys.__stderr__.write('Second signal will force exit.\n')
BrokenPipeError: [Errno 32] Broken pipe

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/browser.py", line 1095, in run_keyword
    raise e
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/browser.py", line 1084, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/robotlibcore.py", line 126, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/keywords/playwright_state.py", line 715, in new_page
    with self.playwright.grpc_channel() as stub:
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/contextlib.py", line 155, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/Browser/playwright.py", line 167, in grpc_channel
    raise AssertionError(str(error))
AssertionError: [Errno 32] Broken pipe</msg>
<status status="FAIL" starttime="20230804 11:11:34.066" endtime="20230804 11:11:35.505"/>
</kw>
<status status="FAIL" starttime="20230804 11:11:33.602" endtime="20230804 11:11:35.505"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${BDCUrl}${BDCHotelId}&amp;test=1</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.505" endtime="20230804 11:11:35.505"/>
</kw>
<kw name="Get Selectors For Far Date" library="Helpers">
<var>${day}</var>
<var>${month}</var>
<status status="NOT RUN" starttime="20230804 11:11:35.505" endtime="20230804 11:11:35.505"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-monthday</arg>
<arg>value</arg>
<arg>${day}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.505" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>id=check-availability__checkin-yearmonth</arg>
<arg>value</arg>
<arg>2023-${month}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Check availability')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Wait Until Network Is Idle" library="Browser">
<tag>HTTP</tag>
<tag>Wait</tag>
<doc>Waits until there has been at least one instance of 500 ms of no network traffic on the page after loading.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Is Element Visible" library="common">
<var>${reserveButton}</var>
<arg>//button[@name='book']</arg>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[contains(@id, 'unit')]</arg>
<arg>value</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'reserve')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=firstname</arg>
<arg>${firstName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=lastname</arg>
<arg>${lastName}</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=email</arg>
<arg>${id}@mailslurp.com</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${id}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>$ID</arg>
<arg>${id}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.506"/>
</kw>
<kw name="Click and Fill" library="common">
<arg>id=remarks</arg>
<arg>testRemark</arg>
<doc>A keyword combination of Click and Fill Text since most of the form fields need a click</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.506" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>//input[contains(@class, 'guest-name-input')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=firstname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=lastname</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=email</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>id=bp-control-group__label--notstayer</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>//span[contains(text(), 'Final details')]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//select[@data-phone-country]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Select Options By" library="Browser">
<arg>//select[@data-phone-country]</arg>
<arg>value</arg>
<arg>FI</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Selects options from select element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>id=phone</arg>
<arg>${phone}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Fill in Card Details" library="EC">
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Click" library="Browser">
<arg>//button[@name='book']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Set Browser Timeout" library="Browser">
<arg>${longer}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<kw name="Wait Until Visible" library="common">
<arg>//button[contains(@class, 'bui-modal__close')]</arg>
<doc>An easier keyword for waiting until an element is visible</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.507" endtime="20230804 11:11:35.507"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230804 11:11:33.600" endtime="20230804 11:11:35.508">[Errno 32] Broken pipe</status>
</test>
<test id="s1-s1-s1-s1-t2" name="Verify Emails and Get Booking No" line="48">
<kw name="Get Inbox ID" library="common">
<var>${id}</var>
<msg timestamp="20230804 11:11:35.524" level="TRACE">Arguments: [  ]</msg>
<kw name="Log To Console" library="BuiltIn">
<arg>Mailslurp: ${inbox_id}</arg>
<doc>Logs the given message to the console.</doc>
<msg timestamp="20230804 11:11:35.524" level="TRACE">Arguments: [ 'Mailslurp: 492aa3bb-9e4b-410a-a02c-84f13ace89e8' ]</msg>
<status status="FAIL" starttime="20230804 11:11:35.524" endtime="20230804 11:11:35.524"/>
</kw>
<status status="FAIL" starttime="20230804 11:11:35.523" endtime="20230804 11:11:35.524"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${confirmationEmail}</var>
<arg>${id}</arg>
<arg>is confirmed</arg>
<status status="NOT RUN" starttime="20230804 11:11:35.524" endtime="20230804 11:11:35.524"/>
</kw>
<kw name="Wait for Latest Booking Confirmation" library="MailSlurp">
<var>${welcomeEmail}</var>
<arg>${id}</arg>
<arg>Welcome to Exhibition Court Hotel</arg>
<status status="NOT RUN" starttime="20230804 11:11:35.524" endtime="20230804 11:11:35.524"/>
</kw>
<kw name="Get Confirmation Number from Email" library="MailSlurp">
<var>${bookingNo}</var>
<arg>${welcomeEmail}</arg>
<status status="NOT RUN" starttime="20230804 11:11:35.524" endtime="20230804 11:11:35.524"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${BDCNo}</arg>
<arg>${bookingNo}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="NOT RUN" starttime="20230804 11:11:35.524" endtime="20230804 11:11:35.524"/>
</kw>
<tag>exhibition_court</tag>
<status status="FAIL" starttime="20230804 11:11:35.523" endtime="20230804 11:11:35.524">Execution terminated by signal</status>
</test>
<test id="s1-s1-s1-s1-t3" name="Create A New Booking on Booking.com for a later date and verify Emails" line="55">
<tag>exhibition_court</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230804 11:11:35.526" endtime="20230804 11:11:35.527">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-t4" name="Cancel Booking via BDC" line="58">
<tag>exhibition_court</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230804 11:11:35.529" endtime="20230804 11:11:35.529">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-t5" name="Open Booking in MUI" line="61">
<tag>exhibition_court</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230804 11:11:35.531" endtime="20230804 11:11:35.531">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-t6" name="Cancel Booking in MUI" line="69">
<tag>exhibition_court</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230804 11:11:35.532" endtime="20230804 11:11:35.533">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-s1-s1-s1-t7" name="Start Creating a new Booking in MUI" line="76">
<tag>exhibition_court</tag>
<tag>robot:exit</tag>
<status status="FAIL" starttime="20230804 11:11:35.534" endtime="20230804 11:11:35.535">Test execution stopped due to a fatal error.</status>
</test>
<kw name="Close Browser" library="Browser" type="TEARDOWN">
<arg>ALL</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20230804 11:11:35.536" level="TRACE">Arguments: [ 'ALL' ]</msg>
<msg timestamp="20230804 11:11:35.537" level="INFO">Closed all browsers</msg>
<msg timestamp="20230804 11:11:35.537" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230804 11:11:35.536" endtime="20230804 11:11:35.537"/>
</kw>
<doc>A test suite for verifying modify booking functionality</doc>
<status status="FAIL" starttime="20230804 11:11:33.004" endtime="20230804 11:11:35.537"/>
</suite>
<status status="FAIL" starttime="20230804 11:11:33.004" endtime="20230804 11:11:35.538"/>
</suite>
<status status="FAIL" starttime="20230804 11:11:33.003" endtime="20230804 11:11:35.539"/>
</suite>
<doc>Argument file for running tests on EC Test Environment</doc>
<status status="FAIL" starttime="20230804 11:11:32.997" endtime="20230804 11:11:35.539"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="7" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="2" skip="0" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="7" skip="0">exhibition_court</stat>
</tag>
<suite>
<stat pass="0" fail="7" skip="0" id="s1" name="Testsuites">Testsuites</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1" name="MUI">Testsuites.MUI</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1-s1" name="EC">Testsuites.MUI.EC</stat>
<stat pass="0" fail="7" skip="0" id="s1-s1-s1-s1" name="Smoke">Testsuites.MUI.EC.Smoke</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
